{"version":3,"sources":["../node_modules/tslint/lib/rules/noImplicitDependenciesRule.js","../node_modules/builtin-modules/index.js"],"names":["Object","defineProperty","exports","value","templateObject_1","templateObject_2","tslib_1","__webpack_require__","builtins","fs","path","tsutils_1","ts","Lint","Rule","_super","apply","this","arguments","__extends","FAILURE_STRING_FACTORY","module","prototype","sourceFile","whitelist","ruleArguments","find","arg","Array","isArray","undefined","applyWithFunction","walk","dev","indexOf","optional","metadata","ruleName","description","descriptionDetails","Utils","dedent","__makeTemplateObject","optionsDescription","options","type","items","enum","minItems","maxItems","optionExamples","typescriptOnly","Rules","AbstractRule","ctx","dependencies","Set","_i","_a","findImports","length","name","isExternalModuleNameRelative","text","packageName","getPackageName","has","hasDependency","addFailureAtNode","fileName","result","packageJsonPath","current","prev","join","existsSync","dirname","findPackageJson","resolve","content","JSON","parse","readFileSync","replace","addDependencies","peerDependencies","devDependencies","optionalDependencies","getDependencies","parts","split","hasOwnProperty","add","blacklist","keys","process","binding","filter","el","test","sort"],"mappings":"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","file":"static/js/30.752bf622.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2017 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar builtins = require(\"builtin-modules\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar OPTION_DEV = \"dev\";\nvar OPTION_OPTIONAL = \"optional\";\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING_FACTORY = function (module) {\n        return \"Module '\" + module + \"' is not listed as dependency in package.json\";\n    };\n    Rule.prototype.apply = function (sourceFile) {\n        var whitelist = this.ruleArguments.find(function (arg) { return Array.isArray(arg); });\n        if (whitelist === null || whitelist === undefined) {\n            whitelist = [];\n        }\n        return this.applyWithFunction(sourceFile, walk, {\n            dev: this.ruleArguments.indexOf(OPTION_DEV) !== -1,\n            optional: this.ruleArguments.indexOf(OPTION_OPTIONAL) !== -1,\n            whitelist: whitelist,\n        });\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-implicit-dependencies\",\n        description: \"Disallows importing modules that are not listed as dependency in the project's package.json\",\n        descriptionDetails: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Disallows importing transient dependencies and modules installed above your package's root directory.\\n        \"], [\"\\n            Disallows importing transient dependencies and modules installed above your package's root directory.\\n        \"]))),\n        optionsDescription: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            By default the rule looks at `\\\"dependencies\\\"` and `\\\"peerDependencies\\\"`.\\n            By adding the `\\\"\", \"\\\"` option the rule also looks at `\\\"devDependencies\\\"`.\\n            By adding the `\\\"\", \"\\\"` option the rule also looks at `\\\"optionalDependencies\\\"`.\\n            An array of whitelisted modules can be added to skip checking their existence in package.json.\\n        \"], [\"\\n            By default the rule looks at \\\\`\\\"dependencies\\\"\\\\` and \\\\`\\\"peerDependencies\\\"\\\\`.\\n            By adding the \\\\`\\\"\", \"\\\"\\\\` option the rule also looks at \\\\`\\\"devDependencies\\\"\\\\`.\\n            By adding the \\\\`\\\"\", \"\\\"\\\\` option the rule also looks at \\\\`\\\"optionalDependencies\\\"\\\\`.\\n            An array of whitelisted modules can be added to skip checking their existence in package.json.\\n        \"])), OPTION_DEV, OPTION_OPTIONAL),\n        options: {\n            type: \"array\",\n            items: [\n                {\n                    type: \"string\",\n                    enum: [OPTION_DEV, OPTION_OPTIONAL],\n                },\n                {\n                    type: \"array\",\n                },\n            ],\n            minItems: 0,\n            maxItems: 3,\n        },\n        optionExamples: [true, [true, OPTION_DEV], [true, OPTION_OPTIONAL], [true, [\"src\", \"app\"]]],\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    var options = ctx.options;\n    var dependencies;\n    var whitelist = new Set(options.whitelist);\n    for (var _i = 0, _a = tsutils_1.findImports(ctx.sourceFile, 63 /* All */); _i < _a.length; _i++) {\n        var name = _a[_i];\n        if (!ts.isExternalModuleNameRelative(name.text)) {\n            var packageName = getPackageName(name.text, whitelist);\n            if (!whitelist.has(packageName) &&\n                builtins.indexOf(packageName) === -1 &&\n                !hasDependency(packageName)) {\n                ctx.addFailureAtNode(name, Rule.FAILURE_STRING_FACTORY(packageName));\n            }\n        }\n    }\n    function hasDependency(module) {\n        if (dependencies === undefined) {\n            dependencies = getDependencies(ctx.sourceFile.fileName, options);\n        }\n        return dependencies.has(module);\n    }\n}\nfunction getPackageName(name, whitelist) {\n    var parts = name.split(/\\//g);\n    if (name[0] !== \"@\" || whitelist.has(parts[0])) {\n        return parts[0];\n    }\n    if (whitelist.has(name)) {\n        return name;\n    }\n    return parts[0] + \"/\" + parts[1];\n}\nfunction getDependencies(fileName, options) {\n    var result = new Set();\n    var packageJsonPath = findPackageJson(path.resolve(path.dirname(fileName)));\n    if (packageJsonPath !== undefined) {\n        try {\n            // don't use require here to avoid caching\n            // remove BOM from file content before parsing\n            var content = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\").replace(/^\\uFEFF/, \"\"));\n            if (content.dependencies !== undefined) {\n                addDependencies(result, content.dependencies);\n            }\n            if (content.peerDependencies !== undefined) {\n                addDependencies(result, content.peerDependencies);\n            }\n            if (options.dev && content.devDependencies !== undefined) {\n                addDependencies(result, content.devDependencies);\n            }\n            if (options.optional && content.optionalDependencies !== undefined) {\n                addDependencies(result, content.optionalDependencies);\n            }\n        }\n        catch (_a) {\n            // treat malformed package.json files as empty\n        }\n    }\n    return result;\n}\nfunction addDependencies(result, dependencies) {\n    for (var name in dependencies) {\n        if (dependencies.hasOwnProperty(name)) {\n            result.add(name);\n        }\n    }\n}\nfunction findPackageJson(current) {\n    var prev;\n    do {\n        var fileName = path.join(current, \"package.json\");\n        if (fs.existsSync(fileName)) {\n            return fileName;\n        }\n        prev = current;\n        current = path.dirname(current);\n    } while (prev !== current);\n    return undefined;\n}\nvar templateObject_1, templateObject_2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noImplicitDependenciesRule.js\n// module id = 2072\n// module chunks = 30","'use strict';\n\nvar blacklist = [\n\t'freelist',\n\t'sys'\n];\n\nmodule.exports = Object.keys(process.binding('natives')).filter(function (el) {\n\treturn !/^_|^internal|\\//.test(el) && blacklist.indexOf(el) === -1;\n}).sort();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/builtin-modules/index.js\n// module id = 2188\n// module chunks = 30"],"sourceRoot":""}