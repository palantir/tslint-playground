webpackJsonp([132],{2039:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i,a,s=n(1),o=n(843),r=n(54),l=n(1116),c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return s.__extends(t,e),t.prototype.apply=function(e){return this.applyWithFunction(e,m,{firstLineOfMultiline:-1!==this.ruleArguments.indexOf("check-multiline-start")})},t.metadata={ruleName:"jsdoc-format",description:"Enforces basic format rules for JSDoc comments.",descriptionDetails:l.Utils.dedent(i||(i=s.__makeTemplateObject(["\n            The following rules are enforced for JSDoc comments (comments starting with `/**`):\n\n            * each line contains an asterisk and asterisks must be aligned\n            * each asterisk must be followed by either a space or a newline (except for the first and the last)\n            * the only characters before the asterisk on each line must be whitespace characters\n            * one line comments must start with `/** ` and end with `*/`\n            * multiline comments don't allow text after `/** ` in the first line (with option `\"",'"`)\n        '],["\n            The following rules are enforced for JSDoc comments (comments starting with \\`/**\\`):\n\n            * each line contains an asterisk and asterisks must be aligned\n            * each asterisk must be followed by either a space or a newline (except for the first and the last)\n            * the only characters before the asterisk on each line must be whitespace characters\n            * one line comments must start with \\`/** \\` and end with \\`*/\\`\n            * multiline comments don't allow text after \\`/** \\` in the first line (with option \\`\"",'"\\`)\n        '])),"check-multiline-start"),rationale:"Helps maintain a consistent, readable style for JSDoc comments.",optionsDescription:l.Utils.dedent(a||(a=s.__makeTemplateObject(['\n            You can optionally specify the option `"','"` to enforce the first line of a\n            multiline JSDoc comment to be empty.\n        '],['\n            You can optionally specify the option \\`"','"\\` to enforce the first line of a\n            multiline JSDoc comment to be empty.\n        '])),"check-multiline-start"),options:{type:"array",minItems:0,maxItems:1,items:{type:"string",enum:["check-multiline-start"]}},optionExamples:[!0,[!0,"check-multiline-start"]],type:"style",typescriptOnly:!1},t.ALIGNMENT_FAILURE_STRING="asterisks in jsdoc must be aligned",t.FORMAT_FAILURE_STRING="jsdoc is not formatted correctly on this line",t}(l.Rules.AbstractRule);function m(e){return o.forEachComment(e.sourceFile,function(t,n){var i=n.kind,a=n.pos,s=n.end;if(i===r.SyntaxKind.MultiLineCommentTrivia&&"*"===t[a+2]&&"*"!==t[a+3]&&"/"!==t[a+3]){var o=t.slice(a+3,s-2).split("\n"),l=o[0];if(1!==o.length){var m=function(e,t){var n=r.getLineAndCharacterOfPosition(e,t);return 0===n.line&&"\ufeff"===e.text[0]?n.character-1:n.character}(e.sourceFile,a+1);e.options.firstLineOfMultiline&&/\S/.test(l)&&e.addFailureAt(a,l.length+3,c.FORMAT_FAILURE_STRING);for(var h=a+l.length+4,u=o.length-1,f=1;f<u;++f){var d=o[f].endsWith("\r")?o[f].slice(0,-1):o[f];/^\s*\*(?: |$)/.test(d)||e.addFailureAt(h,d.length,c.FORMAT_FAILURE_STRING),d.indexOf("*")!==m&&e.addFailureAt(h,d.length,c.ALIGNMENT_FAILURE_STRING),h+=o[f].length+1}var p=o[u];-1!==p.search(/\S/)&&e.addFailure(h,s,c.FORMAT_FAILURE_STRING),p.length!==m&&e.addFailure(h,s,c.ALIGNMENT_FAILURE_STRING)}else" "===l[0]&&l.endsWith(" ")||e.addFailure(a,s,c.FORMAT_FAILURE_STRING)}})}t.Rule=c}});
//# sourceMappingURL=132.756af20a.chunk.js.map