{"version":3,"sources":["../node_modules/tslint/lib/rules/radixRule.js","../node_modules/tslint/lib/rules/code-examples/radix.examples.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","tsutils_1","ts","Lint","radix_examples_1","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","metadata","ruleName","description","rationale","Utils","dedent","__makeTemplateObject","optionsDescription","options","optionExamples","type","typescriptOnly","codeExamples","FAILURE_STRING","Rules","AbstractRule","isPropertyAccessParseInt","expression","isPropertyAccessExpression","name","text","isPropertyAccessOfIdentifier","identifers","isIdentifier","some","identifer","ctx","forEachChild","cb","node","isCallExpression","length","isPropertyAccessOfProperty","addFailureAtNode","templateObject_2","templateObject_3","config","pass","fail"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAsEAC,EAtEAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAAJ,EAAA,MACAK,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAmBA,OArBAT,EAAAW,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,IAGAT,EAAAU,UACAC,SAAA,QACAC,YAAA,wEACAC,UAAAf,EAAAgB,MAAAC,OAAAtB,MAAAC,EAAAsB,sBAAA,ouBACAC,mBAAA,oBACAC,QAAA,KACAC,iBAAA,GACAC,KAAA,gBACAC,gBAAA,EACAC,aAAAvB,EAAAuB,cAGAtB,EAAAuB,eAAA,0BACAvB,EAtBA,CAuBCF,EAAA0B,MAAAC,cAKD,SAAAC,EAAAC,GACA,OAAA/B,EAAAgC,2BAAAD,IAAA,aAAAA,EAAAE,KAAAC,KAEA,SAAAC,EAAAJ,EAAAK,GACA,OAAApC,EAAAgC,2BAAAD,IACA/B,EAAAqC,aAAAN,eACAK,EAAAE,KAAA,SAAAC,GAA8C,OAAAR,aAAAG,OAAAK,IAS9C,SAAA1B,EAAA2B,GACA,OAAAvC,EAAAwC,aAAAD,EAAA7B,WAAA,SAAA+B,EAAAC,GAnBA,IAAAZ,EAqCA,OAjBA/B,EAAA4C,iBAAAD,IACA,IAAAA,EAAAnC,UAAAqC,SArBAd,EAuBAY,EAAAZ,WAtBA/B,EAAAqC,aAAAN,IAAA,aAAAA,EAAAG,MAwBAJ,EAAAa,EAAAZ,aACAI,EAAAQ,EAAAZ,YACA,SACA,SACA,YAGAD,EAAAa,EAAAZ,aArBA,SAAAA,EAAAK,GACA,OAAApC,EAAAgC,2BAAAD,IACA/B,EAAAgC,2BAAAD,eACAK,EAAAE,KAAA,SAAAC,GACA,OAAAR,aAAAE,KAAAC,OAAAK,IAkBAO,CAAAH,EAAAZ,YAAA,YACAI,EAAAQ,EAAAZ,uBAAA,sBACAS,EAAAO,iBAAAJ,EAAAvC,EAAAuB,gBAEA1B,EAAAwC,aAAAE,EAAAD,KAtCA/C,EAAAS,0CC9BAX,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAWAC,EAAAmD,EAAAC,EAXAnD,EAAAC,EAAA,GACAG,EAAAH,EAAA,MAEAJ,EAAA+B,eAEAV,YAAA,yEACAkC,OAAAhD,EAAAgB,MAAAC,OAAAtB,MAAAC,EAAAsB,sBAAA,uDAAqJ,yDACrJ+B,KAAAjD,EAAAgB,MAAAC,OAAA6B,MAAAlD,EAAAsB,sBAAA,yMAAiS,2MACjSgC,KAAAlD,EAAAgB,MAAAC,OAAA8B,MAAAnD,EAAAsB,sBAAA,qMAA6R","file":"static/js/10.25dd4a2f.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar radix_examples_1 = require(\"./code-examples/radix.examples\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"radix\",\n        description: \"Requires the radix parameter to be specified when calling `parseInt`.\",\n        rationale: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            From [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt):\\n            > Always specify this parameter to eliminate reader confusion and to guarantee predictable behavior.\\n            > Different implementations produce different results when a radix is not specified, usually defaulting the value to 10.\"], [\"\\n            From [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt):\\n            > Always specify this parameter to eliminate reader confusion and to guarantee predictable behavior.\\n            > Different implementations produce different results when a radix is not specified, usually defaulting the value to 10.\"]))),\n        optionsDescription: \"Not configurable.\",\n        options: null,\n        optionExamples: [true],\n        type: \"functionality\",\n        typescriptOnly: false,\n        codeExamples: radix_examples_1.codeExamples,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = \"Missing radix parameter\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction isParseInt(expression) {\n    return tsutils_1.isIdentifier(expression) && expression.text === \"parseInt\";\n}\nfunction isPropertyAccessParseInt(expression) {\n    return tsutils_1.isPropertyAccessExpression(expression) && expression.name.text === \"parseInt\";\n}\nfunction isPropertyAccessOfIdentifier(expression, identifers) {\n    return (tsutils_1.isPropertyAccessExpression(expression) &&\n        tsutils_1.isIdentifier(expression.expression) &&\n        identifers.some(function (identifer) { return expression.expression.text === identifer; }));\n}\nfunction isPropertyAccessOfProperty(expression, identifers) {\n    return (tsutils_1.isPropertyAccessExpression(expression) &&\n        tsutils_1.isPropertyAccessExpression(expression.expression) &&\n        identifers.some(function (identifer) {\n            return expression.expression.name.text === identifer;\n        }));\n}\nfunction walk(ctx) {\n    return ts.forEachChild(ctx.sourceFile, function cb(node) {\n        if (tsutils_1.isCallExpression(node) &&\n            node.arguments.length === 1 &&\n            // parseInt(\"123\")\n            (isParseInt(node.expression) ||\n                // window.parseInt(\"123\") || global.parseInt(\"123\") || Number.parseInt(\"123\")\n                (isPropertyAccessParseInt(node.expression) &&\n                    isPropertyAccessOfIdentifier(node.expression, [\n                        \"global\",\n                        \"window\",\n                        \"Number\",\n                    ])) ||\n                // window.Number.parseInt(\"123\") || global.Number.parseInt(\"123\")\n                (isPropertyAccessParseInt(node.expression) &&\n                    isPropertyAccessOfProperty(node.expression, [\"Number\"]) &&\n                    isPropertyAccessOfIdentifier(node.expression.expression, [\"global\", \"window\"])))) {\n            ctx.addFailureAtNode(node, Rule.FAILURE_STRING);\n        }\n        return ts.forEachChild(node, cb);\n    });\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/radixRule.js\n// module id = 2136\n// module chunks = 10","\"use strict\";\n/**\n * @license\n * Copyright 2018 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Lint = require(\"../../index\");\n// tslint:disable: object-literal-sort-keys\nexports.codeExamples = [\n    {\n        description: \"Requires the inclusion of the radix parameter when calling `parseInt`.\",\n        config: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            \\\"rules\\\": { \\\"radix\\\": true }\\n        \"], [\"\\n            \\\"rules\\\": { \\\"radix\\\": true }\\n        \"]))),\n        pass: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            const x: string = '11';\\n            const dec: number = parseInt(x, 10);\\n            const bin: number = parseInt(x, 2);\\n            const hex: number = parseInt(x, 16);\\n        \"], [\"\\n            const x: string = '11';\\n            const dec: number = parseInt(x, 10);\\n            const bin: number = parseInt(x, 2);\\n            const hex: number = parseInt(x, 16);\\n        \"]))),\n        fail: Lint.Utils.dedent(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n            const x: string = '11';\\n            const dec: number = parseInt(x);\\n            const bin: number = parseInt(x, 2);\\n            const hex: number = parseInt(x, 16);\\n        \"], [\"\\n            const x: string = '11';\\n            const dec: number = parseInt(x);\\n            const bin: number = parseInt(x, 2);\\n            const hex: number = parseInt(x, 16);\\n        \"]))),\n    },\n];\nvar templateObject_1, templateObject_2, templateObject_3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/code-examples/radix.examples.js\n// module id = 2199\n// module chunks = 10"],"sourceRoot":""}