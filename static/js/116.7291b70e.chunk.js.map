{"version":3,"sources":["../node_modules/tslint/lib/rules/noConditionalAssignmentRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","tsutils_1","ts","Lint","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","metadata","ruleName","description","descriptionDetails","rationale","Utils","dedent","__makeTemplateObject","optionsDescription","options","optionExamples","type","typescriptOnly","FAILURE_STRING","Rules","AbstractRule","ctx","checking","forEachChild","cb","node","kind","isNodeKind","SyntaxKind","ConditionalExpression","check","condition","whenTrue","whenFalse","IfStatement","expression","thenStatement","maybeCallback","elseStatement","DoStatement","WhileStatement","statement","ForStatement","initializer","incrementor","BinaryExpression","isAssignmentKind","operatorToken","addFailureAtNode","left","right","ParenthesizedExpression","NonNullExpression","AsExpression","TypeAssertionExpression","PrefixUnaryExpression","operand","old","noCheck","undefined"],"mappings":"sDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAmGAC,EAnGAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAmBA,OArBAR,EAAAU,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,IAGAT,EAAAU,UACAC,SAAA,4BACAC,YAAA,oDACAC,mBAAA,yGACAC,UAAAf,EAAAgB,MAAAC,OAAAtB,MAAAC,EAAAsB,sBAAA,oeACAC,mBAAA,oBACAC,QAAA,KACAC,iBAAA,GACAC,KAAA,gBACAC,gBAAA,GAGAtB,EAAAuB,eAAA,uDACAvB,EAtBA,CAuBCD,EAAAyB,MAAAC,cAED,SAAAhB,EAAAiB,GACA,IAAAC,EAAA,EACA,OAAA7B,EAAA8B,aAAAF,EAAAnB,WAAAsB,GACA,SAAAA,EAAAC,GACA,IAAAC,EAAAD,EAAAC,KACA,GAAAlC,EAAAmC,WAAAD,GAAA,CAGA,OAAAA,GACA,KAAAjC,EAAAmC,WAAAC,sBAIA,OAHAC,EAAAL,EAAAM,WACAP,EAAAC,EAAAO,eACAR,EAAAC,EAAAQ,WAEA,KAAAxC,EAAAmC,WAAAM,YAIA,OAHAJ,EAAAL,EAAAU,YACAX,EAAAC,EAAAW,oBACAC,EAAAb,EAAAC,EAAAa,eAEA,KAAA7C,EAAAmC,WAAAW,YACA,KAAA9C,EAAAmC,WAAAY,eAGA,OAFAV,EAAAL,EAAAU,iBACAX,EAAAC,EAAAgB,WAEA,KAAAhD,EAAAmC,WAAAc,aAKA,OAJAL,EAAAb,EAAAC,EAAAkB,aACAN,EAAAP,EAAAL,EAAAM,WACAM,EAAAb,EAAAC,EAAAmB,kBACApB,EAAAC,EAAAgB,WAGA,OAAAnB,EACA,OAAAI,GACA,KAAAjC,EAAAmC,WAAAiB,iBAMA,OALArD,EAAAsD,iBAAArB,EAAAsB,cAAArB,OACAL,EAAA2B,iBAAAvB,EAAA9B,EAAAuB,gBAEAM,EAAAC,EAAAwB,WACAzB,EAAAC,EAAAyB,OAEA,KAAAzD,EAAAmC,WAAAuB,wBACA,KAAA1D,EAAAmC,WAAAwB,kBACA,KAAA3D,EAAAmC,WAAAyB,aACA,KAAA5D,EAAAmC,WAAA0B,wBACA,OAAA9B,EAAAC,EAAAU,YACA,KAAA1C,EAAAmC,WAAA2B,sBACA,OAAA/B,EAAAC,EAAA+B,SACA,QACA,OAUA,SAAA/B,GACA,IAAAgC,EAAAnC,EACAA,EAAA,EACA7B,EAAA8B,aAAAE,EAAAD,GACAF,EAAAmC,EAdAC,CAAAjC,GAGA,OAAAhC,EAAA8B,aAAAE,EAAAD,IAEA,SAAAM,EAAAL,KACAH,EACAE,EAAAC,KACAH,GASA,SAAAe,EAAAb,EAAAC,QACAkC,IAAAlC,GACAD,EAAAC,GApEAtC,EAAAQ","file":"static/js/116.7291b70e.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2015 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-conditional-assignment\",\n        description: \"Disallows any type of assignment in conditionals.\",\n        descriptionDetails: \"This applies to `do-while`, `for`, `if`, and `while` statements and conditional (ternary) expressions.\",\n        rationale: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Assignments in conditionals are often typos:\\n            for example `if (var1 = var2)` instead of `if (var1 == var2)`.\\n            They also can be an indicator of overly clever code which decreases maintainability.\"], [\"\\n            Assignments in conditionals are often typos:\\n            for example \\\\`if (var1 = var2)\\\\` instead of \\\\`if (var1 == var2)\\\\`.\\n            They also can be an indicator of overly clever code which decreases maintainability.\"]))),\n        optionsDescription: \"Not configurable.\",\n        options: null,\n        optionExamples: [true],\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = \"Assignments in conditional expressions are forbidden\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    var checking = 0;\n    return ts.forEachChild(ctx.sourceFile, cb);\n    function cb(node) {\n        var kind = node.kind;\n        if (!tsutils_1.isNodeKind(kind)) {\n            return; // return early for tokens\n        }\n        switch (kind) {\n            case ts.SyntaxKind.ConditionalExpression:\n                check(node.condition);\n                cb(node.whenTrue);\n                cb(node.whenFalse);\n                return;\n            case ts.SyntaxKind.IfStatement:\n                check(node.expression);\n                cb(node.thenStatement);\n                maybeCallback(cb, node.elseStatement);\n                return;\n            case ts.SyntaxKind.DoStatement:\n            case ts.SyntaxKind.WhileStatement:\n                check(node.expression);\n                cb(node.statement);\n                return;\n            case ts.SyntaxKind.ForStatement:\n                maybeCallback(cb, node.initializer);\n                maybeCallback(check, node.condition);\n                maybeCallback(cb, node.incrementor);\n                cb(node.statement);\n                return;\n        }\n        if (checking !== 0) {\n            switch (kind) {\n                case ts.SyntaxKind.BinaryExpression:\n                    if (tsutils_1.isAssignmentKind(node.operatorToken.kind)) {\n                        ctx.addFailureAtNode(node, Rule.FAILURE_STRING);\n                    }\n                    cb(node.left);\n                    cb(node.right);\n                    return;\n                case ts.SyntaxKind.ParenthesizedExpression:\n                case ts.SyntaxKind.NonNullExpression:\n                case ts.SyntaxKind.AsExpression:\n                case ts.SyntaxKind.TypeAssertionExpression:\n                    return cb(node.expression);\n                case ts.SyntaxKind.PrefixUnaryExpression:\n                    return cb(node.operand);\n                default:\n                    return noCheck(node);\n            }\n        }\n        return ts.forEachChild(node, cb);\n    }\n    function check(node) {\n        ++checking;\n        cb(node);\n        --checking;\n    }\n    function noCheck(node) {\n        var old = checking;\n        checking = 0;\n        ts.forEachChild(node, cb);\n        checking = old;\n    }\n}\nfunction maybeCallback(cb, node) {\n    if (node !== undefined) {\n        cb(node);\n    }\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noConditionalAssignmentRule.js\n// module id = 2056\n// module chunks = 116"],"sourceRoot":""}