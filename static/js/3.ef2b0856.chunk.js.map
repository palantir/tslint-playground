{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/html/htmlMode.js","../node_modules/monaco-editor/esm/vs/language/html/workerManager.js","../node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js"],"names":["defaults","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerDocumentHighlightProvider","registerLinkProvider","registerFoldingRangeProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","__webpack_require__","d","__webpack_exports__","WorkerManager","Promise","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","createData","languageSettings","options","label","getProxy","p","completeCallback","errorCallback","r","resources","then","_","withSyncedResources","c","e","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Range","DiagnosticsAdapter","_languageId","_disposables","_listener","Object","create","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","getModels","forEach","key","resource","doValidation","diagnostics","markers","map","code","diag","String","severity","lsSeverity","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","getModel","undefined","err","console","error","fromPosition","position","column","lineNumber","fromRange","getStartPosition","getEndPosition","toRange","toCompletionItemKind","kind","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","text","newText","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","token","getWordUntilPosition","wireCancellationToken","doComplete","info","items","entry","item","insertText","sortText","filterText","documentation","detail","insertTextFormat","value","isIncomplete","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","mKind","DocumentHighlightKind","Read","Write","toHighlighKind","DocumentLinkAdapter","provideLinks","findDocumentLinks","url","target","fromFormattingOptions","tabSize","insertSpaces","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","edits","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","FoldingRangeAdapter","provideFoldingRanges","context","ranges","result","startLine","endLine","Comment","FoldingRangeKind","Imports","Region","toFoldingRangeKind","promise","cancel","onCancellationRequested","Position","Location","ColorInformation","ColorPresentation","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","WorkspaceEdit","is","candidate","Is","objectLiteral","number","one","two","three","four","defined","string","red","green","blue","alpha","color","additionalTextEdits","typedArray","startCharacter","endCharacter","location","relatedInformation","title","command","args","replace","insert","del","textDocument","VersionedTextDocumentIdentifier","Array","isArray","changes","documentChanges","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","textDocumentEdit","textEditChange","keys","getTextEditChange","version","PlainText","Markdown","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","fromPlainText","plainText","language","contents","parameters","Namespace","Package","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","selectionRange","children","deprecated","boolean","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","only","commandOrEdit","data","DocumentLink","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","call","check","every"],"mappings":"iHAOA,SAAAA,GACA,IAAAC,EAAA,IAAAC,EAAA,EAAAF,GACAG,EAAA,WAEA,IADA,IAAAC,KACAC,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CD,EAAAC,GAAAC,UAAAD,GAEA,OAAAJ,EAAAO,yBAAAC,MAAAR,EAAAG,IAEAM,EAAAV,EAAAU,WAEAC,OAAAC,UAAAC,+BAAAH,EAAA,IAAAI,EAAA,EAAAX,IACAQ,OAAAC,UAAAG,kCAAAL,EAAA,IAAAI,EAAA,EAAAX,IACAQ,OAAAC,UAAAI,qBAAAN,EAAA,IAAAI,EAAA,EAAAX,IACAQ,OAAAC,UAAAK,6BAAAP,EAAA,IAAAI,EAAA,EAAAX,IAEA,SAAAO,IACAC,OAAAC,UAAAM,uCAAAR,EAAA,IAAAI,EAAA,EAAAX,IACAQ,OAAAC,UAAAO,4CAAAT,EAAA,IAAAI,EAAA,EAAAX,IACA,IAAAW,EAAA,EAAAJ,EAAAP,EAAAH,mBA1BAc,EAAAM,EAAA,yCCAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAKA,IAAAC,EAAAb,OAAAa,QAEAD,EAAA,WACA,SAAAA,EAAAvB,GACA,IAAAyB,EAAAC,KACAA,KAAAC,UAAA3B,EACA0B,KAAAE,QAAA,KACAF,KAAAG,mBAAAC,YAAA,WAA2D,OAAAL,EAAAM,gBAA+B,KAC1FL,KAAAM,cAAA,EACAN,KAAAO,sBAAAP,KAAAC,UAAAO,YAAA,WAA6E,OAAAT,EAAAU,gBAqD7E,OAnDAZ,EAAAa,UAAAD,YAAA,WACAT,KAAAE,UACAF,KAAAE,QAAAS,UACAX,KAAAE,QAAA,MAEAF,KAAAY,QAAA,MAEAf,EAAAa,UAAAC,QAAA,WACAE,cAAAb,KAAAG,oBACAH,KAAAO,sBAAAI,UACAX,KAAAS,eAEAZ,EAAAa,UAAAL,aAAA,WACAL,KAAAE,UAGAY,KAAAC,MAAAf,KAAAM,cA1BA,MA4BAN,KAAAS,gBAGAZ,EAAAa,UAAAM,WAAA,WAeA,OAdAhB,KAAAM,cAAAQ,KAAAC,MACAf,KAAAY,UACAZ,KAAAE,QAAAjB,OAAAgC,OAAAC,iBAEAC,SAAA,8BAEAC,YACAC,iBAAArB,KAAAC,UAAAqB,QACAtC,WAAAgB,KAAAC,UAAAjB,YAEAuC,MAAAvB,KAAAC,UAAAjB,aAEAgB,KAAAY,QAAAZ,KAAAE,QAAAsB,YAEAxB,KAAAY,SAEAf,EAAAa,UAAA5B,yBAAA,WAGA,IAFA,IAKA8B,EAUAa,EACAC,EACAC,EACAC,EAlBA7B,EAAAC,KACA6B,KACAlD,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CkD,EAAAlD,GAAAC,UAAAD,GAGA,OASA8C,EATAzB,KAAAgB,aAAAc,KAAA,SAAAvD,GACAqC,EAAArC,IACSuD,KAAA,SAAAC,GACT,OAAAhC,EAAAG,QAAA8B,oBAAAH,KACSC,KAAA,SAAAC,GAAqB,OAAAnB,IAQ9BgB,EAAA,IAAA9B,EAAA,SAAAmC,EAAAC,GACAR,EAAAO,EACAN,EAAAO,GACK,cACLT,EAAAK,KAAAJ,EAAAC,GACAC,GAXA/B,EA5DA,sQCPA,IAAAsC,EAAAzC,EAAA,MAMA0C,EAAAnD,OAAAmD,MAEAC,EAAA,WACA,SAAAA,EAAAC,EAAApC,EAAA5B,GACA,IAAAyB,EAAAC,KACAA,KAAAsC,cACAtC,KAAAE,UACAF,KAAAuC,gBACAvC,KAAAwC,UAAAC,OAAAC,OAAA,MACA,IAAAC,EAAA,SAAAC,GACA,IAIAC,EAJAC,EAAAF,EAAAG,YACAD,IAAA/C,EAAAuC,cAIAvC,EAAAyC,UAAAI,EAAAI,IAAAC,YAAAL,EAAAM,mBAAA,WACAC,aAAAN,GACAA,EAAAO,WAAA,WAAiD,OAAArD,EAAAsD,YAAAT,EAAAI,IAAAF,IAA+C,OAEhG/C,EAAAsD,YAAAT,EAAAI,IAAAF,KAEAQ,EAAA,SAAAV,GACA3D,OAAAgC,OAAAsC,gBAAAX,EAAA7C,EAAAuC,gBACA,IAAAkB,EAAAZ,EAAAI,IAAAC,WACAQ,EAAA1D,EAAAyC,UAAAgB,GACAC,IACAA,EAAA9C,iBACAZ,EAAAyC,UAAAgB,KAGAxD,KAAAuC,aAAAmB,KAAAzE,OAAAgC,OAAA0C,iBAAAhB,IACA3C,KAAAuC,aAAAmB,KAAAzE,OAAAgC,OAAA2C,mBAAA,SAAAhB,GACAU,EAAAV,MAEA5C,KAAAuC,aAAAmB,KAAAzE,OAAAgC,OAAA4C,yBAAA,SAAAC,GACAR,EAAAQ,EAAAlB,OACAD,EAAAmB,EAAAlB,UAEA5C,KAAAuC,aAAAmB,KAAApF,EAAAkC,YAAA,SAAAuB,GACA9C,OAAAgC,OAAA8C,YAAAC,QAAA,SAAApB,GACAA,EAAAG,cAAAhD,EAAAuC,cACAgB,EAAAV,GACAD,EAAAC,SAIA5C,KAAAuC,aAAAmB,MACA/C,QAAA,WACA,QAAAsD,KAAAlE,EAAAyC,UACAzC,EAAAyC,UAAAyB,GAAAtD,aAIA1B,OAAAgC,OAAA8C,YAAAC,QAAArB,GAgBA,OAdAN,EAAA3B,UAAAC,QAAA,WACAX,KAAAuC,aAAAyB,QAAA,SAAArE,GAAgD,OAAAA,KAAAgB,YAChDX,KAAAuC,iBAEAF,EAAA3B,UAAA2C,YAAA,SAAAa,EAAAlF,GACAgB,KAAAE,QAAAgE,GAAApC,KAAA,SAAArD,GACA,OAAAA,EAAA0F,aAAAD,EAAAjB,YAAAnB,KAAA,SAAAsC,GACA,IAAAC,EAAAD,EAAAE,IAAA,SAAA3E,GAA4D,OAqB5D4E,EAAA,kBADAC,EApB4D7E,GAqB5D4E,KAAAE,OAAAD,EAAAD,MAAAC,EAAAD,MAEAG,SAbA,SAAAC,GACA,OAAAA,GACA,KAAAxC,EAAA,EAAAyC,MAAA,OAAA3F,OAAA4F,eAAAD,MACA,KAAAzC,EAAA,EAAA2C,QAAA,OAAA7F,OAAA4F,eAAAC,QACA,KAAA3C,EAAA,EAAA4C,YAAA,OAAA9F,OAAA4F,eAAAG,KACA,KAAA7C,EAAA,EAAA8C,KAAA,OAAAhG,OAAA4F,eAAAI,KACA,QACA,OAAAhG,OAAA4F,eAAAG,MAMAE,CAAAV,EAAAE,UACAS,gBAAAX,EAAAY,MAAAC,MAAAC,KAAA,EACAC,YAAAf,EAAAY,MAAAC,MAAAG,UAAA,EACAC,cAAAjB,EAAAY,MAAAM,IAAAJ,KAAA,EACAK,UAAAnB,EAAAY,MAAAM,IAAAF,UAAA,EACAI,QAAApB,EAAAoB,QACArB,OACAsB,OAAArB,EAAAqB,QAVA,IAAArB,EACAD,IApBAtF,OAAAgC,OAAAsC,gBAAAtE,OAAAgC,OAAA6E,SAAA5B,GAAAlF,EAAAqF,OAESvC,UAAAiE,EAAA,SAAAC,GACTC,QAAAC,MAAAF,MAGA3D,EAnEA,GA8FA,SAAA8D,EAAAC,GACA,GAAAA,EAGA,OAAYZ,UAAAY,EAAAC,OAAA,EAAAf,KAAAc,EAAAE,WAAA,GAEZ,SAAAC,EAAAnB,GACA,GAAAA,EAGA,OAAYC,MAAAc,EAAAf,EAAAoB,oBAAAd,IAAAS,EAAAf,EAAAqB,mBAEZ,SAAAC,EAAAtB,GACA,GAAAA,EAGA,WAAAhD,EAAAgD,EAAAC,MAAAC,KAAA,EAAAF,EAAAC,MAAAG,UAAA,EAAAJ,EAAAM,IAAAJ,KAAA,EAAAF,EAAAM,IAAAF,UAAA,GAEA,SAAAmB,EAAAC,GACA,IAAAC,EAAA5H,OAAAC,UAAA4H,mBACA,OAAAF,GACA,KAAAzE,EAAA,EAAA4E,KAAA,OAAAF,EAAAE,KACA,KAAA5E,EAAA,EAAA6E,OAAA,OAAAH,EAAAG,OACA,KAAA7E,EAAA,EAAA8E,SAAA,OAAAJ,EAAAI,SACA,KAAA9E,EAAA,EAAA+E,YAAA,OAAAL,EAAAK,YACA,KAAA/E,EAAA,EAAAgF,MAAA,OAAAN,EAAAM,MACA,KAAAhF,EAAA,EAAAiF,SAAA,OAAAP,EAAAO,SACA,KAAAjF,EAAA,EAAAkF,MAAA,OAAAR,EAAAQ,MACA,KAAAlF,EAAA,EAAAmF,UAAA,OAAAT,EAAAS,UACA,KAAAnF,EAAA,EAAAoF,OAAA,OAAAV,EAAAU,OACA,KAAApF,EAAA,EAAAqF,SAAA,OAAAX,EAAAW,SACA,KAAArF,EAAA,EAAAsF,KAAA,OAAAZ,EAAAY,KACA,KAAAtF,EAAA,EAAAuF,MAAA,OAAAb,EAAAa,MACA,KAAAvF,EAAA,EAAAwF,KAAA,OAAAd,EAAAc,KACA,KAAAxF,EAAA,EAAAyF,QAAA,OAAAf,EAAAe,QACA,KAAAzF,EAAA,EAAA0F,QAAA,OAAAhB,EAAAgB,QACA,KAAA1F,EAAA,EAAA2F,MAAA,OAAAjB,EAAAiB,MACA,KAAA3F,EAAA,EAAA4F,KAAA,OAAAlB,EAAAkB,KACA,KAAA5F,EAAA,EAAA6F,UAAA,OAAAnB,EAAAmB,UAEA,OAAAnB,EAAAW,SA0BA,SAAAS,EAAAC,GACA,GAAAA,EAGA,OACA9C,MAAAsB,EAAAwB,EAAA9C,OACA+C,KAAAD,EAAAE,SA4CA,IAAAC,EAAA,WACA,SAAAA,EAAAnI,GACAF,KAAAE,UA2CA,OAzCAuC,OAAA6F,eAAAD,EAAA3H,UAAA,qBACA6H,IAAA,WACA,iCAEAC,YAAA,EACAC,cAAA,IAEAJ,EAAA3H,UAAAgI,uBAAA,SAAA9F,EAAAwD,EAAAuC,GACA/F,EAAAgG,qBAAAxC,GAAA,IACAlC,EAAAtB,EAAAI,IACA,OAAA6F,EAAAF,EAAA3I,KAAAE,QAAAgE,GAAApC,KAAA,SAAArD,GACA,OAAAA,EAAAqK,WAAA5E,EAAAjB,WAAAkD,EAAAC,MACStE,KAAA,SAAAiH,GACT,GAAAA,EAAA,CAGA,IAAAC,EAAAD,EAAAC,MAAA1E,IAAA,SAAA2E,GACA,IAAAC,GACA3H,MAAA0H,EAAA1H,MACA4H,WAAAF,EAAAE,WACAC,SAAAH,EAAAG,SACAC,WAAAJ,EAAAI,WACAC,cAAAL,EAAAK,cACAC,OAAAN,EAAAM,OACA3C,KAAAD,EAAAsC,EAAArC,OASA,OAPAqC,EAAAf,WACAgB,EAAA9D,MAAAsB,EAAAuC,EAAAf,SAAA9C,OACA8D,EAAAC,WAAAF,EAAAf,SAAAE,SAEAa,EAAAO,mBAAArH,EAAA,EAAA0F,UACAqB,EAAAC,YAAuCM,MAAAP,EAAAC,aAEvCD,IAEA,OACAQ,aAAAX,EAAAW,aACAV,cAIAX,EA7CA,GA8EA,IAAAsB,EAAA,WACA,SAAAA,EAAAzJ,GACAF,KAAAE,UAcA,OAZAyJ,EAAAjJ,UAAAkJ,0BAAA,SAAAhH,EAAAwD,EAAAuC,GACA,IAAAzE,EAAAtB,EAAAI,IACA,OAAA6F,EAAAF,EAAA3I,KAAAE,QAAAgE,GAAApC,KAAA,SAAArD,GAA2F,OAAAA,EAAAoL,uBAAA3F,EAAAjB,WAAAkD,EAAAC,MAAqFtE,KAAA,SAAAkH,GAChL,GAAAA,EAGA,OAAAA,EAAA1E,IAAA,SAAA4E,GAA8C,OAC9C9D,MAAAsB,EAAAwC,EAAA9D,OACAwB,KArBA,SAAAA,GACA,IAAAkD,EAAA7K,OAAAC,UAAA6K,sBACA,OAAAnD,GACA,KAAAzE,EAAA,EAAA6H,KAAA,OAAAF,EAAAE,KACA,KAAA7H,EAAA,EAAA8H,MAAA,OAAAH,EAAAG,MACA,KAAA9H,EAAA,EAAA4E,KAAA,OAAA+C,EAAA/C,KAEA,OAAA+C,EAAA/C,KAcAmD,CAAAhB,EAAAtC,aAIA+C,EAhBA,GAmBAQ,EAAA,WACA,SAAAA,EAAAjK,GACAF,KAAAE,UAcA,OAZAiK,EAAAzJ,UAAA0J,aAAA,SAAAxH,EAAA+F,GACA,IAAAzE,EAAAtB,EAAAI,IACA,OAAA6F,EAAAF,EAAA3I,KAAAE,QAAAgE,GAAApC,KAAA,SAAArD,GAA2F,OAAAA,EAAA4L,kBAAAnG,EAAAjB,cAAwDnB,KAAA,SAAAkH,GACnJ,GAAAA,EAGA,OAAAA,EAAA1E,IAAA,SAAA4E,GAA8C,OAC9C9D,MAAAsB,EAAAwC,EAAA9D,OACAkF,IAAApB,EAAAqB,cAIAJ,EAhBA,GAmBA,SAAAK,EAAAlJ,GACA,OACAmJ,QAAAnJ,EAAAmJ,QACAC,aAAApJ,EAAAoJ,cAGA,IAAAC,EAAA,WACA,SAAAA,EAAAzK,GACAF,KAAAE,UAaA,OAXAyK,EAAAjK,UAAAkK,+BAAA,SAAAhI,EAAAtB,EAAAqH,GACA,IAAAzE,EAAAtB,EAAAI,IACA,OAAA6F,EAAAF,EAAA3I,KAAAE,QAAAgE,GAAApC,KAAA,SAAArD,GACA,OAAAA,EAAAoM,OAAA3G,EAAAjB,WAAA,KAAAuH,EAAAlJ,IAAAQ,KAAA,SAAAgJ,GACA,GAAAA,GAAA,IAAAA,EAAAjM,OAGA,OAAAiM,EAAAxG,IAAA2D,SAIA0C,EAfA,GAkBAI,EAAA,WACA,SAAAA,EAAA7K,GACAF,KAAAE,UAaA,OAXA6K,EAAArK,UAAAsK,oCAAA,SAAApI,EAAAwC,EAAA9D,EAAAqH,GACA,IAAAzE,EAAAtB,EAAAI,IACA,OAAA6F,EAAAF,EAAA3I,KAAAE,QAAAgE,GAAApC,KAAA,SAAArD,GACA,OAAAA,EAAAoM,OAAA3G,EAAAjB,WAAAsD,EAAAnB,GAAAoF,EAAAlJ,IAAAQ,KAAA,SAAAgJ,GACA,GAAAA,GAAA,IAAAA,EAAAjM,OAGA,OAAAiM,EAAAxG,IAAA2D,SAIA8C,EAfA,GAkBAE,EAAA,WACA,SAAAA,EAAA/K,GACAF,KAAAE,UAoBA,OAlBA+K,EAAAvK,UAAAwK,qBAAA,SAAAtI,EAAAuI,EAAAxC,GACA,IAAAzE,EAAAtB,EAAAI,IACA,OAAA6F,EAAAF,EAAA3I,KAAAE,QAAAgE,GAAApC,KAAA,SAAArD,GAA2F,OAAAA,EAAAyM,qBAAAhH,EAAAjB,WAAAkI,KAAoErJ,KAAA,SAAAsJ,GAC/J,GAAAA,EAGA,OAAAA,EAAA9G,IAAA,SAAAc,GACA,IAAAiG,GACAhG,MAAAD,EAAAkG,UAAA,EACA5F,IAAAN,EAAAmG,QAAA,GAKA,MAHA,qBAAAnG,EAAAwB,OACAyE,EAAAzE,KASA,SAAAA,GACA,OAAAA,GACA,KAAAzE,EAAA,EAAAqJ,QAAA,OAAAvM,OAAAC,UAAAuM,iBAAAD,QACA,KAAArJ,EAAA,EAAAuJ,QAAA,OAAAzM,OAAAC,UAAAuM,iBAAAC,QACA,KAAAvJ,EAAA,EAAAwJ,OAAA,OAAA1M,OAAAC,UAAAuM,iBAAAE,OAEA,OAfAC,CAAAxG,EAAAwB,OAEAyE,QAIAJ,EAtBA,GAoCA,SAAApC,EAAAF,EAAAkD,GAIA,OAHAA,EAAAC,QACAnD,EAAAoD,wBAAA,WAAmD,OAAAF,EAAAC,WAEnDD,sCCvZA,IAAAG,EAwBA5J,EA2BA6J,EAwBAnE,EA8BAoE,EAyBAC,EA2BAV,EAmBAW,EAsCAC,EAwBAC,EAuBAC,EAyCAC,EA8BAC,EAwCAC,EAiBAC,kOApYA,SAAAX,GASAA,EAAAtJ,OAHA,SAAA4C,EAAAE,GACA,OAAgBF,OAAAE,cAUhBwG,EAAAY,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAC,cAAAF,IAAAC,EAAAE,OAAAH,EAAAvH,OAAAwH,EAAAE,OAAAH,EAAArH,YAfA,CAkBCwG,WAMD,SAAA5J,GAYAA,EAAAM,OAXA,SAAAuK,EAAAC,EAAAC,EAAAC,GACA,GAAAN,EAAAE,OAAAC,IAAAH,EAAAE,OAAAE,IAAAJ,EAAAE,OAAAG,IAAAL,EAAAE,OAAAI,GACA,OAAoB/H,MAAA2G,EAAAtJ,OAAAuK,EAAAC,GAAAxH,IAAAsG,EAAAtJ,OAAAyK,EAAAC,IAEpB,GAAApB,EAAAY,GAAAK,IAAAjB,EAAAY,GAAAM,GACA,OAAoB7H,MAAA4H,EAAAvH,IAAAwH,GAGpB,UAAAtI,MAAA,8CAAAqI,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,MAWAhL,EAAAwK,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAC,cAAAF,IAAAb,EAAAY,GAAAC,EAAAxH,QAAA2G,EAAAY,GAAAC,EAAAnH,MAlBA,CAqBCtD,WAMD,SAAA6J,GASAA,EAAAvJ,OAHA,SAAAM,EAAAoC,GACA,OAAgBpC,MAAAoC,UAUhB6G,EAAAW,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IAAAzK,EAAAwK,GAAAC,EAAAzH,SAAA0H,EAAAQ,OAAAT,EAAA7J,MAAA8J,EAAA/G,UAAA8G,EAAA7J,OAfA,CAkBCiJ,WAMD,SAAAnE,GAYAA,EAAApF,OARA,SAAA6K,EAAAC,EAAAC,EAAAC,GACA,OACAH,MACAC,QACAC,OACAC,UAcA5F,EAAA8E,GAPA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAE,OAAAH,EAAAU,MACAT,EAAAE,OAAAH,EAAAW,QACAV,EAAAE,OAAAH,EAAAY,OACAX,EAAAE,OAAAH,EAAAa,QArBA,CAwBC5F,WAMD,SAAAoE,GAUAA,EAAAxJ,OANA,SAAA0C,EAAAuI,GACA,OACAvI,QACAuI,UAWAzB,EAAAU,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAArH,EAAAwK,GAAAC,EAAAzH,QAAA0C,EAAA8E,GAAAC,EAAAc,QAhBA,CAmBCzB,WAMD,SAAAC,GAWAA,EAAAzJ,OAPA,SAAAnB,EAAA2G,EAAA0F,GACA,OACArM,QACA2G,WACA0F,wBAaAzB,EAAAS,GANA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAQ,OAAAT,EAAAtL,SACAuL,EAAA/G,UAAA8G,EAAA3E,WAAAuE,EAAAG,GAAAC,MACAC,EAAA/G,UAAA8G,EAAAe,sBAAAd,EAAAe,WAAAhB,EAAAe,oBAAAnB,EAAAG,MAnBA,CAsBCT,WAKD,SAAAV,GAIAA,EAAA,kBAIAA,EAAA,kBAIAA,EAAA,gBAZA,CAaCA,WAMD,SAAAW,GAoBAA,EAAA1J,OAhBA,SAAA4I,EAAAC,EAAAuC,EAAAC,EAAAnH,GACA,IAAAyE,GACAC,YACAC,WAWA,OATAuB,EAAAO,QAAAS,KACAzC,EAAAyC,kBAEAhB,EAAAO,QAAAU,KACA1C,EAAA0C,gBAEAjB,EAAAO,QAAAzG,KACAyE,EAAAzE,QAEAyE,GAaAe,EAAAQ,GAPA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAE,OAAAH,EAAAvB,YAAAwB,EAAAE,OAAAH,EAAAvB,aACAwB,EAAA/G,UAAA8G,EAAAiB,iBAAAhB,EAAAE,OAAAH,EAAAiB,mBACAhB,EAAA/G,UAAA8G,EAAAkB,eAAAjB,EAAAE,OAAAH,EAAAkB,iBACAjB,EAAA/G,UAAA8G,EAAAjG,OAAAkG,EAAAQ,OAAAT,EAAAjG,QA7BA,CAgCCwF,WAMD,SAAAC,GAUAA,EAAA3J,OANA,SAAAsL,EAAApI,GACA,OACAoI,WACApI,YAWAyG,EAAAO,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IAAAZ,EAAAW,GAAAC,EAAAmB,WAAAlB,EAAAQ,OAAAT,EAAAjH,UAhBA,CAmBCyG,WAKD,SAAAC,GAIAA,EAAA1H,MAAA,EAIA0H,EAAAxH,QAAA,EAIAwH,EAAAvH,YAAA,EAIAuH,EAAArH,KAAA,EAhBA,CAiBCqH,WAMD,SAAAC,GAoBAA,EAAA7J,OAhBA,SAAA0C,EAAAQ,EAAAlB,EAAAH,EAAAsB,EAAAoI,GACA,IAAA5C,GAAsBjG,QAAAQ,WAatB,OAZAkH,EAAAO,QAAA3I,KACA2G,EAAA3G,YAEAoI,EAAAO,QAAA9I,KACA8G,EAAA9G,QAEAuI,EAAAO,QAAAxH,KACAwF,EAAAxF,UAEAiH,EAAAO,QAAAY,KACA5C,EAAA4C,sBAEA5C,GAgBAkB,EAAAK,GAVA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IACAzK,EAAAwK,GAAAC,EAAAzH,QACA0H,EAAAQ,OAAAT,EAAAjH,WACAkH,EAAAE,OAAAH,EAAAnI,WAAAoI,EAAA/G,UAAA8G,EAAAnI,aACAoI,EAAAE,OAAAH,EAAAtI,OAAAuI,EAAAQ,OAAAT,EAAAtI,OAAAuI,EAAA/G,UAAA8G,EAAAtI,SACAuI,EAAAQ,OAAAT,EAAAhH,SAAAiH,EAAA/G,UAAA8G,EAAAhH,WACAiH,EAAA/G,UAAA8G,EAAAoB,qBAAAnB,EAAAe,WAAAhB,EAAAoB,mBAAA5B,EAAAO,MAhCA,CAmCCL,WAMD,SAAAC,GAeAA,EAAA9J,OAXA,SAAAwL,EAAAC,GAEA,IADA,IAAAC,KACAzP,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CyP,EAAAzP,EAAA,GAAAC,UAAAD,GAEA,IAAA0M,GAAsB6C,QAAAC,WAItB,OAHArB,EAAAO,QAAAe,MAAAvP,OAAA,IACAwM,EAAAzM,UAAAwP,GAEA/C,GAUAmB,EAAAI,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IAAAC,EAAAQ,OAAAT,EAAAqB,QAAApB,EAAAQ,OAAAT,EAAAsB,UArBA,CAwBC3B,WAMD,SAAAC,GASAA,EAAA4B,QAHA,SAAAjJ,EAAAgD,GACA,OAAgBhD,QAAAgD,YAWhBqE,EAAA6B,OAHA,SAAAlI,EAAAgC,GACA,OAAgBhD,OAASC,MAAAe,EAAAV,IAAAU,GAAiCgC,YAU1DqE,EAAA8B,IAHA,SAAAnJ,GACA,OAAgBA,QAAAgD,QAAA,KAShBqE,EAAAG,GANA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAC,cAAAF,IACAC,EAAAQ,OAAAT,EAAAzE,UACAhG,EAAAwK,GAAAC,EAAAzH,QA/BA,CAkCCqH,WAMD,SAAAC,GAOAA,EAAAhK,OAHA,SAAA8L,EAAA1D,GACA,OAAgB0D,eAAA1D,UAShB4B,EAAAE,GANA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IACA4B,EAAA7B,GAAAC,EAAA2B,eACAE,MAAAC,QAAA9B,EAAA/B,QAZA,CAeC4B,WAED,SAAAC,GAOAA,EAAAC,GANA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAoD,SACA,IAAAA,EAAA+B,cAAA,IAAA/B,EAAAgC,wBACA,IAAAhC,EAAAgC,iBAAA/B,EAAAe,WAAAhB,EAAAgC,gBAAAnC,EAAAE,MALA,CAQCD,WACD,IA4GAmC,EAuBAL,EAwBAM,EA6BAC,EAqBAC,EAcAnI,EAgCAoI,EAsBAC,EAeAC,EAaAC,EAoBAC,EAiBAC,EAkBAC,EAwBAzF,EAmBA0F,EAkBAC,EA6BAC,EA9bAC,EAAA,WACA,SAAAA,EAAA9E,GACA9K,KAAA8K,QAoBA,OAlBA8E,EAAAlP,UAAA4N,OAAA,SAAAlI,EAAAgC,GACApI,KAAA8K,MAAApH,KAAA+I,EAAA6B,OAAAlI,EAAAgC,KAEAwH,EAAAlP,UAAA2N,QAAA,SAAAjJ,EAAAgD,GACApI,KAAA8K,MAAApH,KAAA+I,EAAA4B,QAAAjJ,EAAAgD,KAEAwH,EAAAlP,UAAAmP,OAAA,SAAAzK,GACApF,KAAA8K,MAAApH,KAAA+I,EAAA8B,IAAAnJ,KAEAwK,EAAAlP,UAAAoP,IAAA,SAAAC,GACA/P,KAAA8K,MAAApH,KAAAqM,IAEAH,EAAAlP,UAAAsP,IAAA,WACA,OAAAhQ,KAAA8K,OAEA8E,EAAAlP,UAAAuP,MAAA,WACAjQ,KAAA8K,MAAAoF,OAAA,EAAAlQ,KAAA8K,MAAAjM,SAEA+Q,EAtBA,IA2BA,WACA,SAAAO,EAAAC,GACA,IAAArQ,EAAAC,KACAA,KAAAqQ,iBAAA5N,OAAAC,OAAA,MACA0N,IACApQ,KAAAsQ,eAAAF,EACAA,EAAAvB,gBACAuB,EAAAvB,gBAAA7K,QAAA,SAAAuM,GACA,IAAAC,EAAA,IAAAZ,EAAAW,EAAAzF,OACA/K,EAAAsQ,iBAAAE,EAAA/B,aAAAxL,KAAAwN,IAGAJ,EAAAxB,SACAnM,OAAAgO,KAAAL,EAAAxB,SAAA5K,QAAA,SAAAC,GACA,IAAAuM,EAAA,IAAAZ,EAAAQ,EAAAxB,QAAA3K,IACAlE,EAAAsQ,iBAAApM,GAAAuM,KAKA/N,OAAA6F,eAAA6H,EAAAzP,UAAA,QAKA6H,IAAA,WACA,OAAAvI,KAAAsQ,gBAEA9H,YAAA,EACAC,cAAA,IAEA0H,EAAAzP,UAAAgQ,kBAAA,SAAAzM,GACA,GAAAwK,EAAA7B,GAAA3I,GAAA,CAMA,GALAjE,KAAAsQ,iBACAtQ,KAAAsQ,gBACAzB,sBAGA7O,KAAAsQ,eAAAzB,gBACA,UAAAjK,MAAA,oEAEA,IAAA4J,EAAAvK,EAEA,KADAoH,EAAArL,KAAAqQ,iBAAA7B,EAAAxL,MACA,CACA,IACAuN,GACA/B,eACA1D,MAHAA,MAKA9K,KAAAsQ,eAAAzB,gBAAAnL,KAAA6M,GACAlF,EAAA,IAAAuE,EAAA9E,GACA9K,KAAAqQ,iBAAA7B,EAAAxL,KAAAqI,EAEA,OAAAA,EAQA,GALArL,KAAAsQ,iBACAtQ,KAAAsQ,gBACA1B,QAAAnM,OAAAC,OAAA,SAGA1C,KAAAsQ,eAAA1B,QACA,UAAAhK,MAAA,kEAEA,IAAAyG,EACA,KADAA,EAAArL,KAAAqQ,iBAAApM,IACA,CACA,IAAA6G,KACA9K,KAAAsQ,eAAA1B,QAAA3K,GAAA6G,EACAO,EAAA,IAAAuE,EAAA9E,GACA9K,KAAAqQ,iBAAApM,GAAAoH,EAEA,OAAAA,GAvEA,IAkFA,SAAAyD,GAQAA,EAAApM,OAHA,SAAAM,GACA,OAAgBA,QAUhB8L,EAAAlC,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IAAAC,EAAAQ,OAAAT,EAAA7J,MAdA,CAiBC8L,WAMD,SAAAL,GASAA,EAAA/L,OAHA,SAAAM,EAAA2N,GACA,OAAgB3N,MAAA2N,YAUhBlC,EAAA7B,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IAAAC,EAAAQ,OAAAT,EAAA7J,MAAA8J,EAAAE,OAAAH,EAAA8D,UAfA,CAkBClC,WAMD,SAAAM,GAWAA,EAAArM,OAHA,SAAAM,EAAAhE,EAAA2R,EAAAxI,GACA,OAAgBnF,MAAAhE,aAAA2R,UAAAxI,SAUhB4G,EAAAnC,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IAAAC,EAAAQ,OAAAT,EAAA7J,MAAA8J,EAAAQ,OAAAT,EAAA7N,aAAA8N,EAAAE,OAAAH,EAAA8D,UAAA7D,EAAAQ,OAAAT,EAAA1E,OAjBA,CAoBC4G,WASD,SAAAC,GAIAA,EAAA4B,UAAA,YAIA5B,EAAA6B,SAAA,WARA,CASC7B,WACD,SAAAA,GAQAA,EAAApC,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAoD,IAAAmC,EAAA4B,WAAA/D,IAAAmC,EAAA6B,UANA,CASC7B,WAED,SAAAC,GAQAA,EAAArC,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAC,cAAAtD,IAAAuF,EAAApC,GAAAC,EAAAjG,OAAAkG,EAAAQ,OAAAT,EAAApD,QANA,CASCwF,WAKD,SAAAnI,GACAA,EAAAC,KAAA,EACAD,EAAAE,OAAA,EACAF,EAAAG,SAAA,EACAH,EAAAI,YAAA,EACAJ,EAAAK,MAAA,EACAL,EAAAM,SAAA,EACAN,EAAAO,MAAA,EACAP,EAAAQ,UAAA,EACAR,EAAAS,OAAA,EACAT,EAAAU,SAAA,GACAV,EAAAW,KAAA,GACAX,EAAAY,MAAA,GACAZ,EAAAa,KAAA,GACAb,EAAAc,QAAA,GACAd,EAAAe,QAAA,GACAf,EAAAgB,MAAA,GACAhB,EAAAiB,KAAA,GACAjB,EAAAkB,UAAA,GACAlB,EAAAgK,OAAA,GACAhK,EAAAiK,WAAA,GACAjK,EAAAkK,SAAA,GACAlK,EAAAmK,OAAA,GACAnK,EAAAoK,MAAA,GACApK,EAAAqK,SAAA,GACArK,EAAAsK,cAAA,GAzBA,CA0BCtK,WAMD,SAAAoI,GAIAA,EAAA0B,UAAA,EAWA1B,EAAArH,QAAA,EAfA,CAgBCqH,WAMD,SAAAC,GAQAA,EAAAzM,OAHA,SAAAnB,GACA,OAAgBA,UANhB,CASC4N,WAMD,SAAAC,GAUAA,EAAA1M,OAHA,SAAAsG,EAAAU,GACA,OAAgBV,YAAAU,mBARhB,CAWC0F,WAED,SAAAC,GASAA,EAAAgC,cAHA,SAAAC,GACA,OAAAA,EAAAjD,QAAA,wBAA0C,SAU1CgB,EAAAzC,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAQ,OAAAT,IAAAC,EAAAC,cAAAF,IAAAC,EAAAQ,OAAAT,EAAA0E,WAAAzE,EAAAQ,OAAAT,EAAApD,QAfA,CAkBC4F,WAED,SAAAC,GAUAA,EAAA1C,GANA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAC,cAAAF,KAAAoC,EAAArC,GAAAC,EAAA2E,WACAnC,EAAAzC,GAAAC,EAAA2E,WACA1E,EAAAe,WAAAhB,EAAA2E,SAAAnC,EAAAzC,YAAA,IAAAnD,EAAArE,OAAAhD,EAAAwK,GAAAnD,EAAArE,SARA,CAWCkK,WAMD,SAAAC,GAUAA,EAAA7M,OAHA,SAAAnB,EAAA+H,GACA,OAAAA,GAAgC/H,QAAA+H,kBAAiD/H,UARjF,CAYCgO,WAMD,SAAAC,GAkBAA,EAAA9M,OAjBA,SAAAnB,EAAA+H,GAEA,IADA,IAAAmI,KACA9S,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/C8S,EAAA9S,EAAA,GAAAC,UAAAD,GAEA,IAAA0M,GAAsB9J,SAUtB,OATAuL,EAAAO,QAAA/D,KACA+B,EAAA/B,iBAEAwD,EAAAO,QAAAoE,GACApG,EAAAoG,aAGApG,EAAAoG,cAEApG,GAhBA,CAmBCmE,WAKD,SAAAzF,GAIAA,EAAAhD,KAAA,EAIAgD,EAAAC,KAAA,EAIAD,EAAAE,MAAA,EAZA,CAaCF,WAMD,SAAA0F,GAYAA,EAAA/M,OAPA,SAAA0C,EAAAwB,GACA,IAAAyE,GAAsBjG,SAItB,OAHA0H,EAAAE,OAAApG,KACAyE,EAAAzE,QAEAyE,GAVA,CAaCoE,WAKD,SAAAC,GACAA,EAAA3H,KAAA,EACA2H,EAAAnI,OAAA,EACAmI,EAAAgC,UAAA,EACAhC,EAAAiC,QAAA,EACAjC,EAAArI,MAAA,EACAqI,EAAA1I,OAAA,EACA0I,EAAAlI,SAAA,EACAkI,EAAAvI,MAAA,EACAuI,EAAAxI,YAAA,EACAwI,EAAA/H,KAAA,GACA+H,EAAApI,UAAA,GACAoI,EAAAzI,SAAA,GACAyI,EAAAtI,SAAA,GACAsI,EAAAsB,SAAA,GACAtB,EAAAjL,OAAA,GACAiL,EAAAkC,OAAA,GACAlC,EAAAmC,QAAA,GACAnC,EAAAhB,MAAA,GACAgB,EAAAjN,OAAA,GACAiN,EAAAoC,IAAA,GACApC,EAAAqC,KAAA,GACArC,EAAAqB,WAAA,GACArB,EAAAuB,OAAA,GACAvB,EAAAwB,MAAA,GACAxB,EAAAyB,SAAA,GACAzB,EAAA0B,cAAA,GA1BA,CA2BC1B,WAED,SAAAC,GAqBAA,EAAAjN,OAXA,SAAAsP,EAAApL,EAAAxB,EAAApC,EAAAiP,GACA,IAAA5G,GACA2G,OACApL,OACAoH,UAAuBhL,MAAAoC,UAKvB,OAHA6M,IACA5G,EAAA4G,iBAEA5G,GAnBA,CAsBCsE,WAOD,IA+CAuC,EA6DAC,EAsBAC,EA+BAC,EAyBAC,EA1LAC,EAAA,WAGA,OAFA,aADA,IAMA,SAAAA,GAwBAA,EAAA7P,OAbA,SAAAsP,EAAAzI,EAAA3C,EAAAxB,EAAAoN,EAAAC,GACA,IAAApH,GACA2G,OACAzI,SACA3C,OACAxB,QACAoN,kBAKA,YAHA,IAAAC,IACApH,EAAAoH,YAEApH,GAcAkH,EAAA3F,GARA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAoD,GACAC,EAAAQ,OAAAT,EAAAmF,OAAAlF,EAAAQ,OAAAT,EAAAtD,SAAAuD,EAAAE,OAAAH,EAAAjG,OACAxE,EAAAwK,GAAAC,EAAAzH,QAAAhD,EAAAwK,GAAAC,EAAA2F,uBACA,IAAA3F,EAAA6F,YAAA5F,EAAA6F,QAAA9F,EAAA6F,oBACA,IAAA7F,EAAA4F,UAAA/D,MAAAC,QAAA9B,EAAA4F,YAlCA,CAqCCF,WAKD,SAAAL,GAIAA,EAAAU,SAAA,WAIAV,EAAAW,SAAA,WAYAX,EAAAY,gBAAA,mBAWAZ,EAAAa,eAAA,kBAaAb,EAAAc,gBAAA,mBAMAd,EAAAe,OAAA,SAIAf,EAAAgB,sBAAA,yBAtDA,CAuDChB,WAMD,SAAAC,GAWAA,EAAAzP,OAPA,SAAA0B,EAAA+O,GACA,IAAA9H,GAAsBjH,eAItB,YAHA,IAAA+O,GAAA,OAAAA,IACA9H,EAAA8H,QAEA9H,GAUA8G,EAAAvF,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IAAAC,EAAAe,WAAAhB,EAAAzI,YAAAmI,EAAAK,WAAA,IAAAC,EAAAsG,MAAArG,EAAAe,WAAAhB,EAAAsG,KAAArG,EAAAQ,UAjBA,CAoBC6E,WAED,SAAAC,GAcAA,EAAA1P,OAbA,SAAAwL,EAAAkF,EAAAxM,GACA,IAAAyE,GAAsB6C,SAUtB,OATA1B,EAAAI,GAAAwG,GACA/H,EAAA8C,QAAAiF,EAGA/H,EAAA0E,KAAAqD,OAEA,IAAAxM,IACAyE,EAAAzE,QAEAyE,GAYA+G,EAAAxF,GATA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAoD,GAAAC,EAAAQ,OAAAT,EAAAqB,cACA,IAAArB,EAAAzI,aAAA0I,EAAAe,WAAAhB,EAAAzI,YAAAmI,EAAAK,YACA,IAAAC,EAAAjG,MAAAkG,EAAAQ,OAAAT,EAAAjG,cACA,IAAAiG,EAAAkD,WAAA,IAAAlD,EAAAsB,gBACA,IAAAtB,EAAAsB,SAAA3B,EAAAI,GAAAC,EAAAsB,iBACA,IAAAtB,EAAAkD,MAAApD,EAAAC,GAAAC,EAAAkD,QAtBA,CAyBCqC,WAMD,SAAAC,GAUAA,EAAA3P,OANA,SAAA0C,EAAAiO,GACA,IAAAhI,GAAsBjG,SAGtB,OAFA0H,EAAAO,QAAAgG,KACAhI,EAAAgI,QACAhI,GAUAgH,EAAAzF,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IAAAzK,EAAAwK,GAAAC,EAAAzH,SAAA0H,EAAA/G,UAAA8G,EAAAsB,UAAA3B,EAAAI,GAAAC,EAAAsB,WAhBA,CAmBCkE,WAMD,SAAAC,GAOAA,EAAA5P,OAHA,SAAA+H,EAAAC,GACA,OAAgBD,UAAAC,iBAUhB4H,EAAA1F,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IAAAC,EAAAE,OAAAH,EAAApC,UAAAqC,EAAA6F,QAAA9F,EAAAnC,eAbA,CAgBC4H,WAKD,IAAAgB,EAAA,WAGA,OAFA,aADA,IAUA,SAAAA,GAOAA,EAAA5Q,OAHA,SAAA0C,EAAAmF,EAAA8I,GACA,OAAgBjO,QAAAmF,SAAA8I,SAUhBC,EAAA1G,GAJA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,OAAAqD,EAAAO,QAAAR,IAAAzK,EAAAwK,GAAAC,EAAAzH,SAAA0H,EAAA/G,UAAA8G,EAAAtC,SAAAuC,EAAAQ,OAAAT,EAAAtC,UAbA,CAgBC+I,WACD,IACAC,EAkFAC,GAjFA,SAAAD,GAUAA,EAAA7Q,OAHA,SAAAM,EAAAhE,EAAA2R,EAAA8C,GACA,WAAAC,EAAA1Q,EAAAhE,EAAA2R,EAAA8C,IAWAF,EAAA3G,GALA,SAAAnD,GACA,IAAAoD,EAAApD,EACA,SAAAqD,EAAAO,QAAAR,IAAAC,EAAAQ,OAAAT,EAAA7J,OAAA8J,EAAA/G,UAAA8G,EAAA7N,aAAA8N,EAAAQ,OAAAT,EAAA7N,cAAA8N,EAAAE,OAAAH,EAAA8G,YACA7G,EAAA8G,KAAA/G,EAAAgH,UAAA/G,EAAA8G,KAAA/G,EAAAiH,aAAAhH,EAAA8G,KAAA/G,EAAAkH,YA2BAR,EAAAS,WAxBA,SAAAC,EAAAnJ,GAUA,IATA,IAAA3C,EAAA8L,EAAAJ,UACAK,EAuBA,SAAAC,EAAAd,EAAAe,GACA,GAAAf,EAAAxU,QAAA,EAEA,OAAAwU,EAEA,IAAA5R,EAAA4R,EAAAxU,OAAA,IACAwV,EAAAhB,EAAAiB,MAAA,EAAA7S,GACA8S,EAAAlB,EAAAiB,MAAA7S,GACA0S,EAAAE,EAAAD,GACAD,EAAAI,EAAAH,GAIA,IAHA,IAAAI,EAAA,EACAC,EAAA,EACAC,EAAA,EACAF,EAAAH,EAAAxV,QAAA4V,EAAAF,EAAA1V,QAAA,CACA,IAAA8V,EAAAP,EAAAC,EAAAG,GAAAD,EAAAE,IAGApB,EAAAqB,KAFAC,GAAA,EAEAN,EAAAG,KAIAD,EAAAE,KAGA,KAAAD,EAAAH,EAAAxV,QACAwU,EAAAqB,KAAAL,EAAAG,KAEA,KAAAC,EAAAF,EAAA1V,QACAwU,EAAAqB,KAAAH,EAAAE,KAEA,OAAApB,EArDAc,CAAArJ,EAAA,SAAA8J,EAAAC,GACA,IAAAC,EAAAF,EAAAxP,MAAAC,MAAAC,KAAAuP,EAAAzP,MAAAC,MAAAC,KACA,WAAAwP,EACAF,EAAAxP,MAAAC,MAAAG,UAAAqP,EAAAzP,MAAAC,MAAAG,UAEAsP,IAEAC,EAAA5M,EAAAtJ,OACA6V,EAAAR,EAAArV,OAAA,EAA4C6V,GAAA,EAAQA,IAAA,CACpD,IAAAxS,EAAAgS,EAAAQ,GACAM,EAAAf,EAAAF,SAAA7R,EAAAkD,MAAAC,OACA4P,EAAAhB,EAAAF,SAAA7R,EAAAkD,MAAAM,KACA,KAAAuP,GAAAF,GAIA,UAAAnQ,MAAA,mBAHAuD,IAAA+M,UAAA,EAAAF,GAAA9S,EAAAkG,QAAAD,EAAA+M,UAAAD,EAAA9M,EAAAtJ,QAKAkW,EAAAC,EAEA,OAAA7M,GA1CA,CA6ECoL,WAKD,SAAAC,GAKAA,EAAA2B,OAAA,EAIA3B,EAAA4B,WAAA,EAIA5B,EAAA6B,SAAA,EAbA,CAcC7B,WACD,IA2GA1G,EA3GA4G,EAAA,WACA,SAAAA,EAAA1Q,EAAAhE,EAAA2R,EAAA8C,GACAzT,KAAAsV,KAAAtS,EACAhD,KAAAsC,YAAAtD,EACAgB,KAAAuV,SAAA5E,EACA3Q,KAAAwV,SAAA/B,EACAzT,KAAAyV,aAAA,KAmGA,OAjGAhT,OAAA6F,eAAAoL,EAAAhT,UAAA,OACA6H,IAAA,WACA,OAAAvI,KAAAsV,MAEA9M,YAAA,EACAC,cAAA,IAEAhG,OAAA6F,eAAAoL,EAAAhT,UAAA,cACA6H,IAAA,WACA,OAAAvI,KAAAsC,aAEAkG,YAAA,EACAC,cAAA,IAEAhG,OAAA6F,eAAAoL,EAAAhT,UAAA,WACA6H,IAAA,WACA,OAAAvI,KAAAuV,UAEA/M,YAAA,EACAC,cAAA,IAEAiL,EAAAhT,UAAAmT,QAAA,SAAAzO,GACA,GAAAA,EAAA,CACA,IAAAC,EAAArF,KAAA+T,SAAA3O,EAAAC,OACAK,EAAA1F,KAAA+T,SAAA3O,EAAAM,KACA,OAAA1F,KAAAwV,SAAAN,UAAA7P,EAAAK,GAEA,OAAA1F,KAAAwV,UAEA9B,EAAAhT,UAAAgV,OAAA,SAAA5R,EAAA6M,GACA3Q,KAAAwV,SAAA1R,EAAAqE,KACAnI,KAAAuV,SAAA5E,EACA3Q,KAAAyV,aAAA,MAEA/B,EAAAhT,UAAAiV,eAAA,WACA,UAAA3V,KAAAyV,aAAA,CAIA,IAHA,IAAAG,KACAzN,EAAAnI,KAAAwV,SACAK,GAAA,EACAnB,EAAA,EAA2BA,EAAAvM,EAAAtJ,OAAiB6V,IAAA,CAC5CmB,IACAD,EAAAlS,KAAAgR,GACAmB,GAAA,GAEA,IAAAC,EAAA3N,EAAA4N,OAAArB,GACAmB,EAAA,OAAAC,GAAA,OAAAA,EACA,OAAAA,GAAApB,EAAA,EAAAvM,EAAAtJ,QAAA,OAAAsJ,EAAA4N,OAAArB,EAAA,IACAA,IAGAmB,GAAA1N,EAAAtJ,OAAA,GACA+W,EAAAlS,KAAAyE,EAAAtJ,QAEAmB,KAAAyV,aAAAG,EAEA,OAAA5V,KAAAyV,cAEA/B,EAAAhT,UAAAoT,WAAA,SAAAkC,GACAA,EAAAC,KAAAC,IAAAD,KAAAE,IAAAH,EAAAhW,KAAAwV,SAAA3W,QAAA,GACA,IAAA+W,EAAA5V,KAAA2V,iBACAS,EAAA,EAAAC,EAAAT,EAAA/W,OACA,OAAAwX,EACA,OAAArK,EAAAtJ,OAAA,EAAAsT,GAEA,KAAAI,EAAAC,GAAA,CACA,IAAAC,EAAAL,KAAAM,OAAAH,EAAAC,GAAA,GACAT,EAAAU,GAAAN,EACAK,EAAAC,EAGAF,EAAAE,EAAA,EAKA,IAAAhR,EAAA8Q,EAAA,EACA,OAAApK,EAAAtJ,OAAA4C,EAAA0Q,EAAAJ,EAAAtQ,KAEAoO,EAAAhT,UAAAqT,SAAA,SAAA3N,GACA,IAAAwP,EAAA5V,KAAA2V,iBACA,GAAAvP,EAAAd,MAAAsQ,EAAA/W,OACA,OAAAmB,KAAAwV,SAAA3W,OAEA,GAAAuH,EAAAd,KAAA,EACA,SAEA,IAAAkR,EAAAZ,EAAAxP,EAAAd,MACAmR,EAAArQ,EAAAd,KAAA,EAAAsQ,EAAA/W,OAAA+W,EAAAxP,EAAAd,KAAA,GAAAtF,KAAAwV,SAAA3W,OACA,OAAAoX,KAAAC,IAAAD,KAAAE,IAAAK,EAAApQ,EAAAZ,UAAAiR,GAAAD,IAEA/T,OAAA6F,eAAAoL,EAAAhT,UAAA,aACA6H,IAAA,WACA,OAAAvI,KAAA2V,iBAAA9W,QAEA2J,YAAA,EACAC,cAAA,IAEAiL,EAzGA,IA4GA,SAAA5G,GACA,IAAA7J,EAAAR,OAAA/B,UAAAuC,SAIA6J,EAAAO,QAHA,SAAA5D,GACA,2BAAAA,GAMAqD,EAAA/G,UAHA,SAAA0D,GACA,2BAAAA,GAMAqD,EAAA6F,QAHA,SAAAlJ,GACA,WAAAA,IAAA,IAAAA,GAMAqD,EAAAQ,OAHA,SAAA7D,GACA,0BAAAxG,EAAAyT,KAAAjN,IAMAqD,EAAAE,OAHA,SAAAvD,GACA,0BAAAxG,EAAAyT,KAAAjN,IAMAqD,EAAA8G,KAHA,SAAAnK,GACA,4BAAAxG,EAAAyT,KAAAjN,IASAqD,EAAAC,cANA,SAAAtD,GAIA,cAAAA,GAAA,kBAAAA,GAMAqD,EAAAe,WAHA,SAAApE,EAAAkN,GACA,OAAAjI,MAAAC,QAAAlF,MAAAmN,MAAAD,IAlCA,CAqCC7J","file":"static/js/3.ef2b0856.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js\n// module id = 1973\n// module chunks = 3","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/workerManager.js\n// module id = 2166\n// module chunks = 3","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                url: item.target\n            }); });\n        }));\n    };\n    return DocumentLinkAdapter;\n}());\nexport { DocumentLinkAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        }));\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js\n// module id = 2167\n// module chunks = 3","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\n// module id = 2168\n// module chunks = 3"],"sourceRoot":""}