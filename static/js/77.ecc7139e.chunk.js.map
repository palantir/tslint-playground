{"version":3,"sources":["../node_modules/tslint/lib/rules/noSubmoduleImportsRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","templateObject_2","tslib_1","__webpack_require__","tsutils_1","ts","Lint","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","ruleArguments","metadata","ruleName","description","Utils","dedent","__makeTemplateObject","rationale","optionsDescription","options","type","items","optionExamples","typescriptOnly","FAILURE_STRING","Rules","AbstractRule","ctx","_i","_a","findImports","length","name","isExternalModuleNameRelative","text","path","split","isWhitelisted","addFailureAtNode","whitelist","whitelist_1","option","startsWith"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAyDAC,EAAAC,EAzDAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAyBA,OA3BAR,EAAAU,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,EAAAN,KAAAO,gBAGAV,EAAAW,UACAC,SAAA,uBACAC,YAAAd,EAAAe,MAAAC,OAAAtB,MAAAE,EAAAqB,sBAAA,4GACAC,UAAAlB,EAAAe,MAAAC,OAAArB,MAAAC,EAAAqB,sBAAA,0aACAE,mBAAA,oDACAC,SACAC,KAAA,QACAC,OACAD,KAAA,WAGAE,iBACA,IACA,+DAEAF,KAAA,gBACAG,gBAAA,GAEAvB,EAAAwB,eAAA,wFACAxB,EA5BA,CA6BCD,EAAA0B,MAAAC,cAED,SAAAjB,EAAAkB,GACA,QAAAC,EAAA,EAAAC,EAAAhC,EAAAiC,YAAAH,EAAApB,WAAA,IAA8EqB,EAAAC,EAAAE,OAAgBH,IAAA,CAC9F,IAAAI,EAAAH,EAAAD,IACA9B,EAAAmC,6BAAAD,EAAAE,QAgBAC,EAfAH,EAAAE,MAgBAE,MAAA,KAAAL,QAAA,MAAAI,EAAA,UAfAE,EAAAL,EAAAE,KAAAP,EAAAR,UACAQ,EAAAW,iBAAAN,EAAAhC,EAAAwB,gBAaA,IAAAW,EATA,SAAAE,EAAAF,EAAAI,GACA,QAAAX,EAAA,EAAAY,EAAAD,EAA6CX,EAAAY,EAAAT,OAAyBH,IAAA,CACtE,IAAAa,EAAAD,EAAAZ,GACA,GAAAO,IAAAM,GAAAN,EAAAO,WAAAD,EAAA,KACA,SAGA,SAlBAlD,EAAAS","file":"static/js/77.ecc7139e.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2017 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk, this.ruleArguments);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-submodule-imports\",\n        description: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Disallows importing any submodule.\"], [\"\\n            Disallows importing any submodule.\"]))),\n        rationale: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            Submodules of some packages are treated as private APIs and the import\\n            paths may change without deprecation periods. It's best to stick with\\n            top-level package exports.\"], [\"\\n            Submodules of some packages are treated as private APIs and the import\\n            paths may change without deprecation periods. It's best to stick with\\n            top-level package exports.\"]))),\n        optionsDescription: \"A list of whitelisted package or submodule names.\",\n        options: {\n            type: \"array\",\n            items: {\n                type: \"string\",\n            },\n        },\n        optionExamples: [\n            true,\n            [true, \"rxjs\", \"@angular/platform-browser\", \"@angular/core/testing\"],\n        ],\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    Rule.FAILURE_STRING = \"Submodule import paths from this package are disallowed; import from the root instead\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    for (var _i = 0, _a = tsutils_1.findImports(ctx.sourceFile, 63 /* All */); _i < _a.length; _i++) {\n        var name = _a[_i];\n        if (!ts.isExternalModuleNameRelative(name.text) &&\n            isSubmodulePath(name.text) &&\n            !isWhitelisted(name.text, ctx.options)) {\n            ctx.addFailureAtNode(name, Rule.FAILURE_STRING);\n        }\n    }\n}\nfunction isWhitelisted(path, whitelist) {\n    for (var _i = 0, whitelist_1 = whitelist; _i < whitelist_1.length; _i++) {\n        var option = whitelist_1[_i];\n        if (path === option || path.startsWith(option + \"/\")) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isSubmodulePath(path) {\n    return path.split(\"/\").length > (path[0] === \"@\" ? 2 : 1);\n}\nvar templateObject_1, templateObject_2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noSubmoduleImportsRule.js\n// module id = 2098\n// module chunks = 77"],"sourceRoot":""}