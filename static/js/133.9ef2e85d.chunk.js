webpackJsonp([133],{2038:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),a=n(843),i=n(54),l=n(1116),o=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return r.__extends(t,e),t.prototype.apply=function(e){return this.applyWithFunction(e,p)},t.metadata={ruleName:"interface-over-type-literal",description:"Prefer an interface declaration over a type literal (`type T = { ... }`)",rationale:"Interfaces are generally preferred over type literals because interfaces can be implemented, extended and merged.",optionsDescription:"Not configurable.",options:null,optionExamples:[!0],type:"style",typescriptOnly:!0,hasFix:!0},t.FAILURE_STRING="Use an interface instead of a type literal.",t}(l.Rules.AbstractRule);function p(e){return i.forEachChild(e.sourceFile,function t(n){if(a.isTypeAliasDeclaration(n)&&a.isTypeLiteralNode(n.type)){var r=a.getChildOfKind(n,i.SyntaxKind.TypeKeyword,e.sourceFile),p=[new l.Replacement(r.end-4,4,"interface"),l.Replacement.deleteFromTo(n.type.pos-1,n.type.members.pos-1)];";"===e.sourceFile.text[n.end-1]&&p.push(l.Replacement.deleteText(n.end-1,1)),e.addFailureAtNode(n.name,o.FAILURE_STRING,p)}return i.forEachChild(n,t)})}t.Rule=o}});
//# sourceMappingURL=133.9ef2e85d.chunk.js.map