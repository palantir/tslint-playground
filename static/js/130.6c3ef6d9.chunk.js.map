{"version":3,"sources":["../node_modules/tslint/lib/rules/linebreakStyleRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","Lint","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","ruleArguments","indexOf","metadata","ruleName","description","optionsDescription","Utils","dedent","__makeTemplateObject","options","type","enum","optionExamples","typescriptOnly","hasFix","FAILURE_CRLF","FAILURE_LF","Rules","AbstractRule","ctx","expectedCr","sourceText","text","lineStarts","getLineStarts","i","length","lineEnd","addFailure","Replacement","deleteText","appendText"],"mappings":"sDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAgDAC,EAhDAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,MAGAE,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAsBA,OAxBAN,EAAAQ,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,GAAA,IAAAN,KAAAO,cAAAC,QARA,UAWAX,EAAAY,UACAC,SAAA,kBACAC,YAAA,yCACAC,mBAAAhB,EAAAiB,MAAAC,OAAArB,MAAAC,EAAAqB,sBAAA,+XAbA,KADA,QAeAC,SACAC,KAAA,SACAC,MAhBA,KADA,SAmBAC,kBAAA,EAlBA,QAkBA,EAnBA,SAoBAF,KAAA,kBACAG,gBAAA,EACAC,QAAA,GAGAxB,EAAAyB,aAAA,kCACAzB,EAAA0B,WAAA,gCACA1B,EAzBA,CA0BCD,EAAA4B,MAAAC,cAED,SAAAnB,EAAAoB,GAIA,IAHA,IAAAC,EAAAD,EAAAV,QACAY,EAAAF,EAAAtB,WAAAyB,KACAC,EAAAJ,EAAAtB,WAAA2B,gBACAC,EAAA,EAAmBA,EAAAF,EAAAG,SAAuBD,EAAA,CAC1C,IAAAE,EAAAJ,EAAAE,GAAA,EACA,OAAAJ,EAAAM,EAAA,GACAP,GACAD,EAAAS,WAAAL,EAAAE,EAAA,GAAAE,EAAA,EAAArC,EAAA0B,WAAA3B,EAAAwC,YAAAC,WAAAH,EAAA,MAGAP,GACAD,EAAAS,WAAAL,EAAAE,EAAA,GAAAE,EAAArC,EAAAyB,aAAA1B,EAAAwC,YAAAE,WAAAJ,EAAA,QAbA3C,EAAAM","file":"static/js/130.6c3ef6d9.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2018 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Lint = require(\"../index\");\nvar OPTION_LINEBREAK_STYLE_CRLF = \"CRLF\";\nvar OPTION_LINEBREAK_STYLE_LF = \"LF\";\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk, this.ruleArguments.indexOf(OPTION_LINEBREAK_STYLE_CRLF) !== -1);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"linebreak-style\",\n        description: \"Enforces a consistent linebreak style.\",\n        optionsDescription: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            One of the following options must be provided:\\n\\n            * `\\\"\", \"\\\"` requires LF (`\\\\n`) linebreaks\\n            * `\\\"\", \"\\\"` requires CRLF (`\\\\r\\\\n`) linebreaks\"], [\"\\n            One of the following options must be provided:\\n\\n            * \\\\`\\\"\", \"\\\"\\\\` requires LF (\\\\`\\\\\\\\n\\\\`) linebreaks\\n            * \\\\`\\\"\", \"\\\"\\\\` requires CRLF (\\\\`\\\\\\\\r\\\\\\\\n\\\\`) linebreaks\"])), OPTION_LINEBREAK_STYLE_LF, OPTION_LINEBREAK_STYLE_CRLF),\n        options: {\n            type: \"string\",\n            enum: [OPTION_LINEBREAK_STYLE_LF, OPTION_LINEBREAK_STYLE_CRLF],\n        },\n        optionExamples: [[true, OPTION_LINEBREAK_STYLE_LF], [true, OPTION_LINEBREAK_STYLE_CRLF]],\n        type: \"maintainability\",\n        typescriptOnly: false,\n        hasFix: true,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_CRLF = \"Expected linebreak to be '\" + OPTION_LINEBREAK_STYLE_CRLF + \"'\";\n    Rule.FAILURE_LF = \"Expected linebreak to be '\" + OPTION_LINEBREAK_STYLE_LF + \"'\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    var expectedCr = ctx.options;\n    var sourceText = ctx.sourceFile.text;\n    var lineStarts = ctx.sourceFile.getLineStarts();\n    for (var i = 1; i < lineStarts.length; ++i) {\n        var lineEnd = lineStarts[i] - 1;\n        if (sourceText[lineEnd - 1] === \"\\r\") {\n            if (!expectedCr) {\n                ctx.addFailure(lineStarts[i - 1], lineEnd - 1, Rule.FAILURE_LF, Lint.Replacement.deleteText(lineEnd - 1, 1));\n            }\n        }\n        else if (expectedCr) {\n            ctx.addFailure(lineStarts[i - 1], lineEnd, Rule.FAILURE_CRLF, Lint.Replacement.appendText(lineEnd, \"\\r\"));\n        }\n    }\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/linebreakStyleRule.js\n// module id = 2041\n// module chunks = 130"],"sourceRoot":""}