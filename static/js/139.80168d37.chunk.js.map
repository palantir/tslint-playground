{"version":3,"sources":["../node_modules/tslint/lib/rules/forinRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","tsutils_1","ts","Lint","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","metadata","ruleName","description","rationale","Utils","dedent","__makeTemplateObject","optionsDescription","options","optionExamples","type","typescriptOnly","FAILURE_STRING","Rules","AbstractRule","ctx","forEachChild","cb","node","isForInStatement","isBlock","statement","_a","statements","length","kind","SyntaxKind","IfStatement","thenStatement","ContinueStatement","isFiltered","addFailureAtNode"],"mappings":"sDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAsDAC,EAtDAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAkBA,OApBAR,EAAAU,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,IAGAT,EAAAU,UACAC,SAAA,QACAC,YAAA,2EACAC,UAAAd,EAAAe,MAAAC,OAAArB,MAAAC,EAAAqB,sBAAA,q5BAAqS,u7BACrSC,mBAAA,oBACAC,QAAA,KACAC,iBAAA,GACAC,KAAA,gBACAC,gBAAA,GAGArB,EAAAsB,eAAA,oEACAtB,EArBA,CAsBCD,EAAAwB,MAAAC,cAED,SAAAf,EAAAgB,GACA,OAAA3B,EAAA4B,aAAAD,EAAAlB,WAAA,SAAAoB,EAAAC,GAIA,OAHA/B,EAAAgC,iBAAAD,IAAA/B,EAAAiC,QAAAF,EAAAG,aAMA,SAAAC,GACA,IAAAC,EAAAD,EAAAC,WACA,OAAAA,EAAAC,QACA,OACA,SACA,OACA,OAAAD,EAAA,GAAAE,OAAArC,EAAAsC,WAAAC,YACA,QACA,OAAAJ,EAAA,GAAAE,OAAArC,EAAAsC,WAAAC,eAIAT,EAHAK,EAAA,GAAAK,eAIAH,OAAArC,EAAAsC,WAAAG,mBACA1C,EAAAiC,QAAAF,IACA,IAAAA,EAAAK,WAAAC,QACAN,EAAAK,WAAA,GAAAE,OAAArC,EAAAsC,WAAAG,mBAJA,IAAAX,EAlBAY,CAAAZ,EAAAG,YACAN,EAAAgB,iBAAAb,EAAA5B,EAAAsB,gBAEAxB,EAAA4B,aAAAE,EAAAD,KANAnC,EAAAQ","file":"static/js/139.80168d37.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"forin\",\n        description: \"Requires a `for ... in` statement to be filtered with an `if` statement.\",\n        rationale: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            ```ts\\n            for (let key in someObject) {\\n                if (someObject.hasOwnProperty(key)) {\\n                    // code here\\n                }\\n            }\\n            ```\\n            Prevents accidental iteration over properties inherited from an object's prototype.\\n            See [MDN's `for...in`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in)\\n            documentation for more information about `for...in` loops.\\n\\n            Also consider using a [`Map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map)\\n            or [`Set`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set)\\n            if you're storing collections of objects.\\n            Using `Object`s can cause occasional edge case bugs, such as if a key is named \\\"hasOwnProperty\\\".\\n        \"], [\"\\n            \\\\`\\\\`\\\\`ts\\n            for (let key in someObject) {\\n                if (someObject.hasOwnProperty(key)) {\\n                    // code here\\n                }\\n            }\\n            \\\\`\\\\`\\\\`\\n            Prevents accidental iteration over properties inherited from an object's prototype.\\n            See [MDN's \\\\`for...in\\\\`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in)\\n            documentation for more information about \\\\`for...in\\\\` loops.\\n\\n            Also consider using a [\\\\`Map\\\\`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map)\\n            or [\\\\`Set\\\\`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set)\\n            if you're storing collections of objects.\\n            Using \\\\`Object\\\\`s can cause occasional edge case bugs, such as if a key is named \\\"hasOwnProperty\\\".\\n        \"]))),\n        optionsDescription: \"Not configurable.\",\n        options: null,\n        optionExamples: [true],\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = \"for (... in ...) statements must be filtered with an if statement\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    return ts.forEachChild(ctx.sourceFile, function cb(node) {\n        if (tsutils_1.isForInStatement(node) && tsutils_1.isBlock(node.statement) && !isFiltered(node.statement)) {\n            ctx.addFailureAtNode(node, Rule.FAILURE_STRING);\n        }\n        return ts.forEachChild(node, cb);\n    });\n}\nfunction isFiltered(_a) {\n    var statements = _a.statements;\n    switch (statements.length) {\n        case 0:\n            return true;\n        case 1:\n            return statements[0].kind === ts.SyntaxKind.IfStatement;\n        default:\n            return (statements[0].kind === ts.SyntaxKind.IfStatement &&\n                nodeIsContinue(statements[0].thenStatement));\n    }\n}\nfunction nodeIsContinue(node) {\n    return (node.kind === ts.SyntaxKind.ContinueStatement ||\n        (tsutils_1.isBlock(node) &&\n            node.statements.length === 1 &&\n            node.statements[0].kind === ts.SyntaxKind.ContinueStatement));\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/forinRule.js\n// module id = 2031\n// module chunks = 139"],"sourceRoot":""}