{"version":3,"sources":["../node_modules/tslint/lib/rules/noRedundantJsdocRule.js"],"names":["Object","defineProperty","exports","value","tslib_1","__webpack_require__","tsutils_1","ts","Rule","_super","apply","this","arguments","__extends","FAILURE_STRING_REDUNDANT_TAG","tagName","FAILURE_STRING_NO_COMMENT","prototype","sourceFile","applyWithFunction","walk","metadata","ruleName","description","optionsDescription","options","optionExamples","type","typescriptOnly","FAILURE_STRING_REDUNDANT_TYPE","Rules","AbstractRule","ctx","statements","forEach","cb","node","canHaveJsDoc","_i","_a","getJsDoc","length","tags","undefined","_b","tags_1","checkTag","forEachChild","tag","kind","SyntaxKind","JSDocTag","redundantTags","has","text","addFailureAtNode","JSDocAugmentsTag","JSDocClassTag","JSDocTypeTag","JSDocTypedefTag","JSDocPropertyTag","JSDocTemplateTag","comment","JSDocReturnTag","JSDocParameterTag","typeExpression","Error","Set"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IAEAG,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAuBA,OAzBAP,EAAAS,UAAAL,EAAAC,GAIAD,EAAAM,6BAAA,SAAAC,GACA,qBAAAA,EAAA,sCAEAP,EAAAQ,0BAAA,SAAAD,GACA,WAAAA,EAAA,+DAEAP,EAAAS,UAAAP,MAAA,SAAAQ,GACA,OAAAP,KAAAQ,kBAAAD,EAAAE,IAGAZ,EAAAa,UACAC,SAAA,qBACAC,YAAA,2DACAC,mBAAA,oBACAC,QAAA,KACAC,iBAAA,GACAC,KAAA,QACAC,gBAAA,GAGApB,EAAAqB,8BAAA,4DACArB,EA1BA,CADAH,EAAA,MA4BCyB,MAAAC,cAED,SAAAX,EAAAY,GACA,IAAAd,EAAAc,EAAAd,WAEA,OAAAA,EAAAe,WAAAC,QAAA,SAAAC,EAAAC,GACA,GAAA9B,EAAA+B,aAAAD,GACA,QAAAE,EAAA,EAAAC,EAAAjC,EAAAkC,SAAAJ,EAAAlB,GAAuEoB,EAAAC,EAAAE,OAAgBH,IAAA,CACvF,IAAAI,EAAAH,EAAAD,GAAAI,KACA,QAAAC,IAAAD,EACA,QAAAE,EAAA,EAAAC,EAAAH,EAAmDE,EAAAC,EAAAJ,OAAoBG,IAAA,CAEvEE,EADAD,EAAAD,KAMA,OAAArC,EAAAwC,aAAAX,EAAAD,KAEA,SAAAW,EAAAE,GACA,OAAAA,EAAAC,MACA,KAAA1C,EAAA2C,WAAAC,SACAC,EAAAC,IAAAL,EAAAjC,QAAAuC,OACAtB,EAAAuB,iBAAAP,EAAAjC,QAAAP,EAAAM,6BAAAkC,EAAAjC,QAAAuC,OAEA,MACA,KAAA/C,EAAA2C,WAAAM,iBAEA,MACA,KAAAjD,EAAA2C,WAAAO,cACA,KAAAlD,EAAA2C,WAAAQ,aACA,KAAAnD,EAAA2C,WAAAS,gBACA,KAAApD,EAAA2C,WAAAU,iBAEA5B,EAAAuB,iBAAAP,EAAAjC,QAAAP,EAAAM,6BAAAkC,EAAAjC,QAAAuC,OACA,MACA,KAAA/C,EAAA2C,WAAAW,sBACAlB,IAAAK,EAAAc,SACA,KAAAd,EAAAc,SACA9B,EAAAuB,iBAAAP,EAAAjC,QAAAP,EAAAQ,0BAAAgC,EAAAjC,QAAAuC,OAEA,MACA,KAAA/C,EAAA2C,WAAAa,eACA,KAAAxD,EAAA2C,WAAAc,kBACA,IAAAzB,EAAAS,EAAAiB,EAAA1B,EAAA0B,eAAAH,EAAAvB,EAAAuB,aACAnB,IAAAsB,GACAjC,EAAAuB,iBAAAU,EAAAzD,EAAAqB,oCAEAc,IAAAmB,GAAA,KAAAA,GAEA9B,EAAAuB,iBAAAP,EAAAjC,QAAAP,EAAAQ,0BAAAgC,EAAAjC,QAAAuC,OAEA,MAEA,QACA,UAAAY,MAAA,wBAAA3D,EAAA2C,WAAAF,EAAAC,SAtDA/C,EAAAM,OA0DA,IAAA4C,EAAA,IAAAe,KACA,WACA,SACA,QACA,WACA,aACA,UACA,OACA,UACA,WACA,SACA,aACA,YACA,WACA,SACA,WACA,QACA,QACA,SACA,OACA,YACA,WACA,UACA,WACA,YACA,SACA,WACA,WACA,SACA","file":"static/js/84.053fb2bc.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2017 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.FAILURE_STRING_REDUNDANT_TAG = function (tagName) {\n        return \"JSDoc tag '@\" + tagName + \"' is redundant in TypeScript code.\";\n    };\n    Rule.FAILURE_STRING_NO_COMMENT = function (tagName) {\n        return \"'@\" + tagName + \"' is redundant in TypeScript code if it has no description.\";\n    };\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-redundant-jsdoc\",\n        description: \"Forbids JSDoc which duplicates TypeScript functionality.\",\n        optionsDescription: \"Not configurable.\",\n        options: null,\n        optionExamples: [true],\n        type: \"style\",\n        typescriptOnly: true,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING_REDUNDANT_TYPE = \"Type annotation in JSDoc is redundant in TypeScript code.\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    var sourceFile = ctx.sourceFile;\n    // Intentionally exclude EndOfFileToken: it can have JSDoc, but it is only relevant in JavaScript files\n    return sourceFile.statements.forEach(function cb(node) {\n        if (tsutils_1.canHaveJsDoc(node)) {\n            for (var _i = 0, _a = tsutils_1.getJsDoc(node, sourceFile); _i < _a.length; _i++) {\n                var tags = _a[_i].tags;\n                if (tags !== undefined) {\n                    for (var _b = 0, tags_1 = tags; _b < tags_1.length; _b++) {\n                        var tag = tags_1[_b];\n                        checkTag(tag);\n                    }\n                }\n            }\n        }\n        return ts.forEachChild(node, cb);\n    });\n    function checkTag(tag) {\n        switch (tag.kind) {\n            case ts.SyntaxKind.JSDocTag:\n                if (redundantTags.has(tag.tagName.text)) {\n                    ctx.addFailureAtNode(tag.tagName, Rule.FAILURE_STRING_REDUNDANT_TAG(tag.tagName.text));\n                }\n                break;\n            case ts.SyntaxKind.JSDocAugmentsTag:\n                // OK\n                break;\n            case ts.SyntaxKind.JSDocClassTag:\n            case ts.SyntaxKind.JSDocTypeTag:\n            case ts.SyntaxKind.JSDocTypedefTag:\n            case ts.SyntaxKind.JSDocPropertyTag:\n                // Always redundant\n                ctx.addFailureAtNode(tag.tagName, Rule.FAILURE_STRING_REDUNDANT_TAG(tag.tagName.text));\n                break;\n            case ts.SyntaxKind.JSDocTemplateTag:\n                if (tag.comment === undefined ||\n                    tag.comment === \"\") {\n                    ctx.addFailureAtNode(tag.tagName, Rule.FAILURE_STRING_NO_COMMENT(tag.tagName.text));\n                }\n                break;\n            case ts.SyntaxKind.JSDocReturnTag:\n            case ts.SyntaxKind.JSDocParameterTag: {\n                var _a = tag, typeExpression = _a.typeExpression, comment = _a.comment;\n                if (typeExpression !== undefined) {\n                    ctx.addFailureAtNode(typeExpression, Rule.FAILURE_STRING_REDUNDANT_TYPE);\n                }\n                if (comment === undefined || comment === \"\") {\n                    // Redundant if no documentation\n                    ctx.addFailureAtNode(tag.tagName, Rule.FAILURE_STRING_NO_COMMENT(tag.tagName.text));\n                }\n                break;\n            }\n            default:\n                throw new Error(\"Unexpected tag kind: \" + ts.SyntaxKind[tag.kind]);\n        }\n    }\n}\nvar redundantTags = new Set([\n    \"abstract\",\n    \"access\",\n    \"class\",\n    \"constant\",\n    \"constructs\",\n    \"default\",\n    \"enum\",\n    \"exports\",\n    \"function\",\n    \"global\",\n    \"implements\",\n    \"interface\",\n    \"instance\",\n    \"member\",\n    \"memberof\",\n    \"mixes\",\n    \"mixin\",\n    \"module\",\n    \"name\",\n    \"namespace\",\n    \"override\",\n    \"private\",\n    \"property\",\n    \"protected\",\n    \"public\",\n    \"readonly\",\n    \"requires\",\n    \"static\",\n    \"this\",\n]);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noRedundantJsdocRule.js\n// module id = 2089\n// module chunks = 84"],"sourceRoot":""}