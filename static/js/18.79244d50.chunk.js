webpackJsonp([18],{2097:function(n,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=e(1),a=e(843),i=e(54),s=e(1116),c=e(2190),d=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return o.__extends(t,n),t.prototype.apply=function(n){return this.applyWithFunction(n,p)},t.metadata={ruleName:"no-string-throw",description:"Flags throwing plain strings or concatenations of strings.",hasFix:!0,options:null,optionExamples:[!0],optionsDescription:"Not configurable.",rationale:s.Utils.dedent(r||(r=o.__makeTemplateObject(['\n            Example \u2013 Doing it right\n\n            ```ts\n            // throwing an Error from typical function, whether sync or async\n            if (!productToAdd) {\n                throw new Error("How can I add new product when no value provided?");\n            }\n            ```\n\n            Example \u2013 Anti Pattern\n\n            ```ts\n            // throwing a string lacks any stack trace information and other important data properties\n            if (!productToAdd) {\n                throw ("How can I add new product when no value provided?");\n            }\n            ```\n\n            Only Error objects contain a `.stack` member equivalent to the current stack trace.\n            Primitives such as strings do not.\n        '],['\n            Example \u2013 Doing it right\n\n            \\`\\`\\`ts\n            // throwing an Error from typical function, whether sync or async\n            if (!productToAdd) {\n                throw new Error("How can I add new product when no value provided?");\n            }\n            \\`\\`\\`\n\n            Example \u2013 Anti Pattern\n\n            \\`\\`\\`ts\n            // throwing a string lacks any stack trace information and other important data properties\n            if (!productToAdd) {\n                throw ("How can I add new product when no value provided?");\n            }\n            \\`\\`\\`\n\n            Only Error objects contain a \\`.stack\\` member equivalent to the current stack trace.\n            Primitives such as strings do not.\n        ']))),codeExamples:c.codeExamples,type:"functionality",typescriptOnly:!1},t.FAILURE_STRING="Throwing plain strings (not instances of Error) gives no stack traces",t}(s.Rules.AbstractRule);function p(n){var t=n.sourceFile;return i.forEachChild(n.sourceFile,function e(r){if(a.isThrowStatement(r)){var o=r.expression;void 0!==o&&function n(t){switch(t.kind){case i.SyntaxKind.StringLiteral:case i.SyntaxKind.NoSubstitutionTemplateLiteral:case i.SyntaxKind.TemplateExpression:return!0;case i.SyntaxKind.BinaryExpression:var e=t,r=e.operatorToken,o=e.left,a=e.right;return r.kind===i.SyntaxKind.PlusToken&&(n(o)||n(a));case i.SyntaxKind.ParenthesizedExpression:return n(t.expression);default:return!1}}(o)&&n.addFailureAtNode(r,d.FAILURE_STRING,[s.Replacement.appendText(o.getStart(t),"new Error("),s.Replacement.appendText(o.getEnd(),")")])}return i.forEachChild(r,e)})}t.Rule=d},2190:function(n,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,a,i=e(1),s=e(1116);t.codeExamples=[{description:"Flags throwing plain strings or concatenations of strings.",config:s.Utils.dedent(r||(r=i.__makeTemplateObject(['\n            "rules": { "no-string-throw": true }\n        '],['\n            "rules": { "no-string-throw": true }\n        ']))),pass:s.Utils.dedent(o||(o=i.__makeTemplateObject(["\n            try {\n                // ...\n            } catch (e) {\n                throw e;\n            }\n        "],["\n            try {\n                // ...\n            } catch (e) {\n                throw e;\n            }\n        "]))),fail:s.Utils.dedent(a||(a=i.__makeTemplateObject(["\n            try {\n                // ...\n            } catch {\n                throw 'There was a problem.';\n            }\n        "],["\n            try {\n                // ...\n            } catch {\n                throw 'There was a problem.';\n            }\n        "])))}]}});
//# sourceMappingURL=18.79244d50.chunk.js.map