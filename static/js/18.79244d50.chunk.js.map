{"version":3,"sources":["../node_modules/tslint/lib/rules/noStringThrowRule.js","../node_modules/tslint/lib/rules/code-examples/noStringThrowRule.examples.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","tsutils_1","ts","Lint","noStringThrowRule_examples_1","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","metadata","ruleName","description","hasFix","options","optionExamples","optionsDescription","rationale","Utils","dedent","__makeTemplateObject","codeExamples","type","typescriptOnly","FAILURE_STRING","Rules","AbstractRule","ctx","forEachChild","cb","node","isThrowStatement","expression","undefined","isString","kind","SyntaxKind","StringLiteral","NoSubstitutionTemplateLiteral","TemplateExpression","BinaryExpression","_a","operatorToken","left","right","PlusToken","ParenthesizedExpression","addFailureAtNode","Replacement","appendText","getStart","getEnd","templateObject_2","templateObject_3","config","pass","fail"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IA+DAC,EA/DAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAAJ,EAAA,MACAK,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAoBA,OAtBAT,EAAAW,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,IAGAT,EAAAU,UACAC,SAAA,kBACAC,YAAA,6DACAC,QAAA,EACAC,QAAA,KACAC,iBAAA,GACAC,mBAAA,oBACAC,UAAAnB,EAAAoB,MAAAC,OAAA1B,MAAAC,EAAA0B,sBAAA,kwBAA+rB,gyBAC/rBC,aAAAtB,EAAAsB,aACAC,KAAA,gBACAC,gBAAA,GAGAvB,EAAAwB,eAAA,wEACAxB,EAvBA,CAwBCF,EAAA2B,MAAAC,cAED,SAAAjB,EAAAkB,GACA,IAAApB,EAAAoB,EAAApB,WACA,OAAAV,EAAA+B,aAAAD,EAAApB,WAAA,SAAAsB,EAAAC,GACA,GAAAlC,EAAAmC,iBAAAD,GAAA,CACA,IAAAE,EAAAF,EAAAE,gBACAC,IAAAD,GAUA,SAAAE,EAAAJ,GACA,OAAAA,EAAAK,MACA,KAAAtC,EAAAuC,WAAAC,cACA,KAAAxC,EAAAuC,WAAAE,8BACA,KAAAzC,EAAAuC,WAAAG,mBACA,SACA,KAAA1C,EAAAuC,WAAAI,iBACA,IAAAC,EAAAX,EAAAY,EAAAD,EAAAC,cAAAC,EAAAF,EAAAE,KAAAC,EAAAH,EAAAG,MACA,OAAAF,EAAAP,OAAAtC,EAAAuC,WAAAS,YACAX,EAAAS,IAAAT,EAAAU,IAEA,KAAA/C,EAAAuC,WAAAU,wBACA,OAAAZ,EAAAJ,EAAAE,YACA,QACA,UAxBAE,CAAAF,IACAL,EAAAoB,iBAAAjB,EAAA9B,EAAAwB,gBACA1B,EAAAkD,YAAAC,WAAAjB,EAAAkB,SAAA3C,GAAA,cACAT,EAAAkD,YAAAC,WAAAjB,EAAAmB,SAAA,OAIA,OAAAtD,EAAA+B,aAAAE,EAAAD,KAbAtC,EAAAS,0CC/BAX,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAWAC,EAAA2D,EAAAC,EAXA3D,EAAAC,EAAA,GACAG,EAAAH,EAAA,MAEAJ,EAAA8B,eAEAT,YAAA,6DACA0C,OAAAxD,EAAAoB,MAAAC,OAAA1B,MAAAC,EAAA0B,sBAAA,iEAA+J,mEAC/JmC,KAAAzD,EAAAoB,MAAAC,OAAAiC,MAAA1D,EAAA0B,sBAAA,8HAAsN,gIACtNoC,KAAA1D,EAAAoB,MAAAC,OAAAkC,MAAA3D,EAAA0B,sBAAA,+IAAuO","file":"static/js/18.79244d50.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2018 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar noStringThrowRule_examples_1 = require(\"./code-examples/noStringThrowRule.examples\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-string-throw\",\n        description: \"Flags throwing plain strings or concatenations of strings.\",\n        hasFix: true,\n        options: null,\n        optionExamples: [true],\n        optionsDescription: \"Not configurable.\",\n        rationale: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Example \\u2013 Doing it right\\n\\n            ```ts\\n            // throwing an Error from typical function, whether sync or async\\n            if (!productToAdd) {\\n                throw new Error(\\\"How can I add new product when no value provided?\\\");\\n            }\\n            ```\\n\\n            Example \\u2013 Anti Pattern\\n\\n            ```ts\\n            // throwing a string lacks any stack trace information and other important data properties\\n            if (!productToAdd) {\\n                throw (\\\"How can I add new product when no value provided?\\\");\\n            }\\n            ```\\n\\n            Only Error objects contain a `.stack` member equivalent to the current stack trace.\\n            Primitives such as strings do not.\\n        \"], [\"\\n            Example \\u2013 Doing it right\\n\\n            \\\\`\\\\`\\\\`ts\\n            // throwing an Error from typical function, whether sync or async\\n            if (!productToAdd) {\\n                throw new Error(\\\"How can I add new product when no value provided?\\\");\\n            }\\n            \\\\`\\\\`\\\\`\\n\\n            Example \\u2013 Anti Pattern\\n\\n            \\\\`\\\\`\\\\`ts\\n            // throwing a string lacks any stack trace information and other important data properties\\n            if (!productToAdd) {\\n                throw (\\\"How can I add new product when no value provided?\\\");\\n            }\\n            \\\\`\\\\`\\\\`\\n\\n            Only Error objects contain a \\\\`.stack\\\\` member equivalent to the current stack trace.\\n            Primitives such as strings do not.\\n        \"]))),\n        codeExamples: noStringThrowRule_examples_1.codeExamples,\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = \"Throwing plain strings (not instances of Error) gives no stack traces\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    var sourceFile = ctx.sourceFile;\n    return ts.forEachChild(ctx.sourceFile, function cb(node) {\n        if (tsutils_1.isThrowStatement(node)) {\n            var expression = node.expression;\n            if (expression !== undefined && isString(expression)) {\n                ctx.addFailureAtNode(node, Rule.FAILURE_STRING, [\n                    Lint.Replacement.appendText(expression.getStart(sourceFile), \"new Error(\"),\n                    Lint.Replacement.appendText(expression.getEnd(), \")\"),\n                ]);\n            }\n        }\n        return ts.forEachChild(node, cb);\n    });\n}\nfunction isString(node) {\n    switch (node.kind) {\n        case ts.SyntaxKind.StringLiteral:\n        case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n        case ts.SyntaxKind.TemplateExpression:\n            return true;\n        case ts.SyntaxKind.BinaryExpression: {\n            var _a = node, operatorToken = _a.operatorToken, left = _a.left, right = _a.right;\n            return (operatorToken.kind === ts.SyntaxKind.PlusToken &&\n                (isString(left) || isString(right)));\n        }\n        case ts.SyntaxKind.ParenthesizedExpression:\n            return isString(node.expression);\n        default:\n            return false;\n    }\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noStringThrowRule.js\n// module id = 2097\n// module chunks = 18","\"use strict\";\n/**\n * @license\n * Copyright 2018 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Lint = require(\"../../index\");\n// tslint:disable: object-literal-sort-keys\nexports.codeExamples = [\n    {\n        description: \"Flags throwing plain strings or concatenations of strings.\",\n        config: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            \\\"rules\\\": { \\\"no-string-throw\\\": true }\\n        \"], [\"\\n            \\\"rules\\\": { \\\"no-string-throw\\\": true }\\n        \"]))),\n        pass: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            try {\\n                // ...\\n            } catch (e) {\\n                throw e;\\n            }\\n        \"], [\"\\n            try {\\n                // ...\\n            } catch (e) {\\n                throw e;\\n            }\\n        \"]))),\n        fail: Lint.Utils.dedent(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n            try {\\n                // ...\\n            } catch {\\n                throw 'There was a problem.';\\n            }\\n        \"], [\"\\n            try {\\n                // ...\\n            } catch {\\n                throw 'There was a problem.';\\n            }\\n        \"]))),\n    },\n];\nvar templateObject_1, templateObject_2, templateObject_3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/code-examples/noStringThrowRule.examples.js\n// module id = 2190\n// module chunks = 18"],"sourceRoot":""}