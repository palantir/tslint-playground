{"version":3,"sources":["../node_modules/tslint/lib/rules/labelPositionRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","tsutils_1","ts","Lint","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","metadata","ruleName","description","descriptionDetails","rationale","Utils","dedent","__makeTemplateObject","optionsDescription","options","optionExamples","type","typescriptOnly","FAILURE_STRING","Rules","AbstractRule","ctx","forEachChild","cb","node","isLabeledStatement","kind","SyntaxKind","DoStatement","ForStatement","ForInStatement","ForOfStatement","WhileStatement","SwitchStatement","isLabelable","statement","addFailureAtNode","label"],"mappings":"sDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAkDAC,EAlDAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAmBA,OArBAR,EAAAU,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,IAGAT,EAAAU,UACAC,SAAA,iBACAC,YAAA,4CACAC,mBAAA,0EACAC,UAAAf,EAAAgB,MAAAC,OAAAtB,MAAAC,EAAAsB,sBAAA,klBACAC,mBAAA,oBACAC,QAAA,KACAC,iBAAA,GACAC,KAAA,gBACAC,gBAAA,GAGAtB,EAAAuB,eAAA,gCACAvB,EAtBA,CAuBCD,EAAAyB,MAAAC,cAED,SAAAhB,EAAAiB,GACA,OAAA5B,EAAA6B,aAAAD,EAAAnB,WAAA,SAAAqB,EAAAC,GAIA,OAHAhC,EAAAiC,mBAAAD,KAMA,SAAAA,GACA,OAAAA,EAAAE,MACA,KAAAjC,EAAAkC,WAAAC,YACA,KAAAnC,EAAAkC,WAAAE,aACA,KAAApC,EAAAkC,WAAAG,eACA,KAAArC,EAAAkC,WAAAI,eACA,KAAAtC,EAAAkC,WAAAK,eACA,KAAAvC,EAAAkC,WAAAM,gBACA,SACA,QACA,UAhBAC,CAAAV,EAAAW,YACAd,EAAAe,iBAAAZ,EAAAa,MAAA1C,EAAAuB,gBAEAzB,EAAA6B,aAAAE,EAAAD,KANApC,EAAAQ","file":"static/js/131.90041622.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"label-position\",\n        description: \"Only allows labels in sensible locations.\",\n        descriptionDetails: \"This rule only allows labels to be on `do/for/while/switch` statements.\",\n        rationale: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Labels in JavaScript only can be used in conjunction with `break` or `continue`,\\n            constructs meant to be used for loop flow control. While you can theoretically use\\n            labels on any block statement in JS, it is considered poor code structure to do so.\"], [\"\\n            Labels in JavaScript only can be used in conjunction with \\\\`break\\\\` or \\\\`continue\\\\`,\\n            constructs meant to be used for loop flow control. While you can theoretically use\\n            labels on any block statement in JS, it is considered poor code structure to do so.\"]))),\n        optionsDescription: \"Not configurable.\",\n        options: null,\n        optionExamples: [true],\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = \"unexpected label on statement\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    return ts.forEachChild(ctx.sourceFile, function cb(node) {\n        if (tsutils_1.isLabeledStatement(node) && !isLabelable(node.statement)) {\n            ctx.addFailureAtNode(node.label, Rule.FAILURE_STRING);\n        }\n        return ts.forEachChild(node, cb);\n    });\n}\nfunction isLabelable(node) {\n    switch (node.kind) {\n        case ts.SyntaxKind.DoStatement:\n        case ts.SyntaxKind.ForStatement:\n        case ts.SyntaxKind.ForInStatement:\n        case ts.SyntaxKind.ForOfStatement:\n        case ts.SyntaxKind.WhileStatement:\n        case ts.SyntaxKind.SwitchStatement:\n            return true;\n        default:\n            return false;\n    }\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/labelPositionRule.js\n// module id = 2040\n// module chunks = 131"],"sourceRoot":""}