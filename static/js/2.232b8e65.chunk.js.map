{"version":3,"sources":["../node_modules/tslint/lib/rules/completedDocsRule.js","../node_modules/tslint/lib/rules/completed-docs/exclusion.js","../node_modules/tslint/lib/rules/completed-docs/exclusionFactory.js","../node_modules/tslint/lib/rules/completed-docs/blockExclusion.js","../node_modules/tslint/lib/rules/completed-docs/classExclusion.js","../node_modules/tslint/lib/rules/completed-docs/tagExclusion.js"],"names":["Object","defineProperty","exports","value","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","tslib_1","__webpack_require__","ts","Lint","exclusionFactory_1","ALL","ARGUMENT_CLASSES","ARGUMENT_ENUMS","ARGUMENT_ENUM_MEMBERS","ARGUMENT_FUNCTIONS","ARGUMENT_INTERFACES","ARGUMENT_METHODS","ARGUMENT_NAMESPACES","ARGUMENT_PROPERTIES","ARGUMENT_TYPES","ARGUMENT_VARIABLES","DESCRIPTOR_TAGS","DESCRIPTOR_LOCATIONS","DESCRIPTOR_PRIVACIES","DESCRIPTOR_VISIBILITIES","LOCATION_INSTANCE","LOCATION_STATIC","PRIVACY_PRIVATE","PRIVACY_PROTECTED","PRIVACY_PUBLIC","TAGS_FOR_CONTENT","TAGS_FOR_EXISTENCE","VISIBILITY_EXPORTED","VISIBILITY_INTERNAL","Rule","_super","_this","apply","this","arguments","exclusionFactory","ExclusionFactory","__extends","prototype","applyWithProgram","sourceFile","program","options","getOptions","exclusionsMap","getExclusionsMap","ruleArguments","applyWithFunction","walk","getTypeChecker","length","defaultArguments","constructExclusionsMap","FAILURE_STRING_EXIST","see","ARGUMENT_DESCRIPTOR_BLOCK","properties","items","type","enum","ARGUMENT_DESCRIPTOR_CLASS","metadata","ruleName","description","optionsDescription","Utils","dedent","templateObject_1","__makeTemplateObject","keys","join","anyOf","optionExamples","rationale","templateObject_2","typescriptOnly","requiresTypeInfo","Rules","TypedRule","modifierAliases","export","context","typeChecker","forEachChild","cb","node","kind","SyntaxKind","ClassDeclaration","checkNode","EnumDeclaration","_i","members","member","FunctionDeclaration","InterfaceDeclaration","MethodSignature","MethodDeclaration","parent","ObjectLiteralExpression","ModuleDeclaration","PropertySignature","PropertyDeclaration","TypeAliasDeclaration","VariableStatement","SourceFile","ModuleBlock","declarationList","declarations","declaration","GetAccessor","SetAccessor","nodeType","requirementNode","name","undefined","exclusions","get","exclusions_1","excludes","symbol","getSymbolAtLocation","comments","getDocumentationComment","nodeDescriptor","map","comment","text","trim","start","getStart","width","getText","split","modifiers","modifier","toLowerCase","alias","describeDocumentationFailure","addFailureAt","addDocumentationFailure","checkComments","replace","describeNode","completedDocsRule_1","Exclusion","descriptor","createSet","values","Set","utils_1","blockExclusion_1","classExclusion_1","tagExclusion_1","Map","ruleArguments_1","ruleArgument","addRequirements","descriptors","docType","hasOwnProperty","set","createRequirementsForDocType","requirements","push","ClassExclusion","BlockExclusion","tags","TagExclusion","tsutils_1","visibilities","has","hasModifier","ExportKeyword","locations","privacies","shouldLocationBeDocumented","shouldPrivacyBeDocumented","StaticKeyword","PrivateKeyword","ProtectedKeyword","contentTags","content","existenceTags","existence","documentationNode","getDocumentationNode","tagsWithContents_1","parseTagsWithContents","getFullText","tagWithContent","matcherBody","RegExp","test","VariableDeclaration","nodeText","docMatches","match","lines","line","body","substring","indexOf","firstSpaceIndex","search"],"mappings":"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","file":"static/js/2.232b8e65.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar exclusionFactory_1 = require(\"./completed-docs/exclusionFactory\");\nexports.ALL = \"all\";\nexports.ARGUMENT_CLASSES = \"classes\";\nexports.ARGUMENT_ENUMS = \"enums\";\nexports.ARGUMENT_ENUM_MEMBERS = \"enum-members\";\nexports.ARGUMENT_FUNCTIONS = \"functions\";\nexports.ARGUMENT_INTERFACES = \"interfaces\";\nexports.ARGUMENT_METHODS = \"methods\";\nexports.ARGUMENT_NAMESPACES = \"namespaces\";\nexports.ARGUMENT_PROPERTIES = \"properties\";\nexports.ARGUMENT_TYPES = \"types\";\nexports.ARGUMENT_VARIABLES = \"variables\";\nexports.DESCRIPTOR_TAGS = \"tags\";\nexports.DESCRIPTOR_LOCATIONS = \"locations\";\nexports.DESCRIPTOR_PRIVACIES = \"privacies\";\nexports.DESCRIPTOR_VISIBILITIES = \"visibilities\";\nexports.LOCATION_INSTANCE = \"instance\";\nexports.LOCATION_STATIC = \"static\";\nexports.PRIVACY_PRIVATE = \"private\";\nexports.PRIVACY_PROTECTED = \"protected\";\nexports.PRIVACY_PUBLIC = \"public\";\nexports.TAGS_FOR_CONTENT = \"content\";\nexports.TAGS_FOR_EXISTENCE = \"existence\";\nexports.VISIBILITY_EXPORTED = \"exported\";\nexports.VISIBILITY_INTERNAL = \"internal\";\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /* tslint:enable:object-literal-sort-keys */\n        _this.exclusionFactory = new exclusionFactory_1.ExclusionFactory();\n        return _this;\n    }\n    Rule.prototype.applyWithProgram = function (sourceFile, program) {\n        var options = this.getOptions();\n        var exclusionsMap = this.getExclusionsMap(options.ruleArguments);\n        return this.applyWithFunction(sourceFile, walk, exclusionsMap, program.getTypeChecker());\n    };\n    Rule.prototype.getExclusionsMap = function (ruleArguments) {\n        if (ruleArguments.length === 0) {\n            ruleArguments = [Rule.defaultArguments];\n        }\n        return this.exclusionFactory.constructExclusionsMap(ruleArguments);\n    };\n    Rule.FAILURE_STRING_EXIST = \"Documentation must exist for \";\n    Rule.defaultArguments = (_a = {},\n        _a[exports.ARGUMENT_CLASSES] = true,\n        _a[exports.ARGUMENT_FUNCTIONS] = true,\n        _a[exports.ARGUMENT_METHODS] = (_b = {},\n            _b[exports.DESCRIPTOR_TAGS] = (_c = {},\n                _c[exports.TAGS_FOR_CONTENT] = {\n                    see: \".*\",\n                },\n                _c[exports.TAGS_FOR_EXISTENCE] = [\"deprecated\", \"inheritdoc\"],\n                _c),\n            _b),\n        _a[exports.ARGUMENT_PROPERTIES] = (_d = {},\n            _d[exports.DESCRIPTOR_TAGS] = (_e = {},\n                _e[exports.TAGS_FOR_CONTENT] = {\n                    see: \".*\",\n                },\n                _e[exports.TAGS_FOR_EXISTENCE] = [\"deprecated\", \"inheritdoc\"],\n                _e),\n            _d),\n        _a);\n    Rule.ARGUMENT_DESCRIPTOR_BLOCK = {\n        properties: (_f = {},\n            _f[exports.DESCRIPTOR_TAGS] = {\n                properties: (_g = {},\n                    _g[exports.TAGS_FOR_CONTENT] = {\n                        items: {\n                            type: \"string\",\n                        },\n                        type: \"object\",\n                    },\n                    _g[exports.TAGS_FOR_EXISTENCE] = {\n                        items: {\n                            type: \"string\",\n                        },\n                        type: \"array\",\n                    },\n                    _g),\n            },\n            _f[exports.DESCRIPTOR_VISIBILITIES] = {\n                enum: [exports.ALL, exports.VISIBILITY_EXPORTED, exports.VISIBILITY_INTERNAL],\n                type: \"string\",\n            },\n            _f),\n        type: \"object\",\n    };\n    Rule.ARGUMENT_DESCRIPTOR_CLASS = {\n        properties: (_h = {},\n            _h[exports.DESCRIPTOR_TAGS] = {\n                properties: (_j = {},\n                    _j[exports.TAGS_FOR_CONTENT] = {\n                        items: {\n                            type: \"string\",\n                        },\n                        type: \"object\",\n                    },\n                    _j[exports.TAGS_FOR_EXISTENCE] = {\n                        items: {\n                            type: \"string\",\n                        },\n                        type: \"array\",\n                    },\n                    _j),\n            },\n            _h[exports.DESCRIPTOR_LOCATIONS] = {\n                enum: [exports.ALL, exports.LOCATION_INSTANCE, exports.LOCATION_STATIC],\n                type: \"string\",\n            },\n            _h[exports.DESCRIPTOR_PRIVACIES] = {\n                enum: [exports.ALL, exports.PRIVACY_PRIVATE, exports.PRIVACY_PROTECTED, exports.PRIVACY_PUBLIC],\n                type: \"string\",\n            },\n            _h),\n        type: \"object\",\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"completed-docs\",\n        description: \"Enforces JSDoc comments for important items be filled out.\",\n        optionsDescription: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            `true` to enable for `[\", \"]`,\\n            or an array with each item in one of two formats:\\n\\n            * `string` to enable for that type\\n            * `object` keying types to when their documentation is required:\\n                * `\\\"\", \"\\\"` and `\\\"\", \"\\\"` may specify:\\n                    * `\\\"\", \"\\\"`:\\n                        * `\\\"\", \"\\\"`\\n                        * `\\\"\", \"\\\"`\\n                        * `\\\"\", \"\\\"`\\n                        * `\\\"\", \"\\\"`\\n                    * `\\\"\", \"\\\"`:\\n                        * `\\\"\", \"\\\"`\\n                        * `\\\"\", \"\\\"`\\n                        * `\\\"\", \"\\\"`\\n                * Other types may specify `\\\"\", \"\\\"`:\\n                    * `\\\"\", \"\\\"`\\n                    * `\\\"\", \"\\\"`\\n                    * `\\\"\", \"\\\"`\\n                * All types may also provide `\\\"\", \"\\\"`\\n                  with members specifying tags that allow the docs to not have a body.\\n                    * `\\\"\", \"\\\"`: Object mapping tags to `RegExp` bodies content allowed to count as complete docs.\\n                    * `\\\"\", \"\\\"`: Array of tags that must only exist to count as complete docs.\\n\\n            Types that may be enabled are:\\n\\n            * `\\\"\", \"\\\"`\\n            * `\\\"\", \"\\\"`\\n            * `\\\"\", \"\\\"`\\n            * `\\\"\", \"\\\"`\\n            * `\\\"\", \"\\\"`\\n            * `\\\"\", \"\\\"`\\n            * `\\\"\", \"\\\"`\\n            * `\\\"\", \"\\\"`\\n            * `\\\"\", \"\\\"`\\n            * `\\\"\", \"\\\"`\"], [\"\\n            \\\\`true\\\\` to enable for \\\\`[\", \"]\\\\`,\\n            or an array with each item in one of two formats:\\n\\n            * \\\\`string\\\\` to enable for that type\\n            * \\\\`object\\\\` keying types to when their documentation is required:\\n                * \\\\`\\\"\", \"\\\"\\\\` and \\\\`\\\"\", \"\\\"\\\\` may specify:\\n                    * \\\\`\\\"\", \"\\\"\\\\`:\\n                        * \\\\`\\\"\", \"\\\"\\\\`\\n                        * \\\\`\\\"\", \"\\\"\\\\`\\n                        * \\\\`\\\"\", \"\\\"\\\\`\\n                        * \\\\`\\\"\", \"\\\"\\\\`\\n                    * \\\\`\\\"\", \"\\\"\\\\`:\\n                        * \\\\`\\\"\", \"\\\"\\\\`\\n                        * \\\\`\\\"\", \"\\\"\\\\`\\n                        * \\\\`\\\"\", \"\\\"\\\\`\\n                * Other types may specify \\\\`\\\"\", \"\\\"\\\\`:\\n                    * \\\\`\\\"\", \"\\\"\\\\`\\n                    * \\\\`\\\"\", \"\\\"\\\\`\\n                    * \\\\`\\\"\", \"\\\"\\\\`\\n                * All types may also provide \\\\`\\\"\", \"\\\"\\\\`\\n                  with members specifying tags that allow the docs to not have a body.\\n                    * \\\\`\\\"\", \"\\\"\\\\`: Object mapping tags to \\\\`RegExp\\\\` bodies content allowed to count as complete docs.\\n                    * \\\\`\\\"\", \"\\\"\\\\`: Array of tags that must only exist to count as complete docs.\\n\\n            Types that may be enabled are:\\n\\n            * \\\\`\\\"\", \"\\\"\\\\`\\n            * \\\\`\\\"\", \"\\\"\\\\`\\n            * \\\\`\\\"\", \"\\\"\\\\`\\n            * \\\\`\\\"\", \"\\\"\\\\`\\n            * \\\\`\\\"\", \"\\\"\\\\`\\n            * \\\\`\\\"\", \"\\\"\\\\`\\n            * \\\\`\\\"\", \"\\\"\\\\`\\n            * \\\\`\\\"\", \"\\\"\\\\`\\n            * \\\\`\\\"\", \"\\\"\\\\`\\n            * \\\\`\\\"\", \"\\\"\\\\`\"])), Object.keys(Rule.defaultArguments).join(\", \"), exports.ARGUMENT_METHODS, exports.ARGUMENT_PROPERTIES, exports.DESCRIPTOR_PRIVACIES, exports.ALL, exports.PRIVACY_PRIVATE, exports.PRIVACY_PROTECTED, exports.PRIVACY_PUBLIC, exports.DESCRIPTOR_LOCATIONS, exports.ALL, exports.LOCATION_INSTANCE, exports.LOCATION_STATIC, exports.DESCRIPTOR_VISIBILITIES, exports.ALL, exports.VISIBILITY_EXPORTED, exports.VISIBILITY_INTERNAL, exports.DESCRIPTOR_TAGS, exports.TAGS_FOR_CONTENT, exports.TAGS_FOR_EXISTENCE, exports.ARGUMENT_CLASSES, exports.ARGUMENT_ENUMS, exports.ARGUMENT_ENUM_MEMBERS, exports.ARGUMENT_FUNCTIONS, exports.ARGUMENT_INTERFACES, exports.ARGUMENT_METHODS, exports.ARGUMENT_NAMESPACES, exports.ARGUMENT_PROPERTIES, exports.ARGUMENT_TYPES, exports.ARGUMENT_VARIABLES),\n        options: {\n            type: \"array\",\n            items: {\n                anyOf: [\n                    {\n                        options: [\n                            exports.ARGUMENT_CLASSES,\n                            exports.ARGUMENT_ENUMS,\n                            exports.ARGUMENT_FUNCTIONS,\n                            exports.ARGUMENT_INTERFACES,\n                            exports.ARGUMENT_METHODS,\n                            exports.ARGUMENT_NAMESPACES,\n                            exports.ARGUMENT_PROPERTIES,\n                            exports.ARGUMENT_TYPES,\n                            exports.ARGUMENT_VARIABLES,\n                        ],\n                        type: \"string\",\n                    },\n                    {\n                        type: \"object\",\n                        properties: (_k = {},\n                            _k[exports.ARGUMENT_CLASSES] = Rule.ARGUMENT_DESCRIPTOR_BLOCK,\n                            _k[exports.ARGUMENT_ENUMS] = Rule.ARGUMENT_DESCRIPTOR_BLOCK,\n                            _k[exports.ARGUMENT_ENUM_MEMBERS] = Rule.ARGUMENT_DESCRIPTOR_BLOCK,\n                            _k[exports.ARGUMENT_FUNCTIONS] = Rule.ARGUMENT_DESCRIPTOR_BLOCK,\n                            _k[exports.ARGUMENT_INTERFACES] = Rule.ARGUMENT_DESCRIPTOR_BLOCK,\n                            _k[exports.ARGUMENT_METHODS] = Rule.ARGUMENT_DESCRIPTOR_CLASS,\n                            _k[exports.ARGUMENT_NAMESPACES] = Rule.ARGUMENT_DESCRIPTOR_BLOCK,\n                            _k[exports.ARGUMENT_PROPERTIES] = Rule.ARGUMENT_DESCRIPTOR_CLASS,\n                            _k[exports.ARGUMENT_TYPES] = Rule.ARGUMENT_DESCRIPTOR_BLOCK,\n                            _k[exports.ARGUMENT_VARIABLES] = Rule.ARGUMENT_DESCRIPTOR_BLOCK,\n                            _k),\n                    },\n                ],\n            },\n        },\n        optionExamples: [\n            true,\n            [true, exports.ARGUMENT_ENUMS, exports.ARGUMENT_FUNCTIONS, exports.ARGUMENT_METHODS],\n            [\n                true,\n                (_l = {},\n                    _l[exports.ARGUMENT_ENUMS] = true,\n                    _l[exports.ARGUMENT_FUNCTIONS] = (_m = {},\n                        _m[exports.DESCRIPTOR_VISIBILITIES] = [exports.VISIBILITY_EXPORTED],\n                        _m),\n                    _l[exports.ARGUMENT_METHODS] = (_o = {},\n                        _o[exports.DESCRIPTOR_LOCATIONS] = exports.LOCATION_INSTANCE,\n                        _o[exports.DESCRIPTOR_PRIVACIES] = [exports.PRIVACY_PUBLIC, exports.PRIVACY_PROTECTED],\n                        _o),\n                    _l[exports.ARGUMENT_PROPERTIES] = (_p = {},\n                        _p[exports.DESCRIPTOR_TAGS] = (_q = {},\n                            _q[exports.TAGS_FOR_CONTENT] = {\n                                see: [\"#.*\"],\n                            },\n                            _q[exports.TAGS_FOR_EXISTENCE] = [\"inheritdoc\"],\n                            _q),\n                        _p),\n                    _l),\n            ],\n        ],\n        rationale: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            Helps ensure important components are documented.\\n\\n            Note: use this rule sparingly. It's better to have self-documenting names on components with single, consice responsibilities.\\n            Comments that only restate the names of variables add nothing to code, and can easily become outdated.\\n        \"], [\"\\n            Helps ensure important components are documented.\\n\\n            Note: use this rule sparingly. It's better to have self-documenting names on components with single, consice responsibilities.\\n            Comments that only restate the names of variables add nothing to code, and can easily become outdated.\\n        \"]))),\n        type: \"style\",\n        typescriptOnly: false,\n        requiresTypeInfo: true,\n    };\n    return Rule;\n}(Lint.Rules.TypedRule));\nexports.Rule = Rule;\nvar modifierAliases = {\n    export: \"exported\",\n};\nfunction walk(context, typeChecker) {\n    return ts.forEachChild(context.sourceFile, cb);\n    function cb(node) {\n        switch (node.kind) {\n            case ts.SyntaxKind.ClassDeclaration:\n                checkNode(node, exports.ARGUMENT_CLASSES);\n                break;\n            case ts.SyntaxKind.EnumDeclaration:\n                checkNode(node, exports.ARGUMENT_ENUMS);\n                for (var _i = 0, _a = node.members; _i < _a.length; _i++) {\n                    var member = _a[_i];\n                    // Enum members don't have modifiers, so use the parent\n                    // enum declaration when checking the requirements.\n                    checkNode(member, exports.ARGUMENT_ENUM_MEMBERS, node);\n                }\n                break;\n            case ts.SyntaxKind.FunctionDeclaration:\n                checkNode(node, exports.ARGUMENT_FUNCTIONS);\n                break;\n            case ts.SyntaxKind.InterfaceDeclaration:\n                checkNode(node, exports.ARGUMENT_INTERFACES);\n                break;\n            case ts.SyntaxKind.MethodSignature:\n                checkNode(node, exports.ARGUMENT_METHODS);\n                break;\n            case ts.SyntaxKind.MethodDeclaration:\n                if (node.parent.kind !== ts.SyntaxKind.ObjectLiteralExpression) {\n                    checkNode(node, exports.ARGUMENT_METHODS);\n                }\n                break;\n            case ts.SyntaxKind.ModuleDeclaration:\n                checkNode(node, exports.ARGUMENT_NAMESPACES);\n                break;\n            case ts.SyntaxKind.PropertySignature:\n                checkNode(node, exports.ARGUMENT_PROPERTIES);\n                break;\n            case ts.SyntaxKind.PropertyDeclaration:\n                checkNode(node, exports.ARGUMENT_PROPERTIES);\n                break;\n            case ts.SyntaxKind.TypeAliasDeclaration:\n                checkNode(node, exports.ARGUMENT_TYPES);\n                break;\n            case ts.SyntaxKind.VariableStatement:\n                // Only check variables at the namespace/module-level or file-level\n                // and not variables declared inside functions and other things.\n                switch (node.parent.kind) {\n                    case ts.SyntaxKind.SourceFile:\n                    case ts.SyntaxKind.ModuleBlock:\n                        for (var _b = 0, _c = node.declarationList\n                            .declarations; _b < _c.length; _b++) {\n                            var declaration = _c[_b];\n                            checkNode(declaration, exports.ARGUMENT_VARIABLES, node);\n                        }\n                }\n                break;\n            case ts.SyntaxKind.GetAccessor:\n            case ts.SyntaxKind.SetAccessor:\n                if (node.parent.kind !== ts.SyntaxKind.ObjectLiteralExpression) {\n                    checkNode(node, exports.ARGUMENT_PROPERTIES);\n                }\n        }\n        return ts.forEachChild(node, cb);\n    }\n    function checkNode(node, nodeType, requirementNode) {\n        if (requirementNode === void 0) { requirementNode = node; }\n        var name = node.name;\n        if (name === undefined) {\n            return;\n        }\n        var exclusions = context.options.get(nodeType);\n        if (exclusions === undefined) {\n            return;\n        }\n        for (var _i = 0, exclusions_1 = exclusions; _i < exclusions_1.length; _i++) {\n            var exclusion = exclusions_1[_i];\n            if (exclusion.excludes(requirementNode)) {\n                return;\n            }\n        }\n        var symbol = typeChecker.getSymbolAtLocation(name);\n        if (symbol === undefined) {\n            return;\n        }\n        var comments = symbol.getDocumentationComment(typeChecker);\n        checkComments(node, describeNode(nodeType), comments, requirementNode);\n    }\n    function checkComments(node, nodeDescriptor, comments, requirementNode) {\n        if (comments\n            .map(function (comment) { return comment.text; })\n            .join(\"\")\n            .trim() === \"\") {\n            addDocumentationFailure(node, nodeDescriptor, requirementNode);\n        }\n    }\n    function addDocumentationFailure(node, nodeType, requirementNode) {\n        var start = node.getStart();\n        var width = node.getText().split(/\\r|\\n/g)[0].length;\n        var description = describeDocumentationFailure(requirementNode, nodeType);\n        context.addFailureAt(start, width, description);\n    }\n}\nfunction describeDocumentationFailure(node, nodeType) {\n    var description = Rule.FAILURE_STRING_EXIST;\n    if (node.modifiers !== undefined) {\n        description += node.modifiers\n            .map(function (modifier) { return describeModifier(modifier.kind); })\n            .join(\" \") + \" \";\n    }\n    return \"\" + description + nodeType + \".\";\n}\nfunction describeModifier(kind) {\n    var description = ts.SyntaxKind[kind].toLowerCase().split(\"keyword\")[0];\n    var alias = modifierAliases[description];\n    return alias !== undefined ? alias : description;\n}\nfunction describeNode(nodeType) {\n    return nodeType.replace(\"-\", \" \");\n}\nvar templateObject_1, templateObject_2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/completedDocsRule.js\n// module id = 1955\n// module chunks = 2","\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar completedDocsRule_1 = require(\"../completedDocsRule\");\nvar Exclusion = /** @class */ (function () {\n    function Exclusion(descriptor) {\n        if (descriptor === void 0) { descriptor = {}; }\n        this.descriptor = descriptor;\n    }\n    Exclusion.prototype.createSet = function (values) {\n        if (values === undefined || values.length === 0) {\n            values = [completedDocsRule_1.ALL];\n        }\n        return new Set(values);\n    };\n    return Exclusion;\n}());\nexports.Exclusion = Exclusion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/completed-docs/exclusion.js\n// module id = 2160\n// module chunks = 2","\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../utils\");\nvar blockExclusion_1 = require(\"./blockExclusion\");\nvar classExclusion_1 = require(\"./classExclusion\");\nvar tagExclusion_1 = require(\"./tagExclusion\");\nvar ExclusionFactory = /** @class */ (function () {\n    function ExclusionFactory() {\n    }\n    ExclusionFactory.prototype.constructExclusionsMap = function (ruleArguments) {\n        var exclusionsMap = new Map();\n        for (var _i = 0, ruleArguments_1 = ruleArguments; _i < ruleArguments_1.length; _i++) {\n            var ruleArgument = ruleArguments_1[_i];\n            this.addRequirements(exclusionsMap, ruleArgument);\n        }\n        return exclusionsMap;\n    };\n    ExclusionFactory.prototype.addRequirements = function (exclusionsMap, descriptors) {\n        if (typeof descriptors === \"string\") {\n            exclusionsMap.set(descriptors, this.createRequirementsForDocType(descriptors, {}));\n            return;\n        }\n        for (var docType in descriptors) {\n            if (utils_1.hasOwnProperty(descriptors, docType)) {\n                exclusionsMap.set(docType, this.createRequirementsForDocType(docType, descriptors[docType]));\n            }\n        }\n    };\n    ExclusionFactory.prototype.createRequirementsForDocType = function (docType, descriptor) {\n        var requirements = [];\n        if (docType === \"methods\" || docType === \"properties\") {\n            requirements.push(new classExclusion_1.ClassExclusion(descriptor));\n        }\n        else {\n            requirements.push(new blockExclusion_1.BlockExclusion(descriptor));\n        }\n        if (descriptor.tags !== undefined) {\n            requirements.push(new tagExclusion_1.TagExclusion(descriptor));\n        }\n        return requirements;\n    };\n    return ExclusionFactory;\n}());\nexports.ExclusionFactory = ExclusionFactory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/completed-docs/exclusionFactory.js\n// module id = 2180\n// module chunks = 2","\"use strict\";\n/**\n * @license\n * Copyright 2017 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar completedDocsRule_1 = require(\"../completedDocsRule\");\nvar exclusion_1 = require(\"./exclusion\");\nvar BlockExclusion = /** @class */ (function (_super) {\n    tslib_1.__extends(BlockExclusion, _super);\n    function BlockExclusion() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.visibilities = _this.createSet(_this.descriptor.visibilities);\n        return _this;\n    }\n    BlockExclusion.prototype.excludes = function (node) {\n        if (this.visibilities.has(completedDocsRule_1.ALL)) {\n            return false;\n        }\n        if (tsutils_1.hasModifier(node.modifiers, ts.SyntaxKind.ExportKeyword)) {\n            return !this.visibilities.has(completedDocsRule_1.VISIBILITY_EXPORTED);\n        }\n        return !this.visibilities.has(completedDocsRule_1.VISIBILITY_INTERNAL);\n    };\n    return BlockExclusion;\n}(exclusion_1.Exclusion));\nexports.BlockExclusion = BlockExclusion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/completed-docs/blockExclusion.js\n// module id = 2181\n// module chunks = 2","\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar completedDocsRule_1 = require(\"../completedDocsRule\");\nvar exclusion_1 = require(\"./exclusion\");\nvar ClassExclusion = /** @class */ (function (_super) {\n    tslib_1.__extends(ClassExclusion, _super);\n    function ClassExclusion() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.locations = _this.createSet(_this.descriptor.locations);\n        _this.privacies = _this.createSet(_this.descriptor.privacies);\n        return _this;\n    }\n    ClassExclusion.prototype.excludes = function (node) {\n        return !(this.shouldLocationBeDocumented(node) && this.shouldPrivacyBeDocumented(node));\n    };\n    ClassExclusion.prototype.shouldLocationBeDocumented = function (node) {\n        if (this.locations.has(completedDocsRule_1.ALL)) {\n            return true;\n        }\n        if (tsutils_1.hasModifier(node.modifiers, ts.SyntaxKind.StaticKeyword)) {\n            return this.locations.has(completedDocsRule_1.LOCATION_STATIC);\n        }\n        return this.locations.has(completedDocsRule_1.LOCATION_INSTANCE);\n    };\n    ClassExclusion.prototype.shouldPrivacyBeDocumented = function (node) {\n        if (this.privacies.has(completedDocsRule_1.ALL)) {\n            return true;\n        }\n        if (tsutils_1.hasModifier(node.modifiers, ts.SyntaxKind.PrivateKeyword)) {\n            return this.privacies.has(completedDocsRule_1.PRIVACY_PRIVATE);\n        }\n        if (tsutils_1.hasModifier(node.modifiers, ts.SyntaxKind.ProtectedKeyword)) {\n            return this.privacies.has(completedDocsRule_1.PRIVACY_PROTECTED);\n        }\n        return this.privacies.has(completedDocsRule_1.PRIVACY_PUBLIC);\n    };\n    return ClassExclusion;\n}(exclusion_1.Exclusion));\nexports.ClassExclusion = ClassExclusion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/completed-docs/classExclusion.js\n// module id = 2182\n// module chunks = 2","\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ts = require(\"typescript\");\nvar exclusion_1 = require(\"./exclusion\");\nvar TagExclusion = /** @class */ (function (_super) {\n    tslib_1.__extends(TagExclusion, _super);\n    function TagExclusion() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.contentTags = _this.descriptor.tags === undefined ? {} : _this.descriptor.tags.content;\n        _this.existenceTags = new Set(_this.descriptor.tags !== undefined && _this.descriptor.tags.existence !== undefined\n            ? _this.descriptor.tags.existence\n            : undefined);\n        return _this;\n    }\n    TagExclusion.prototype.excludes = function (node) {\n        var documentationNode = this.getDocumentationNode(node);\n        var tagsWithContents = this.parseTagsWithContents(documentationNode.getFullText());\n        for (var _i = 0, tagsWithContents_1 = tagsWithContents; _i < tagsWithContents_1.length; _i++) {\n            var tagWithContent = tagsWithContents_1[_i];\n            if (this.existenceTags.has(tagWithContent[0])) {\n                return true;\n            }\n            var matcherBody = this.contentTags[tagWithContent[0]];\n            if (matcherBody === undefined) {\n                continue;\n            }\n            if (new RegExp(matcherBody).test(tagWithContent[1])) {\n                return true;\n            }\n        }\n        return false;\n    };\n    TagExclusion.prototype.getDocumentationNode = function (node) {\n        if (node.kind === ts.SyntaxKind.VariableDeclaration) {\n            return node.parent;\n        }\n        return node;\n    };\n    TagExclusion.prototype.parseTagsWithContents = function (nodeText) {\n        if (nodeText === undefined) {\n            return [];\n        }\n        var docMatches = nodeText.match(/\\/\\*\\*\\s*\\n?([^\\*]*(\\*[^\\/])?)*\\*\\//);\n        if (docMatches === null || docMatches.length === 0) {\n            return [];\n        }\n        var lines = docMatches[0].match(/[\\r\\n\\s]*\\*\\s*@.*[\\r\\n\\s]/g);\n        if (lines === null) {\n            return [];\n        }\n        return lines.map(function (line) {\n            var body = line.substring(line.indexOf(\"@\"));\n            var firstSpaceIndex = body.search(/\\s/);\n            return [body.substring(1, firstSpaceIndex), body.substring(firstSpaceIndex).trim()];\n        });\n    };\n    return TagExclusion;\n}(exclusion_1.Exclusion));\nexports.TagExclusion = TagExclusion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/completed-docs/tagExclusion.js\n// module id = 2183\n// module chunks = 2"],"sourceRoot":""}