{"version":3,"sources":["../node_modules/tslint/lib/rules/noDuplicateSwitchCaseRule.js"],"names":["Object","defineProperty","exports","value","tslib_1","__webpack_require__","ts","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","metadata","description","optionExamples","options","optionsDescription","ruleName","type","typescriptOnly","FAILURE_STRING_FACTORY","text","Rules","AbstractRule","ctx","forEachChild","cb","node","kind","SyntaxKind","CaseBlock","previousCases","Set","_i","_a","clauses","length","clause","DefaultClause","expression","getText","has","addFailureAtNode","add","visitCaseBlock"],"mappings":"sDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,IAEAE,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAiBA,OAnBAN,EAAAQ,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,IAEAT,EAAAU,UACAC,YAAA,iDACAC,iBAAA,GACAC,QAAA,KACAC,mBAAA,GACAC,SAAA,2BACAC,KAAA,gBACAC,gBAAA,GAEAjB,EAAAkB,uBAAA,SAAAC,GACA,iCAAAA,EAAA,MAEAnB,EApBA,CADAF,EAAA,MAsBCsB,MAAAC,cAED,SAAAZ,EAAAa,GACAvB,EAAAwB,aAAAD,EAAAf,WAAA,SAAAiB,EAAAC,GACAA,EAAAC,OAAA3B,EAAA4B,WAAAC,WAKA,SAAAH,GAEA,IADA,IAAAI,EAAA,IAAAC,IACAC,EAAA,EAAAC,EAAAP,EAAAQ,QAA2CF,EAAAC,EAAAE,OAAgBH,IAAA,CAC3D,IAAAI,EAAAH,EAAAD,GACA,GAAAI,EAAAT,OAAA3B,EAAA4B,WAAAS,cAAA,CAGA,IAAAjB,EAAAgB,EAAAE,WAAAC,QAAAhB,EAAAf,YACAsB,EAAAU,IAAApB,GAIAG,EAAAkB,iBAAAL,EAAAE,WAAArC,EAAAkB,uBAAAC,IAHAU,EAAAY,IAAAtB,KAbAuB,CAAAjB,GAEA1B,EAAAwB,aAAAE,EAAAD,KANA7B,EAAAK","file":"static/js/107.c7c5a199.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2017 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    Rule.metadata = {\n        description: \"Prevents duplicate cases in switch statements.\",\n        optionExamples: [true],\n        options: null,\n        optionsDescription: \"\",\n        ruleName: \"no-duplicate-switch-case\",\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    Rule.FAILURE_STRING_FACTORY = function (text) {\n        return \"Duplicate switch case: '\" + text + \"'.\";\n    };\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    ts.forEachChild(ctx.sourceFile, function cb(node) {\n        if (node.kind === ts.SyntaxKind.CaseBlock) {\n            visitCaseBlock(node);\n        }\n        ts.forEachChild(node, cb);\n    });\n    function visitCaseBlock(node) {\n        var previousCases = new Set();\n        for (var _i = 0, _a = node.clauses; _i < _a.length; _i++) {\n            var clause = _a[_i];\n            if (clause.kind === ts.SyntaxKind.DefaultClause) {\n                continue;\n            }\n            var text = clause.expression.getText(ctx.sourceFile);\n            if (!previousCases.has(text)) {\n                previousCases.add(text);\n                continue;\n            }\n            ctx.addFailureAtNode(clause.expression, Rule.FAILURE_STRING_FACTORY(text));\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noDuplicateSwitchCaseRule.js\n// module id = 2064\n// module chunks = 107"],"sourceRoot":""}