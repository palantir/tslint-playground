webpackJsonp([49],{2135:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(1),a=n(843),i=n(54),s=n(1116),l="single",u="double",c="backtick",d="jsx-single",p="jsx-double",f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o.__extends(t,e),t.FAILURE_STRING=function(e,t){return e+" should be "+t},t.prototype.apply=function(e){var t=this.ruleArguments,n=m(t),r=function(e){for(var t,n=((t={})[d]="'",t[p]='"',t),r=0,o=e;r<o.length;r++){var a=o[r];switch(a){case d:case p:return n[a]}}var i=m(e);return"`"!==i?i:'"'}(t);return this.applyWithFunction(e,g,{avoidEscape:o("avoid-escape"),avoidTemplate:o("avoid-template"),jsxQuoteMark:r,quoteMark:n});function o(e){return-1!==t.indexOf(e)}},t.metadata={ruleName:"quotemark",description:"Enforces quote character for string literals.",hasFix:!0,optionsDescription:s.Utils.dedent(r||(r=o.__makeTemplateObject(['\n            Five arguments may be optionally provided:\n\n            * `"','"` enforces single quotes.\n            * `"','"` enforces double quotes.\n            * `"','"` enforces backticks.\n            * `"','"` enforces single quotes for JSX attributes.\n            * `"','"` enforces double quotes for JSX attributes.\n            * `"','"` forbids single-line untagged template strings that do not contain string interpolations.\n            * `"','"` allows you to use the "other" quotemark in cases where escaping would normally be required.\n            For example, `[true, "','", "','"]` would not report a failure on the string literal\n            `\'Hello "World"\'`.'],['\n            Five arguments may be optionally provided:\n\n            * \\`"','"\\` enforces single quotes.\n            * \\`"','"\\` enforces double quotes.\n            * \\`"','"\\` enforces backticks.\n            * \\`"','"\\` enforces single quotes for JSX attributes.\n            * \\`"','"\\` enforces double quotes for JSX attributes.\n            * \\`"','"\\` forbids single-line untagged template strings that do not contain string interpolations.\n            * \\`"','"\\` allows you to use the "other" quotemark in cases where escaping would normally be required.\n            For example, \\`[true, "','", "','"]\\` would not report a failure on the string literal\n            \\`\'Hello "World"\'\\`.'])),l,u,c,d,p,"avoid-template","avoid-escape",u,"avoid-escape"),options:{type:"array",items:{type:"string",enum:[l,u,c,d,p,"avoid-escape","avoid-template"]},minLength:0,maxLength:5},optionExamples:[[!0,l,"avoid-escape","avoid-template"],[!0,l,p]],type:"style",typescriptOnly:!1},t}(s.Rules.AbstractRule);function g(e){var t=e.sourceFile,n=e.options;i.forEachChild(t,function r(o){if(a.isStringLiteral(o)||n.avoidTemplate&&a.isNoSubstitutionTemplateLiteral(o)&&o.parent.kind!==i.SyntaxKind.TaggedTemplateExpression&&a.isSameLine(t,o.getStart(t),o.end)){var l=o.parent.kind===i.SyntaxKind.JsxAttribute?n.jsxQuoteMark:n.quoteMark,u=t.text[o.end-1];if(u===l)return;var c=l,d=o.text.includes(l);if(d&&n.avoidEscape){if(o.kind===i.SyntaxKind.StringLiteral)return;if(c='"'===l?"'":'"',o.text.includes(c)&&(c="'"===l?"`":"'",o.text.includes(c)))return}var p=o.getStart(t),g=t.text.substring(p+1,o.end-1);return d&&(g=g.replace(new RegExp(c,"g"),"\\"+c)),g=g.replace(new RegExp("\\\\"+u,"g"),u),e.addFailure(p,o.end,f.FAILURE_STRING(u,c),new s.Replacement(p,o.end-p,c+g+c))}i.forEachChild(o,r)})}function m(e){for(var t,n=((t={})[l]="'",t[u]='"',t[c]="`",t),r=0,o=e;r<o.length;r++){var a=o[r];switch(a){case l:case u:case c:return n[a]}}return'"'}t.Rule=f}});
//# sourceMappingURL=49.66873520.chunk.js.map