webpackJsonp([36],{2151:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=t(1),r=t(843),o=t(54),a=t(1116),s=new Set(["undefined","string","boolean","number","function","object","symbol"]),c=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return i.__extends(n,e),n.prototype.apply=function(e){return this.applyWithFunction(e,u)},n.metadata={ruleName:"typeof-compare",description:"Makes sure result of `typeof` is compared to correct string values",optionsDescription:"Not configurable.",options:null,optionExamples:[!0],type:"functionality",typescriptOnly:!1,deprecationMessage:/^2\.1\./.test(o.version)?"":"Starting from TypeScript 2.2 the compiler includes this check which makes this rule redundant."},n.FAILURE_STRING="'typeof' expression must be compared to one of: "+Array.from(s).map(function(e){return'"'+e+'"'}).join(", "),n}(a.Rules.AbstractRule);function u(e){o.forEachChild(e.sourceFile,function n(t){if(r.isBinaryExpression(t)){var i=t.operatorToken,s=t.left,u=t.right;void 0!==a.getEqualsKind(i)&&(d(s,u)||d(u,s))&&e.addFailureAtNode(t,c.FAILURE_STRING)}o.forEachChild(t,n)})}function d(e,n){return e.kind===o.SyntaxKind.TypeOfExpression&&function(e){switch(e.kind){case o.SyntaxKind.StringLiteral:return!s.has(e.text);case o.SyntaxKind.Identifier:return e.originalKeywordKind===o.SyntaxKind.UndefinedKeyword;case o.SyntaxKind.NullKeyword:case o.SyntaxKind.NumericLiteral:case o.SyntaxKind.TrueKeyword:case o.SyntaxKind.FalseKeyword:case o.SyntaxKind.ObjectLiteralExpression:case o.SyntaxKind.ArrayLiteralExpression:return!0;default:return!1}}(n)}n.Rule=c}});
//# sourceMappingURL=36.c1fde3e5.chunk.js.map