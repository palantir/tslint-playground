{"version":3,"sources":["../node_modules/tslint/lib/rules/noDynamicDeleteRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","tsutils","ts","Lint","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","metadata","description","optionExamples","options","optionsDescription","rationale","Utils","dedent","__makeTemplateObject","ruleName","type","typescriptOnly","FAILURE_STRING","Rules","AbstractRule","context","checkDeleteAccessExpression","node","undefined","isElementAccessExpression","argumentExpression","isPrefixUnaryExpression","isNumericLiteral","operand","operator","SyntaxKind","MinusToken","isNumberLike","isStringLiteral","isValidPropertyAccess","text","isNecessaryDynamicAccess","fix","start","getStart","width","getWidth","convertedOperand","convertUnaryOperand","Replacement","replaceFromTo","addFailureAt","forEachChild","callback","kind","DeleteExpression","isDeleteExpression","expression"],"mappings":"sDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IA2EAC,EA3EAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAgBA,OAlBAR,EAAAU,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,IAEAT,EAAAU,UACAC,YAAA,mEACAC,iBAAA,GACAC,QAAA,KACAC,mBAAA,oBACAC,UAAAhB,EAAAiB,MAAAC,OAAAvB,MAAAC,EAAAuB,sBAAA,ogCACAC,SAAA,oBACAC,KAAA,gBACAC,gBAAA,GAEArB,EAAAsB,eAAA,oDACAtB,EAnBA,CAoBCD,EAAAwB,MAAAC,cAED,SAAAf,EAAAgB,GACA,SAAAC,EAAAC,GACA,QAAAC,IAAAD,GAAA9B,EAAAgC,0BAAAF,GAAA,CAGA,IAAAG,EAAAH,EAAAG,mBACA,QAAAF,IAAAE,IAoCA,SAAAA,GACA,GAPA,SAAAH,GACA,GAAA9B,EAAAkC,wBAAAJ,GACA,OAAA9B,EAAAmC,iBAAAL,EAAAM,UAAAN,EAAAO,WAAApC,EAAAqC,WAAAC,WAEA,OAAAvC,EAAAmC,iBAAAL,GAGAU,CAAAP,GACA,SAEA,OAAAjC,EAAAyC,gBAAAR,KACAjC,EAAA0C,sBAAAT,EAAAU,MAzCAC,CAAAX,GAAA,CAGA,IAEAY,EAFAC,EAAAb,EAAAc,SAAAnB,EAAAlB,YAAA,EACAsC,EAAAf,EAAAgB,WAAA,EAEA,GAAAjD,EAAAkC,wBAAAD,GAAA,CACA,IAAAiB,EAiBA,SAAApB,GACA,OAAA9B,EAAAmC,iBAAAL,EAAAM,SAAAN,EAAAM,QAAAO,UAAAZ,EAlBAoB,CAAAlB,QACAF,IAAAmB,IACAL,EAAA3C,EAAAkD,YAAAC,cAAAP,IAAAE,EAAA,IAAAE,EAAA,WAGAlD,EAAAyC,gBAAAR,KACAY,EAAA3C,EAAAkD,YAAAC,cAAAP,IAAAE,EAAA,IAAAf,EAAAU,OAEAf,EAAA0B,aAAAR,EAAAE,EAAA7C,EAAAsB,eAAAoB,KAEA,OAAA5C,EAAAsD,aAAA3B,EAAAlB,WAAA,SAAA8C,EAAA1B,GAIA,OAMA,SAAAA,GACA,OAAAA,EAAA2B,OAAAxD,EAAAqC,WAAAoB,iBAVAC,CAAA7B,IACAD,EAAAC,EAAA8B,YAEA3D,EAAAsD,aAAAzB,EAAA0B,KA5BA7D,EAAAQ","file":"static/js/105.e8cfd54a.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    Rule.metadata = {\n        description: \"Bans usage of the delete operator with computed key expressions.\",\n        optionExamples: [true],\n        options: null,\n        optionsDescription: \"Not configurable.\",\n        rationale: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Deleting dynamically computed keys is dangerous and not well optimized.\\n\\n            Also consider using a [`Map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map)\\n            or [`Set`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set)\\n            if you're storing collections of objects.\\n            Using `Object`s can cause occasional edge case bugs, such as if a key is named \\\"hasOwnProperty\\\".\\n        \"], [\"\\n            Deleting dynamically computed keys is dangerous and not well optimized.\\n\\n            Also consider using a [\\\\`Map\\\\`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map)\\n            or [\\\\`Set\\\\`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set)\\n            if you're storing collections of objects.\\n            Using \\\\`Object\\\\`s can cause occasional edge case bugs, such as if a key is named \\\"hasOwnProperty\\\".\\n        \"]))),\n        ruleName: \"no-dynamic-delete\",\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    Rule.FAILURE_STRING = \"Do not delete dynamically computed property keys.\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(context) {\n    function checkDeleteAccessExpression(node) {\n        if (node === undefined || !tsutils.isElementAccessExpression(node)) {\n            return;\n        }\n        var argumentExpression = node.argumentExpression;\n        if (argumentExpression === undefined || isNecessaryDynamicAccess(argumentExpression)) {\n            return;\n        }\n        var start = argumentExpression.getStart(context.sourceFile) - 1;\n        var width = argumentExpression.getWidth() + 2;\n        var fix;\n        if (tsutils.isPrefixUnaryExpression(argumentExpression)) {\n            var convertedOperand = convertUnaryOperand(argumentExpression);\n            if (convertedOperand !== undefined) {\n                fix = Lint.Replacement.replaceFromTo(start, start + width, \"[\" + convertedOperand + \"]\");\n            }\n        }\n        else if (tsutils.isStringLiteral(argumentExpression)) {\n            fix = Lint.Replacement.replaceFromTo(start, start + width, \".\" + argumentExpression.text);\n        }\n        context.addFailureAt(start, width, Rule.FAILURE_STRING, fix);\n    }\n    return ts.forEachChild(context.sourceFile, function callback(node) {\n        if (isDeleteExpression(node)) {\n            checkDeleteAccessExpression(node.expression);\n        }\n        return ts.forEachChild(node, callback);\n    });\n}\nfunction convertUnaryOperand(node) {\n    return tsutils.isNumericLiteral(node.operand) ? node.operand.text : undefined;\n}\nfunction isDeleteExpression(node) {\n    return node.kind === ts.SyntaxKind.DeleteExpression;\n}\nfunction isNumberLike(node) {\n    if (tsutils.isPrefixUnaryExpression(node)) {\n        return tsutils.isNumericLiteral(node.operand) && node.operator === ts.SyntaxKind.MinusToken;\n    }\n    return tsutils.isNumericLiteral(node);\n}\nfunction isNecessaryDynamicAccess(argumentExpression) {\n    if (isNumberLike(argumentExpression)) {\n        return true;\n    }\n    return (tsutils.isStringLiteral(argumentExpression) &&\n        !tsutils.isValidPropertyAccess(argumentExpression.text));\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noDynamicDeleteRule.js\n// module id = 2066\n// module chunks = 105"],"sourceRoot":""}