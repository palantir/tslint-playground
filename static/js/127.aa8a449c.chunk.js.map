{"version":3,"sources":["../node_modules/tslint/lib/rules/maxFileLineCountRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","Lint","Rule","_super","apply","this","arguments","__extends","FAILURE_STRING","lineCount","lineLimit","prototype","isEnabled","call","ruleArguments","sourceFile","getLineStarts","length","len","text","RuleFailure","ruleName","metadata","description","rationale","Utils","dedent","__makeTemplateObject","optionsDescription","options","type","minimum","optionExamples","typescriptOnly","Rules","AbstractRule"],"mappings":"sDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IA2CAC,EA3CAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,MACAE,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAmCA,OArCAN,EAAAQ,UAAAL,EAAAC,GAKAD,EAAAM,eAAA,SAAAC,EAAAC,GACA,uBAAAD,EAAA,wCAAAC,EAAA,qEAGAR,EAAAS,UAAAC,UAAA,WACA,OAAAT,EAAAQ,UAAAC,UAAAC,KAAAR,YAAAS,cAAA,MAEAZ,EAAAS,UAAAP,MAAA,SAAAW,GACA,IAAAL,EAAAL,KAAAS,cAAA,GACAL,EAAAM,EAAAC,gBAAAC,OACA,GAAAR,GAAAC,EACA,SAEA,IAAAQ,EAAAH,EAAAI,KAAAF,OACA,OACA,IAAAhB,EAAAmB,YAAAL,EAAAG,EAAA,EAAAA,EAAAhB,EAAAM,eAAAC,EAAAC,GAAAL,KAAAgB,YAIAnB,EAAAoB,UACAD,SAAA,sBACAE,YAAA,2DACAC,UAAAvB,EAAAwB,MAAAC,OAAA5B,MAAAC,EAAA4B,sBAAA,8RACAC,mBAAA,qDACAC,SACAC,KAAA,SACAC,QAAA,KAEAC,kBAAA,QACAF,KAAA,kBACAG,gBAAA,GAEA/B,EAtCA,CAuCCD,EAAAiC,MAAAC,cACDvC,EAAAM","file":"static/js/127.aa8a449c.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = function (lineCount, lineLimit) {\n        return (\"This file has \" + lineCount + \" lines, which exceeds the maximum of \" + lineLimit + \" lines allowed. \" +\n            \"Consider breaking this file up into smaller parts\");\n    };\n    Rule.prototype.isEnabled = function () {\n        return _super.prototype.isEnabled.call(this) && this.ruleArguments[0] > 0;\n    };\n    Rule.prototype.apply = function (sourceFile) {\n        var lineLimit = this.ruleArguments[0];\n        var lineCount = sourceFile.getLineStarts().length;\n        if (lineCount <= lineLimit) {\n            return [];\n        }\n        var len = sourceFile.text.length;\n        return [\n            new Lint.RuleFailure(sourceFile, len - 1, len, Rule.FAILURE_STRING(lineCount, lineLimit), this.ruleName),\n        ];\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"max-file-line-count\",\n        description: \"Requires files to remain under a certain number of lines\",\n        rationale: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Limiting the number of lines allowed in a file allows files to remain small,\\n            single purpose, and maintainable.\"], [\"\\n            Limiting the number of lines allowed in a file allows files to remain small,\\n            single purpose, and maintainable.\"]))),\n        optionsDescription: \"An integer indicating the maximum number of lines.\",\n        options: {\n            type: \"number\",\n            minimum: \"1\",\n        },\n        optionExamples: [[true, 300]],\n        type: \"maintainability\",\n        typescriptOnly: false,\n    };\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/maxFileLineCountRule.js\n// module id = 2044\n// module chunks = 127"],"sourceRoot":""}