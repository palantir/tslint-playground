{"version":3,"sources":["../node_modules/tslint/lib/rules/noImportSideEffectRule.js"],"names":["Object","defineProperty","exports","value","_a","templateObject_1","tslib_1","__webpack_require__","utils","Lint","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","patternConfig","ruleArguments","length","ignorePattern","undefined","RegExp","applyWithFunction","walk","metadata","description","optionExamples","options","items","properties","ignore-module","type","maxLength","minLength","optionsDescription","Utils","dedent","__makeTemplateObject","rationale","ruleName","typescriptOnly","FAILURE_STRING","Rules","AbstractRule","ctx","_i","statements","statement","isImportDeclaration","importClause","moduleSpecifier","isStringLiteral","test","text","addFailureAtNode"],"mappings":"sDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IACAC,EA0DAC,EA3DAC,EAAAC,EAAA,GAEAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,MAEAG,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAgCA,OAlCAP,EAAAS,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,IAAAC,EAAAL,KAAAM,cAAAN,KAAAM,cAAAC,OAAA,GACAC,OAAAC,IAAAJ,OACAI,EACA,IAAAC,OAAAL,EAVA,kBAWA,OAAAL,KAAAW,kBAAAP,EAAAQ,EAAAJ,IAEAX,EAAAgB,UACAC,YAAA,4CACAC,iBAAA,OAAAxB,KAA8CA,EAf9C,iBAe8C,oBAAAA,KAC9CyB,SACAC,OACAC,YACAC,iBACAC,KAAA,WAGAA,KAAA,UAEAC,UAAA,EACAC,UAAA,EACAF,KAAA,SAEAG,mBAAA3B,EAAA4B,MAAAC,OAAAjC,MAAAC,EAAAiC,sBAAA,uSA7BA,iBA8BAC,UAAA,qFACAC,SAAA,wBACAR,KAAA,aACAS,gBAAA,GAEAhC,EAAAiC,eAAA,mCACAjC,EAnCA,CAoCCD,EAAAmC,MAAAC,cAED,SAAApB,EAAAqB,GAEA,IADA,IAAAzB,EAAAyB,EAAAjB,QACAkB,EAAA,EAAA3C,EADA0C,EAAA7B,WACA+B,WAAgDD,EAAA3C,EAAAgB,OAAgB2B,IAAA,CAChE,IAAAE,EAAA7C,EAAA2C,GACA,GAAAvC,EAAA0C,oBAAAD,GAAA,CAGA,IAAAE,EAAAF,EAAAE,aAAAC,EAAAH,EAAAG,qBACA9B,IAAA6B,GAAA3C,EAAA6C,gBAAAD,UAGA9B,IAAAD,KAAAiC,KAAAF,EAAAG,OACAT,EAAAU,iBAAAP,EAAAvC,EAAAiC,mBAbAzC,EAAAQ","file":"static/js/100.dda7f06b.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2017 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar _a;\nvar utils = require(\"tsutils\");\nvar Lint = require(\"../index\");\nvar OPTION_IGNORE_MODULE = \"ignore-module\";\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        var patternConfig = this.ruleArguments[this.ruleArguments.length - 1];\n        var ignorePattern = patternConfig === undefined\n            ? undefined\n            : new RegExp(patternConfig[OPTION_IGNORE_MODULE]);\n        return this.applyWithFunction(sourceFile, walk, ignorePattern);\n    };\n    Rule.metadata = {\n        description: \"Avoid import statements with side-effect.\",\n        optionExamples: [true, [true, (_a = {}, _a[OPTION_IGNORE_MODULE] = \"(\\\\.html|\\\\.css)$\", _a)]],\n        options: {\n            items: {\n                properties: {\n                    \"ignore-module\": {\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n            },\n            maxLength: 1,\n            minLength: 0,\n            type: \"array\",\n        },\n        optionsDescription: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            One argument may be optionally provided:\\n\\n            * `\", \"` allows to specify a regex and ignore modules which it matches.\"], [\"\\n            One argument may be optionally provided:\\n\\n            * \\\\`\", \"\\\\` allows to specify a regex and ignore modules which it matches.\"])), OPTION_IGNORE_MODULE),\n        rationale: \"Imports with side effects may have behavior which is hard for static verification.\",\n        ruleName: \"no-import-side-effect\",\n        type: \"typescript\",\n        typescriptOnly: false,\n    };\n    Rule.FAILURE_STRING = \"import with explicit side-effect\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    var ignorePattern = ctx.options, sourceFile = ctx.sourceFile;\n    for (var _i = 0, _a = sourceFile.statements; _i < _a.length; _i++) {\n        var statement = _a[_i];\n        if (!utils.isImportDeclaration(statement)) {\n            continue;\n        }\n        var importClause = statement.importClause, moduleSpecifier = statement.moduleSpecifier;\n        if (importClause !== undefined || !utils.isStringLiteral(moduleSpecifier)) {\n            continue;\n        }\n        if (ignorePattern === undefined || !ignorePattern.test(moduleSpecifier.text)) {\n            ctx.addFailureAtNode(statement, Rule.FAILURE_STRING);\n        }\n    }\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noImportSideEffectRule.js\n// module id = 2073\n// module chunks = 100"],"sourceRoot":""}