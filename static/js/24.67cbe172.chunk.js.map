{"version":3,"sources":["../node_modules/tslint/lib/rules/classNameRule.js","../node_modules/tslint/lib/rules/code-examples/className.examples.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","tsutils_1","ts","Lint","utils_1","className_examples_1","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","metadata","ruleName","description","rationale","Utils","dedent","__makeTemplateObject","optionsDescription","options","optionExamples","type","typescriptOnly","codeExamples","FAILURE_STRING","Rules","AbstractRule","ctx","forEachChild","cb","node","isClassLikeDeclaration","undefined","name","isInterfaceDeclaration","isPascalCased","text","addFailureAtNode","templateObject_2","templateObject_3","config","pass","fail"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IA0CAC,EA1CAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAAJ,EAAA,IACAK,EAAAL,EAAA,MACAM,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAmBA,OArBAV,EAAAY,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,IAGAT,EAAAU,UACAC,SAAA,aACAC,YAAA,kDACAC,UAAAhB,EAAAiB,MAAAC,OAAAvB,MAAAC,EAAAuB,sBAAA,4jBACAC,mBAAA,oBACAC,QAAA,KACAC,iBAAA,GACAC,KAAA,QACAC,gBAAA,EACAC,aAAAvB,EAAAuB,cAGAtB,EAAAuB,eAAA,oCACAvB,EAtBA,CAuBCH,EAAA2B,MAAAC,cAED,SAAAhB,EAAAiB,GACA,OAAA9B,EAAA+B,aAAAD,EAAAnB,WAAA,SAAAqB,EAAAC,GAOA,OANAlC,EAAAmC,uBAAAD,SAAAE,IAAAF,EAAAG,MACArC,EAAAsC,uBAAAJ,MACA/B,EAAAoC,cAAAL,EAAAG,KAAAG,OACAT,EAAAU,iBAAAP,EAAAG,KAAAhC,EAAAuB,iBAGA3B,EAAA+B,aAAAE,EAAAD,KATAtC,EAAAU,0CC/BAZ,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAWAC,EAAA6C,EAAAC,EAXA7C,EAAAC,EAAA,GACAG,EAAAH,EAAA,MAEAJ,EAAAgC,eAEAV,YAAA,kDACA2B,OAAA1C,EAAAiB,MAAAC,OAAAvB,MAAAC,EAAAuB,sBAAA,4DAA0J,8DAC1JwB,KAAA3C,EAAAiB,MAAAC,OAAAsB,MAAA5C,EAAAuB,sBAAA,qFAA6K,uFAC7KyB,KAAA5C,EAAAiB,MAAAC,OAAAuB,MAAA7C,EAAAuB,sBAAA,oFAA6K","file":"static/js/24.67cbe172.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar utils_1 = require(\"../utils\");\nvar className_examples_1 = require(\"./code-examples/className.examples\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"class-name\",\n        description: \"Enforces PascalCased class and interface names.\",\n        rationale: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Makes it easy to differentiate classes from regular variables at a glance.\\n\\n            JavaScript and general programming convention is to refer to classes in PascalCase.\\n            It's confusing to use camelCase or other conventions for class names.\\n        \"], [\"\\n            Makes it easy to differentiate classes from regular variables at a glance.\\n\\n            JavaScript and general programming convention is to refer to classes in PascalCase.\\n            It's confusing to use camelCase or other conventions for class names.\\n        \"]))),\n        optionsDescription: \"Not configurable.\",\n        options: null,\n        optionExamples: [true],\n        type: \"style\",\n        typescriptOnly: false,\n        codeExamples: className_examples_1.codeExamples,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = \"Class name must be in pascal case\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    return ts.forEachChild(ctx.sourceFile, function cb(node) {\n        if ((tsutils_1.isClassLikeDeclaration(node) && node.name !== undefined) ||\n            tsutils_1.isInterfaceDeclaration(node)) {\n            if (!utils_1.isPascalCased(node.name.text)) {\n                ctx.addFailureAtNode(node.name, Rule.FAILURE_STRING);\n            }\n        }\n        return ts.forEachChild(node, cb);\n    });\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/classNameRule.js\n// module id = 2021\n// module chunks = 24","\"use strict\";\n/**\n * @license\n * Copyright 2018 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Lint = require(\"../../index\");\n// tslint:disable: object-literal-sort-keys\nexports.codeExamples = [\n    {\n        description: \"Enforces PascalCased class and interface names.\",\n        config: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            \\\"rules\\\": { \\\"class-name\\\": true }\\n        \"], [\"\\n            \\\"rules\\\": { \\\"class-name\\\": true }\\n        \"]))),\n        pass: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            class MyClass { }\\n            interface MyInterface { }\\n        \"], [\"\\n            class MyClass { }\\n            interface MyInterface { }\\n        \"]))),\n        fail: Lint.Utils.dedent(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n            class myClass { }\\n            interface myInterface { }\\n       \"], [\"\\n            class myClass { }\\n            interface myInterface { }\\n       \"]))),\n    },\n];\nvar templateObject_1, templateObject_2, templateObject_3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/code-examples/className.examples.js\n// module id = 2179\n// module chunks = 24"],"sourceRoot":""}