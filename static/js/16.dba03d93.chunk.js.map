{"version":3,"sources":["../node_modules/tslint/lib/rules/noUseBeforeDeclareRule.js","../node_modules/tslint/lib/rules/code-examples/noUseBeforeDeclare.examples.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","ts","tsutils_1","Lint","noUseBeforeDeclare_examples_1","Rule","_super","apply","this","arguments","__extends","FAILURE_STRING","name","prototype","applyWithProgram","sourceFile","program","applyWithFunction","walk","undefined","getTypeChecker","metadata","ruleName","description","descriptionDetails","Utils","dedent","__makeTemplateObject","optionsDescription","options","optionExamples","type","typescriptOnly","requiresTypeInfo","codeExamples","Rules","TypedRule","ctx","checker","forEachChild","recur","node","kind","SyntaxKind","TypeReference","PropertyAccessExpression","expression","Identifier","parent","isBindingElement","propertyName","isPropNameInBinding","checkIdentifier","getSymbolAtLocation","ExportSpecifier","getExportSpecifierLocalTargetSymbol","symbol","declarations","length","some","decl","FunctionDeclaration","pos","getSourceFile","addFailureAtNode","text","templateObject_2","templateObject_3","config","pass","fail"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAmFAC,EAnFAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,IACAE,EAAAF,EAAA,KACAG,EAAAH,EAAA,MACAI,EAAAJ,EAAA,MACAK,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAsBA,OAxBAT,EAAAW,UAAAL,EAAAC,GAKAD,EAAAM,eAAA,SAAAC,GACA,mBAAAA,EAAA,6BAEAP,EAAAQ,UAAAC,iBAAA,SAAAC,EAAAC,GACA,OAAAR,KAAAS,kBAAAF,EAAAG,OAAAC,EAAAH,EAAAI,mBAGAf,EAAAgB,UACAC,SAAA,wBACAC,YAAA,yDACAC,mBAAArB,EAAAsB,MAAAC,OAAA5B,MAAAC,EAAA4B,sBAAA,kjCACAC,mBAAA,oBACAC,QAAA,KACAC,iBAAA,GACAC,KAAA,gBACAC,gBAAA,EACAC,kBAAA,EACAC,aAAA9B,EAAA8B,cAEA7B,EAzBA,CA0BCF,EAAAgC,MAAAC,WAED,SAAAlB,EAAAmB,EAAAC,GACA,OAAArC,EAAAsC,aAAAF,EAAAtB,WAAA,SAAAyB,EAAAC,GACA,OAAAA,EAAAC,MACA,KAAAzC,EAAA0C,WAAAC,cAEA,OACA,KAAA3C,EAAA0C,WAAAE,yBAEA,OAAAL,EAAAC,EAAAK,YACA,KAAA7C,EAAA0C,WAAAI,WACA,GAkCA,SAAAN,GACA,YAAAtB,IAAAsB,EAAAO,QACA9C,EAAA+C,iBAAAR,EAAAO,SACAP,EAAAO,OAAAE,eAAAT,EArCAU,CAAAV,GACA,OAEA,OAAAW,EAAAX,EAAAH,EAAAe,oBAAAZ,IACA,KAAAxC,EAAA0C,WAAAW,gBACA,OAAAF,EAAAX,EAAA7B,KAAA0B,EAAAiB,oCAAAd,IACA,QACA,OAAAxC,EAAAsC,aAAAE,EAAAD,MAGA,SAAAY,EAAAX,EAAAe,GACA,IAAAC,OAAAtC,IAAAqC,OAAArC,EAAAqC,EAAAC,kBACAtC,IAAAsC,GAAA,IAAAA,EAAAC,SAGAD,EAAAE,KAAA,SAAAC,GACA,OAAAA,EAAAlB,MACA,KAAAzC,EAAA0C,WAAAkB,oBAEA,SACA,QAGA,OAAAD,EAAAE,KAAArB,EAAAqB,KAAAF,EAAAG,kBAAA1B,EAAAtB,eAIAsB,EAAA2B,iBAAAvB,EAAApC,EAAAM,eAAA8B,EAAAwB,SAtCArE,EAAAS,0CCjCAX,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAWAC,EAAAoE,EAAAC,EAXApE,EAAAC,EAAA,GACAG,EAAAH,EAAA,MAEAJ,EAAAsC,eAEAX,YAAA,oEACA6C,OAAAjE,EAAAsB,MAAAC,OAAA5B,MAAAC,EAAA4B,sBAAA,uEAAqK,yEACrK0C,KAAAlE,EAAAsB,MAAAC,OAAAwC,MAAAnE,EAAA4B,sBAAA,ssBAAkyB,wsBAClyB2C,KAAAnE,EAAAsB,MAAAC,OAAAyC,MAAApE,EAAA4B,sBAAA,iiBAAioB","file":"static/js/16.dba03d93.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2014 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ts = require(\"typescript\");\nvar tsutils_1 = require(\"tsutils\");\nvar Lint = require(\"../index\");\nvar noUseBeforeDeclare_examples_1 = require(\"./code-examples/noUseBeforeDeclare.examples\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = function (name) {\n        return \"variable '\" + name + \"' used before declaration\";\n    };\n    Rule.prototype.applyWithProgram = function (sourceFile, program) {\n        return this.applyWithFunction(sourceFile, walk, undefined, program.getTypeChecker());\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-use-before-declare\",\n        description: \"Disallows usage of variables before their declaration.\",\n        descriptionDetails: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            This rule is primarily useful when using the `var` keyword since the compiler will\\n            automatically detect if a block-scoped `let` and `const` variable is used before\\n            declaration. Since most modern TypeScript doesn't use `var`, this rule is generally\\n            discouraged and is kept around for legacy purposes. It is slow to compute, is not\\n            enabled in the built-in configuration presets, and should not be used to inform TSLint\\n            design decisions.\\n        \"], [\"\\n            This rule is primarily useful when using the \\\\`var\\\\` keyword since the compiler will\\n            automatically detect if a block-scoped \\\\`let\\\\` and \\\\`const\\\\` variable is used before\\n            declaration. Since most modern TypeScript doesn't use \\\\`var\\\\`, this rule is generally\\n            discouraged and is kept around for legacy purposes. It is slow to compute, is not\\n            enabled in the built-in configuration presets, and should not be used to inform TSLint\\n            design decisions.\\n        \"]))),\n        optionsDescription: \"Not configurable.\",\n        options: null,\n        optionExamples: [true],\n        type: \"functionality\",\n        typescriptOnly: false,\n        requiresTypeInfo: true,\n        codeExamples: noUseBeforeDeclare_examples_1.codeExamples,\n    };\n    return Rule;\n}(Lint.Rules.TypedRule));\nexports.Rule = Rule;\nfunction walk(ctx, checker) {\n    return ts.forEachChild(ctx.sourceFile, function recur(node) {\n        switch (node.kind) {\n            case ts.SyntaxKind.TypeReference:\n                // Ignore types.\n                return;\n            case ts.SyntaxKind.PropertyAccessExpression:\n                // Ignore `y` in `x.y`, but recurse to `x`.\n                return recur(node.expression);\n            case ts.SyntaxKind.Identifier:\n                if (isPropNameInBinding(node)) {\n                    return;\n                }\n                return checkIdentifier(node, checker.getSymbolAtLocation(node));\n            case ts.SyntaxKind.ExportSpecifier:\n                return checkIdentifier(node.name, checker.getExportSpecifierLocalTargetSymbol(node));\n            default:\n                return ts.forEachChild(node, recur);\n        }\n    });\n    function checkIdentifier(node, symbol) {\n        var declarations = symbol === undefined ? undefined : symbol.declarations;\n        if (declarations === undefined || declarations.length === 0) {\n            return;\n        }\n        var declaredBefore = declarations.some(function (decl) {\n            switch (decl.kind) {\n                case ts.SyntaxKind.FunctionDeclaration:\n                    // Functions may be declared later.\n                    return true;\n                default:\n                    // Use `<=` in case this *is* the declaration.\n                    // If it's a global declared in a different file, OK.\n                    return decl.pos <= node.pos || decl.getSourceFile() !== ctx.sourceFile;\n            }\n        });\n        if (!declaredBefore) {\n            ctx.addFailureAtNode(node, Rule.FAILURE_STRING(node.text));\n        }\n    }\n    /**\n     * Destructured vars/args w/ rename are declared later in the source.\n     * var { x: y } = { x: 43 };\n     */\n    function isPropNameInBinding(node) {\n        return (node.parent !== undefined &&\n            tsutils_1.isBindingElement(node.parent) &&\n            node.parent.propertyName === node);\n    }\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noUseBeforeDeclareRule.js\n// module id = 2112\n// module chunks = 16","\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Lint = require(\"../../index\");\n// tslint:disable: object-literal-sort-keys\nexports.codeExamples = [\n    {\n        description: \"Check that referenced variables are declared beforehand (default)\",\n        config: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            \\\"rules\\\": { \\\"no-use-before-declare\\\": true }\\n        \"], [\"\\n            \\\"rules\\\": { \\\"no-use-before-declare\\\": true }\\n        \"]))),\n        pass: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            var hello = 'world';\\n            var foo;\\n\\n            console.log(hello, foo, capitalize(hello));\\n            // 'world', undefined, 'WORLD'\\n\\n            function capitalize(val) {\\n                return val.toUpperCase();\\n            }\\n\\n            import { default as foo1 } from \\\"./lib\\\";\\n            import foo2 from \\\"./lib\\\";\\n            import _, { map, foldl } from \\\"./underscore\\\";\\n            import * as foo3 from \\\"./lib\\\";\\n            import \\\"./lib\\\";\\n\\n            function declaredImports() {\\n                console.log(foo1);\\n                console.log(foo2);\\n                console.log(foo3);\\n                map([], (x) => x);\\n            }\\n        \"], [\"\\n            var hello = 'world';\\n            var foo;\\n\\n            console.log(hello, foo, capitalize(hello));\\n            // 'world', undefined, 'WORLD'\\n\\n            function capitalize(val) {\\n                return val.toUpperCase();\\n            }\\n\\n            import { default as foo1 } from \\\"./lib\\\";\\n            import foo2 from \\\"./lib\\\";\\n            import _, { map, foldl } from \\\"./underscore\\\";\\n            import * as foo3 from \\\"./lib\\\";\\n            import \\\"./lib\\\";\\n\\n            function declaredImports() {\\n                console.log(foo1);\\n                console.log(foo2);\\n                console.log(foo3);\\n                map([], (x) => x);\\n            }\\n        \"]))),\n        fail: Lint.Utils.dedent(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n            console.log(hello, foo);\\n\\n            var hello = 'world';\\n            var foo;\\n\\n            function undeclaredImports() {\\n                console.log(foo1);\\n                console.log(foo2);\\n                console.log(foo3);\\n                map([], (x) => x);\\n            }\\n\\n            import { default as foo1 } from \\\"./lib\\\";\\n            import foo2 from \\\"./lib\\\";\\n            import _, { map, foldl } from \\\"./underscore\\\";\\n            import * as foo3 from \\\"./lib\\\";\\n            import \\\"./lib\\\";\\n        \"], [\"\\n            console.log(hello, foo);\\n\\n            var hello = 'world';\\n            var foo;\\n\\n            function undeclaredImports() {\\n                console.log(foo1);\\n                console.log(foo2);\\n                console.log(foo3);\\n                map([], (x) => x);\\n            }\\n\\n            import { default as foo1 } from \\\"./lib\\\";\\n            import foo2 from \\\"./lib\\\";\\n            import _, { map, foldl } from \\\"./underscore\\\";\\n            import * as foo3 from \\\"./lib\\\";\\n            import \\\"./lib\\\";\\n        \"]))),\n    },\n];\nvar templateObject_1, templateObject_2, templateObject_3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/code-examples/noUseBeforeDeclare.examples.js\n// module id = 2192\n// module chunks = 16"],"sourceRoot":""}