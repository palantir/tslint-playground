webpackJsonp([118],{2054:function(e,n,a){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t,o,i=a(1),r=a(54),s=a(1116),l=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return i.__extends(n,e),n.prototype.apply=function(e){return this.applyWithFunction(e,d)},n.metadata={ruleName:"no-bitwise",description:"Disallows bitwise operators.",descriptionDetails:s.Utils.dedent(t||(t=i.__makeTemplateObject(["\n            Specifically, the following bitwise operators are banned:\n            `&`, `&=`, `|`, `|=`,\n            `^`, `^=`, `<<`, `<<=`,\n            `>>`, `>>=`, `>>>`, `>>>=`, and `~`.\n            This rule does not ban the use of `&` and `|` for intersection and union types."],["\n            Specifically, the following bitwise operators are banned:\n            \\`&\\`, \\`&=\\`, \\`|\\`, \\`|=\\`,\n            \\`^\\`, \\`^=\\`, \\`<<\\`, \\`<<=\\`,\n            \\`>>\\`, \\`>>=\\`, \\`>>>\\`, \\`>>>=\\`, and \\`~\\`.\n            This rule does not ban the use of \\`&\\` and \\`|\\` for intersection and union types."]))),rationale:s.Utils.dedent(o||(o=i.__makeTemplateObject(["\n            Bitwise operators are often typos - for example `bool1 & bool2` instead of `bool1 && bool2`.\n            They also can be an indicator of overly clever code which decreases maintainability."],["\n            Bitwise operators are often typos - for example \\`bool1 & bool2\\` instead of \\`bool1 && bool2\\`.\n            They also can be an indicator of overly clever code which decreases maintainability."]))),optionsDescription:"Not configurable.",options:null,optionExamples:[!0],type:"functionality",typescriptOnly:!1},n.FAILURE_STRING="Forbidden bitwise operation",n}(s.Rules.AbstractRule);function d(e){return r.forEachChild(e.sourceFile,function n(a){if(a.kind===r.SyntaxKind.BinaryExpression)switch(a.operatorToken.kind){case r.SyntaxKind.AmpersandToken:case r.SyntaxKind.AmpersandEqualsToken:case r.SyntaxKind.BarToken:case r.SyntaxKind.BarEqualsToken:case r.SyntaxKind.CaretToken:case r.SyntaxKind.CaretEqualsToken:case r.SyntaxKind.LessThanLessThanToken:case r.SyntaxKind.LessThanLessThanEqualsToken:case r.SyntaxKind.GreaterThanGreaterThanToken:case r.SyntaxKind.GreaterThanGreaterThanEqualsToken:case r.SyntaxKind.GreaterThanGreaterThanGreaterThanToken:case r.SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken:e.addFailureAtNode(a,l.FAILURE_STRING)}else a.kind===r.SyntaxKind.PrefixUnaryExpression&&a.operator===r.SyntaxKind.TildeToken&&e.addFailureAtNode(a,l.FAILURE_STRING);return r.forEachChild(a,n)})}n.Rule=l}});
//# sourceMappingURL=118.47616eab.chunk.js.map