{"version":3,"sources":["../node_modules/tslint/lib/rules/interfaceNameRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","utils","ts","Lint","utils_1","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","never","ruleArguments","indexOf","metadata","ruleName","description","rationale","optionsDescription","Utils","dedent","__makeTemplateObject","options","type","enum","optionExamples","typescriptOnly","FAILURE_STRING","FAILURE_STRING_NO_PREFIX","Rules","AbstractRule","ctx","forEachChild","cb","node","isInterfaceDeclaration","name","length","isUpperCase","startsWith","hasPrefixI","text","addFailureAtNode"],"mappings":"sDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IA0DAC,EA1DAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAAJ,EAAA,IAGAK,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAwBA,OA1BAT,EAAAW,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,GACAC,OAAA,IAAAP,KAAAQ,cAAAC,QARA,mBAYAZ,EAAAa,UACAC,SAAA,iBACAC,YAAA,uDACAC,UAAA,8EACAC,mBAAAnB,EAAAoB,MAAAC,OAAA1B,MAAAC,EAAA0B,sBAAA,qbAjBA,gBACA,gBAiBAC,SACAC,KAAA,SACAC,MApBA,gBACA,iBAqBAC,kBAAA,EAtBA,mBAsBA,EArBA,iBAsBAF,KAAA,QACAG,gBAAA,GAGAzB,EAAA0B,eAAA,iDACA1B,EAAA2B,yBAAA,6CACA3B,EA3BA,CA4BCF,EAAA8B,MAAAC,cAED,SAAApB,EAAAqB,GACA,IAAApB,EAAAoB,EAAAT,QAAAX,MACA,OAAAb,EAAAkC,aAAAD,EAAAvB,WAAA,SAAAyB,EAAAC,GACA,IAAArC,EAAAsC,uBAAAD,GAUA,OAAApC,EAAAkC,aAAAE,EAAAD,GATA,IAAAG,EAAAF,EAAAE,KACAzB,GAYA,SAAAyB,GAEA,OAAAA,EAAAC,QAAA,SAAAD,EAAA,IAAApC,EAAAsC,YAAAF,EAAA,MAAAA,EAAAG,WAAA,OAdAC,CAAAJ,EAAAK,MACAV,EAAAW,iBAAAN,EAAAnC,EAAA2B,0BAEAjB,GAAA,MAAAyB,EAAAK,KAAA,IACAV,EAAAW,iBAAAN,EAAAnC,EAAA0B,kBAVAnC,EAAAS","file":"static/js/134.6c25c300.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utils = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar utils_1 = require(\"../utils\");\nvar OPTION_ALWAYS = \"always-prefix\";\nvar OPTION_NEVER = \"never-prefix\";\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk, {\n            never: this.ruleArguments.indexOf(OPTION_NEVER) !== -1,\n        });\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"interface-name\",\n        description: \"Requires interface names to begin with a capital 'I'\",\n        rationale: \"Makes it easy to differentiate interfaces from regular classes at a glance.\",\n        optionsDescription: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            One of the following two options must be provided:\\n\\n            * `\\\"\", \"\\\"` requires interface names to start with an \\\"I\\\"\\n            * `\\\"\", \"\\\"` requires interface names to not have an \\\"I\\\" prefix\"], [\"\\n            One of the following two options must be provided:\\n\\n            * \\\\`\\\"\", \"\\\"\\\\` requires interface names to start with an \\\"I\\\"\\n            * \\\\`\\\"\", \"\\\"\\\\` requires interface names to not have an \\\"I\\\" prefix\"])), OPTION_ALWAYS, OPTION_NEVER),\n        options: {\n            type: \"string\",\n            enum: [OPTION_ALWAYS, OPTION_NEVER],\n        },\n        optionExamples: [[true, OPTION_ALWAYS], [true, OPTION_NEVER]],\n        type: \"style\",\n        typescriptOnly: true,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = \"interface name must start with a capitalized I\";\n    Rule.FAILURE_STRING_NO_PREFIX = 'interface name must not have an \"I\" prefix';\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    var never = ctx.options.never;\n    return ts.forEachChild(ctx.sourceFile, function cb(node) {\n        if (utils.isInterfaceDeclaration(node)) {\n            var name = node.name;\n            if (never && hasPrefixI(name.text)) {\n                ctx.addFailureAtNode(name, Rule.FAILURE_STRING_NO_PREFIX);\n            }\n            else if (!never && name.text[0] !== \"I\") {\n                ctx.addFailureAtNode(name, Rule.FAILURE_STRING);\n            }\n        }\n        else {\n            return ts.forEachChild(node, cb);\n        }\n    });\n}\nfunction hasPrefixI(name) {\n    // Allow IndexedDB interfaces\n    return name.length >= 2 && name[0] === \"I\" && utils_1.isUpperCase(name[1]) && !name.startsWith(\"IDB\");\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/interfaceNameRule.js\n// module id = 2037\n// module chunks = 134"],"sourceRoot":""}