{"version":3,"sources":["../node_modules/tslint/lib/rules/noSparseArraysRule.js","../node_modules/tslint/lib/rules/code-examples/noSparseArrays.examples.js"],"names":["Object","defineProperty","exports","value","tslib_1","__webpack_require__","utils","ts","Lint","noSparseArrays_examples_1","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","metadata","ruleName","description","rationale","optionsDescription","options","optionExamples","type","typescriptOnly","codeExamples","FAILURE_STRING","Rules","AbstractRule","ctx","forEachChild","cb","node","isArrayLiteralExpression","isBinaryExpression","operatorToken","kind","SyntaxKind","EqualsToken","traverseExpressionsInLHS","ParenthesizedExpression","expression","ArrayLiteralExpression","_i","_a","elements","length","e","ObjectLiteralExpression","_b","_c","properties","o","BinaryExpression","_d","left","right","element","isOmittedExpression","addFailureAt","pos","templateObject_1","templateObject_2","templateObject_3","config","Utils","dedent","__makeTemplateObject","pass","fail"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAAJ,EAAA,MACAK,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAmBA,OArBAT,EAAAW,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,IAGAT,EAAAU,UACAC,SAAA,mBACAC,YAAA,sDACAC,UAAA,kEACAC,mBAAA,oBACAC,QAAA,KACAC,iBAAA,GACAC,KAAA,gBACAC,gBAAA,EACAC,aAAApB,EAAAoB,cAGAnB,EAAAoB,eAAA,+BACApB,EAtBA,CAuBCF,EAAAuB,MAAAC,cAED,SAAAb,EAAAc,GACA,OAAA1B,EAAA2B,aAAAD,EAAAhB,WAAA,SAAAkB,EAAAC,GACA,IAAA9B,EAAA+B,yBAAAD,GACA,OAAA9B,EAAAgC,mBAAAF,IACAA,EAAAG,cAAAC,OAAAjC,EAAAkC,WAAAC,aAsBA,SAAAC,EAAAP,EAAAD,GACA,OAAAC,EAAAI,MACA,KAAAjC,EAAAkC,WAAAG,wBACAD,EAAAP,EAAAS,WAAAV,GACA,MACA,KAAA5B,EAAAkC,WAAAK,uBACA,QAAAC,EAAA,EAAAC,EAAAZ,EAAAa,SAAgDF,EAAAC,EAAAE,OAAgBH,IAAA,CAChE,IAAAI,EAAAH,EAAAD,GACAJ,EAAAQ,EAAAhB,GAEA,MACA,KAAA5B,EAAAkC,WAAAW,wBACA,QAAAC,EAAA,EAAAC,EAAAlB,EAAAmB,WAAkDF,EAAAC,EAAAJ,OAAgBG,IAAA,CAClE,IAAAG,EAAAF,EAAAD,GACAV,EAAAa,EAAArB,GAEA,MACA,KAAA5B,EAAAkC,WAAAgB,iBACA,IAAAC,EAAAtB,EAAAuB,EAAAD,EAAAC,KAAApB,EAAAmB,EAAAnB,cAAAqB,EAAAF,EAAAE,MACArB,EAAAC,OAAAjC,EAAAkC,WAAAC,cACAC,EAAAgB,EAAAxB,GACAA,EAAAyB,KAzCAjB,CAAAP,EAAAuB,KAAAxB,GACAA,EAAAC,EAAAwB,QAGArD,EAAA2B,aAAAE,EAAAD,GAGA,QAAAY,EAAA,EAAAC,EAAAZ,EAAAa,SAA4CF,EAAAC,EAAAE,OAAgBH,IAAA,CAC5D,IAAAc,EAAAb,EAAAD,GACAzC,EAAAwD,oBAAAD,GAEA5B,EAAA8B,aAAAF,EAAAG,IAAA,EAAAtD,EAAAoB,gBAGAvB,EAAA2B,aAAA2B,EAAA1B,MArBAjC,EAAAQ,0CC9BAV,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAWA8D,EAAAC,EAAAC,EAXA/D,EAAAC,EAAA,GACAG,EAAAH,EAAA,MAEAH,EAAA2B,eAEAP,YAAA,0BACA8C,OAAA5D,EAAA6D,MAAAC,OAAAL,MAAA7D,EAAAmE,sBAAA,kEAAgK,oEAChKC,KAAAhE,EAAA6D,MAAAC,OAAAJ,MAAA9D,EAAAmE,sBAAA,6EAAqK,+EACrKE,KAAAjE,EAAA6D,MAAAC,OAAAH,MAAA/D,EAAAmE,sBAAA,8EAAsK","file":"static/js/19.bcc63d09.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2017 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utils = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar noSparseArrays_examples_1 = require(\"./code-examples/noSparseArrays.examples\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-sparse-arrays\",\n        description: \"Forbids array literals to contain missing elements.\",\n        rationale: \"Missing elements are probably an accidentally duplicated comma.\",\n        optionsDescription: \"Not configurable.\",\n        options: null,\n        optionExamples: [true],\n        type: \"functionality\",\n        typescriptOnly: false,\n        codeExamples: noSparseArrays_examples_1.codeExamples,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = \"Array has a missing element.\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    return ts.forEachChild(ctx.sourceFile, function cb(node) {\n        if (!utils.isArrayLiteralExpression(node)) {\n            if (utils.isBinaryExpression(node) &&\n                node.operatorToken.kind === ts.SyntaxKind.EqualsToken) {\n                // Ignore LHS of assignments.\n                traverseExpressionsInLHS(node.left, cb);\n                return cb(node.right);\n            }\n            else {\n                return ts.forEachChild(node, cb);\n            }\n        }\n        for (var _i = 0, _a = node.elements; _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (utils.isOmittedExpression(element)) {\n                // Node has an empty range, so just use range starting at `element.pos`.\n                ctx.addFailureAt(element.pos, 1, Rule.FAILURE_STRING);\n            }\n            else {\n                ts.forEachChild(element, cb);\n            }\n        }\n    });\n}\n/** Traverse the LHS of an `=` expression, calling `cb` embedded default value, but ignoring binding patterns. */\nfunction traverseExpressionsInLHS(node, cb) {\n    switch (node.kind) {\n        case ts.SyntaxKind.ParenthesizedExpression:\n            traverseExpressionsInLHS(node.expression, cb);\n            break;\n        case ts.SyntaxKind.ArrayLiteralExpression:\n            for (var _i = 0, _a = node.elements; _i < _a.length; _i++) {\n                var e = _a[_i];\n                traverseExpressionsInLHS(e, cb);\n            }\n            break;\n        case ts.SyntaxKind.ObjectLiteralExpression:\n            for (var _b = 0, _c = node.properties; _b < _c.length; _b++) {\n                var o = _c[_b];\n                traverseExpressionsInLHS(o, cb);\n            }\n            break;\n        case ts.SyntaxKind.BinaryExpression: {\n            var _d = node, left = _d.left, operatorToken = _d.operatorToken, right = _d.right;\n            if (operatorToken.kind === ts.SyntaxKind.EqualsToken) {\n                traverseExpressionsInLHS(left, cb);\n                cb(right);\n            }\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noSparseArraysRule.js\n// module id = 2095\n// module chunks = 19","\"use strict\";\n/**\n * @license\n * Copyright 2018 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Lint = require(\"../../index\");\n// tslint:disable: object-literal-sort-keys\nexports.codeExamples = [\n    {\n        description: \"Disallows sparse arrays\",\n        config: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            \\\"rules\\\": { \\\"no-sparse-arrays\\\": true }\\n        \"], [\"\\n            \\\"rules\\\": { \\\"no-sparse-arrays\\\": true }\\n        \"]))),\n        pass: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            const arr: string[] = ['elemenet1', 'element2'];\\n        \"], [\"\\n            const arr: string[] = ['elemenet1', 'element2'];\\n        \"]))),\n        fail: Lint.Utils.dedent(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n            const arr: string[] = ['elemenet1',, 'element2'];\\n        \"], [\"\\n            const arr: string[] = ['elemenet1',, 'element2'];\\n        \"]))),\n    },\n];\nvar templateObject_1, templateObject_2, templateObject_3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/code-examples/noSparseArrays.examples.js\n// module id = 2189\n// module chunks = 19"],"sourceRoot":""}