webpackJsonp([14],{2121:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i,o=t(1),a=t(843),l=t(54),r=t(1116),s=t(2194),d=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return o.__extends(n,e),n.prototype.apply=function(e){return this.applyWithFunction(e,p,{ignoreForLoop:-1!==this.ruleArguments.indexOf("ignore-for-loop")})},n.metadata={ruleName:"one-variable-per-declaration",description:"Disallows multiple variable definitions in the same declaration statement.",optionsDescription:r.Utils.dedent(i||(i=o.__makeTemplateObject(["\n            One argument may be optionally provided:\n\n            * `","` allows multiple variable definitions in a for loop declaration."],["\n            One argument may be optionally provided:\n\n            * \\`","\\` allows multiple variable definitions in a for loop declaration."])),"ignore-for-loop"),options:{type:"array",items:{type:"string",enum:["ignore-for-loop"]},minLength:0,maxLength:1},optionExamples:[!0,[!0,"ignore-for-loop"]],type:"style",typescriptOnly:!1,codeExamples:s.codeExamples},n.FAILURE_STRING="Multiple variable declarations in the same statement are forbidden",n}(r.Rules.AbstractRule);function p(e){l.forEachChild(e.sourceFile,function n(t){if(a.isVariableStatement(t)&&t.declarationList.declarations.length>1)e.addFailureAtNode(t,d.FAILURE_STRING);else if(a.isForStatement(t)&&!e.options.ignoreForLoop){var i=t.initializer;void 0!==i&&i.kind===l.SyntaxKind.VariableDeclarationList&&i.declarations.length>1&&e.addFailureAtNode(i,d.FAILURE_STRING)}l.forEachChild(t,n)})}n.Rule=d},2194:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i,o,a,l,r,s=t(1),d=t(1116);n.codeExamples=[{description:"Disallows multiple variable definitions in the same declaration statement.",config:d.Utils.dedent(i||(i=s.__makeTemplateObject(['\n            "rules": { "one-variable-per-declaration": true }\n        '],['\n            "rules": { "one-variable-per-declaration": true }\n        ']))),pass:d.Utils.dedent(o||(o=s.__makeTemplateObject(["\n            const foo = 1;\n            const bar = '2';\n        "],["\n            const foo = 1;\n            const bar = '2';\n        "]))),fail:d.Utils.dedent(a||(a=s.__makeTemplateObject(["\n            const foo = 1, bar = '2';\n       "],["\n            const foo = 1, bar = '2';\n       "])))},{description:"Disallows multiple variable definitions in the same declaration statement but allows them in for-loops.",config:d.Utils.dedent(l||(l=s.__makeTemplateObject(['\n            "rules": { "one-variable-per-declaration": [true, "ignore-for-loop"] }\n        '],['\n            "rules": { "one-variable-per-declaration": [true, "ignore-for-loop"] }\n        ']))),pass:d.Utils.dedent(r||(r=s.__makeTemplateObject(["\n            for (let i = 0, j = 10; i < 10; i++) {\n                doSomething(j, i);\n            }\n        "],["\n            for (let i = 0, j = 10; i < 10; i++) {\n                doSomething(j, i);\n            }\n        "])))}]}});
//# sourceMappingURL=14.7f8ec203.chunk.js.map