{"version":3,"sources":["../node_modules/tslint/lib/rules/noParameterReassignmentRule.js"],"names":["Object","defineProperty","exports","value","tslib_1","__webpack_require__","tsutils_1","ts","Rule","_super","apply","this","arguments","__extends","FAILURE_STRING","name","prototype","sourceFile","applyWithFunction","walk","metadata","ruleName","description","optionsDescription","options","optionExamples","type","typescriptOnly","Rules","AbstractRule","ctx","collectVariableUsage","forEach","variable","identifier","node","kind","SyntaxKind","Parameter","BindingElement","getDeclarationOfBindingElement","isParameter","parent","_i","_a","uses","length","use","isReassignmentTarget","location","addFailureAtNode","text"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IAEAG,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAmBA,OArBAP,EAAAS,UAAAL,EAAAC,GAKAD,EAAAM,eAAA,SAAAC,GACA,gCAAAA,EAAA,mBAEAP,EAAAQ,UAAAN,MAAA,SAAAO,GACA,OAAAN,KAAAO,kBAAAD,EAAAE,IAGAX,EAAAY,UACAC,SAAA,4BACAC,YAAA,oCACAC,mBAAA,oBACAC,QAAA,KACAC,iBAAA,GACAC,KAAA,aACAC,gBAAA,GAEAnB,EAtBA,CADAH,EAAA,MAwBCuB,MAAAC,cAED,SAAAV,EAAAW,GACAxB,EAAAyB,qBAAAD,EAAAb,YAAAe,QAAA,SAAAC,EAAAC,GACA,GAWA,SAAAC,GACA,OAAAA,EAAAC,MACA,KAAA7B,EAAA8B,WAAAC,UACA,SACA,KAAA/B,EAAA8B,WAAAE,eACA,OAAAjC,EAAAkC,+BAAAL,GAAAC,OACA7B,EAAA8B,WAAAC,UACA,QACA,UAnBAG,CAAAP,EAAAQ,QAGA,QAAAC,EAAA,EAAAC,EAAAX,EAAAY,KAA4CF,EAAAC,EAAAE,OAAgBH,IAAA,CAC5D,IAAAI,EAAAH,EAAAD,GACArC,EAAA0C,qBAAAD,EAAAE,WACAnB,EAAAoB,iBAAAH,EAAAE,SAAAzC,EAAAM,eAAAoB,EAAAiB,UATAjD,EAAAM","file":"static/js/85.0e55ac94.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2017 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = function (name) {\n        return \"Reassigning parameter '\" + name + \"' is forbidden.\";\n    };\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-parameter-reassignment\",\n        description: \"Disallows reassigning parameters.\",\n        optionsDescription: \"Not configurable.\",\n        options: null,\n        optionExamples: [true],\n        type: \"typescript\",\n        typescriptOnly: false,\n    };\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    tsutils_1.collectVariableUsage(ctx.sourceFile).forEach(function (variable, identifier) {\n        if (!isParameter(identifier.parent)) {\n            return;\n        }\n        for (var _i = 0, _a = variable.uses; _i < _a.length; _i++) {\n            var use = _a[_i];\n            if (tsutils_1.isReassignmentTarget(use.location)) {\n                ctx.addFailureAtNode(use.location, Rule.FAILURE_STRING(identifier.text));\n            }\n        }\n    });\n}\nfunction isParameter(node) {\n    switch (node.kind) {\n        case ts.SyntaxKind.Parameter:\n            return true;\n        case ts.SyntaxKind.BindingElement:\n            return (tsutils_1.getDeclarationOfBindingElement(node).kind ===\n                ts.SyntaxKind.Parameter);\n        default:\n            return false;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noParameterReassignmentRule.js\n// module id = 2088\n// module chunks = 85"],"sourceRoot":""}