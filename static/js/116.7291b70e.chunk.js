webpackJsonp([116],{2056:function(n,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t,a=i(1),o=i(843),s=i(54),r=i(1116),d=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return a.__extends(e,n),e.prototype.apply=function(n){return this.applyWithFunction(n,c)},e.metadata={ruleName:"no-conditional-assignment",description:"Disallows any type of assignment in conditionals.",descriptionDetails:"This applies to `do-while`, `for`, `if`, and `while` statements and conditional (ternary) expressions.",rationale:r.Utils.dedent(t||(t=a.__makeTemplateObject(["\n            Assignments in conditionals are often typos:\n            for example `if (var1 = var2)` instead of `if (var1 == var2)`.\n            They also can be an indicator of overly clever code which decreases maintainability."],["\n            Assignments in conditionals are often typos:\n            for example \\`if (var1 = var2)\\` instead of \\`if (var1 == var2)\\`.\n            They also can be an indicator of overly clever code which decreases maintainability."]))),optionsDescription:"Not configurable.",options:null,optionExamples:[!0],type:"functionality",typescriptOnly:!1},e.FAILURE_STRING="Assignments in conditional expressions are forbidden",e}(r.Rules.AbstractRule);function c(n){var e=0;return s.forEachChild(n.sourceFile,i);function i(a){var r=a.kind;if(o.isNodeKind(r)){switch(r){case s.SyntaxKind.ConditionalExpression:return t(a.condition),i(a.whenTrue),void i(a.whenFalse);case s.SyntaxKind.IfStatement:return t(a.expression),i(a.thenStatement),void l(i,a.elseStatement);case s.SyntaxKind.DoStatement:case s.SyntaxKind.WhileStatement:return t(a.expression),void i(a.statement);case s.SyntaxKind.ForStatement:return l(i,a.initializer),l(t,a.condition),l(i,a.incrementor),void i(a.statement)}if(0!==e)switch(r){case s.SyntaxKind.BinaryExpression:return o.isAssignmentKind(a.operatorToken.kind)&&n.addFailureAtNode(a,d.FAILURE_STRING),i(a.left),void i(a.right);case s.SyntaxKind.ParenthesizedExpression:case s.SyntaxKind.NonNullExpression:case s.SyntaxKind.AsExpression:case s.SyntaxKind.TypeAssertionExpression:return i(a.expression);case s.SyntaxKind.PrefixUnaryExpression:return i(a.operand);default:return function(n){var t=e;e=0,s.forEachChild(n,i),e=t}(a)}return s.forEachChild(a,i)}}function t(n){++e,i(n),--e}}function l(n,e){void 0!==e&&n(e)}e.Rule=d}});
//# sourceMappingURL=116.7291b70e.chunk.js.map