{"version":3,"sources":["../node_modules/tslint/lib/rules/memberAccessRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","templateObject_2","tslib_1","__webpack_require__","tsutils_1","ts","error_1","Lint","Rule","_super","apply","this","arguments","__extends","FAILURE_STRING_FACTORY","memberType","memberName","undefined","prototype","sourceFile","options","ruleArguments","noPublic","indexOf","checkAccessor","checkConstructor","checkParameterProperty","showWarningOnce","ruleName","applyWithFunction","walk","metadata","description","rationale","Utils","dedent","__makeTemplateObject","optionsDescription","type","items","enum","minLength","maxLength","optionExamples","typescriptOnly","hasFix","FAILURE_STRING_NO_PUBLIC","Rules","AbstractRule","ctx","_a","forEachChild","recur","node","isClassLikeDeclaration","_i","members","length","child","shouldCheck","check","isConstructorDeclaration","body","_b","_c","parameters","param","isParameterProperty","kind","SyntaxKind","Constructor","GetAccessor","SetAccessor","MethodDeclaration","PropertyDeclaration","hasModifier","modifiers","ProtectedKeyword","PrivateKeyword","member","publicKeyword","getModifier","PublicKeyword","Parameter","ReadonlyKeyword","start","end","addFailure","Replacement","deleteFromTo","getNextToken","getStart","nameNode","getChildOfKind","ConstructorKeyword","name","Identifier","text","addFailureAtNode","Error","typeToString","appendText","decorators","getTokenAtPosition"],"mappings":"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","file":"static/js/125.861c54ec.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar error_1 = require(\"../error\");\nvar Lint = require(\"../index\");\nvar OPTION_NO_PUBLIC = \"no-public\";\nvar OPTION_CHECK_ACCESSOR = \"check-accessor\";\nvar OPTION_CHECK_CONSTRUCTOR = \"check-constructor\";\nvar OPTION_CHECK_PARAMETER_PROPERTY = \"check-parameter-property\";\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.FAILURE_STRING_FACTORY = function (memberType, memberName) {\n        memberName = memberName === undefined ? \"\" : \" '\" + memberName + \"'\";\n        return \"The \" + memberType + memberName + \" must be marked either 'private', 'public', or 'protected'\";\n    };\n    Rule.prototype.apply = function (sourceFile) {\n        var options = this.ruleArguments;\n        var noPublic = options.indexOf(OPTION_NO_PUBLIC) !== -1;\n        var checkAccessor = options.indexOf(OPTION_CHECK_ACCESSOR) !== -1;\n        var checkConstructor = options.indexOf(OPTION_CHECK_CONSTRUCTOR) !== -1;\n        var checkParameterProperty = options.indexOf(OPTION_CHECK_PARAMETER_PROPERTY) !== -1;\n        if (noPublic) {\n            if (checkAccessor || checkConstructor || checkParameterProperty) {\n                error_1.showWarningOnce(\"Warning: \" + this.ruleName + \" - If 'no-public' is present, it should be the only option.\");\n                return [];\n            }\n            checkAccessor = checkConstructor = checkParameterProperty = true;\n        }\n        return this.applyWithFunction(sourceFile, walk, {\n            checkAccessor: checkAccessor,\n            checkConstructor: checkConstructor,\n            checkParameterProperty: checkParameterProperty,\n            noPublic: noPublic,\n        });\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"member-access\",\n        description: \"Requires explicit visibility declarations for class members.\",\n        rationale: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Explicit visibility declarations can make code more readable and accessible for those new to TS.\\n\\n            Other languages such as C# default to `private`, unlike TypeScript's default of `public`.\\n            Members lacking a visibility declaration may be an indication of an accidental leak of class internals.\\n        \"], [\"\\n            Explicit visibility declarations can make code more readable and accessible for those new to TS.\\n\\n            Other languages such as C# default to \\\\`private\\\\`, unlike TypeScript's default of \\\\`public\\\\`.\\n            Members lacking a visibility declaration may be an indication of an accidental leak of class internals.\\n        \"]))),\n        optionsDescription: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            These arguments may be optionally provided:\\n\\n            * `\\\"no-public\\\"` forbids public accessibility to be specified, because this is the default.\\n            * `\\\"check-accessor\\\"` enforces explicit visibility on get/set accessors\\n            * `\\\"check-constructor\\\"`  enforces explicit visibility on constructors\\n            * `\\\"check-parameter-property\\\"`  enforces explicit visibility on parameter properties\"], [\"\\n            These arguments may be optionally provided:\\n\\n            * \\\\`\\\"no-public\\\"\\\\` forbids public accessibility to be specified, because this is the default.\\n            * \\\\`\\\"check-accessor\\\"\\\\` enforces explicit visibility on get/set accessors\\n            * \\\\`\\\"check-constructor\\\"\\\\`  enforces explicit visibility on constructors\\n            * \\\\`\\\"check-parameter-property\\\"\\\\`  enforces explicit visibility on parameter properties\"]))),\n        options: {\n            type: \"array\",\n            items: {\n                type: \"string\",\n                enum: [\n                    OPTION_NO_PUBLIC,\n                    OPTION_CHECK_ACCESSOR,\n                    OPTION_CHECK_CONSTRUCTOR,\n                    OPTION_CHECK_PARAMETER_PROPERTY,\n                ],\n            },\n            minLength: 0,\n            maxLength: 4,\n        },\n        optionExamples: [true, [true, OPTION_NO_PUBLIC], [true, OPTION_CHECK_ACCESSOR]],\n        type: \"typescript\",\n        typescriptOnly: true,\n        hasFix: true,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING_NO_PUBLIC = \"'public' is implicit.\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    var _a = ctx.options, noPublic = _a.noPublic, checkAccessor = _a.checkAccessor, checkConstructor = _a.checkConstructor, checkParameterProperty = _a.checkParameterProperty;\n    return ts.forEachChild(ctx.sourceFile, function recur(node) {\n        if (tsutils_1.isClassLikeDeclaration(node)) {\n            for (var _i = 0, _a = node.members; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (shouldCheck(child)) {\n                    check(child);\n                }\n                if (checkParameterProperty &&\n                    tsutils_1.isConstructorDeclaration(child) &&\n                    child.body !== undefined) {\n                    for (var _b = 0, _c = child.parameters; _b < _c.length; _b++) {\n                        var param = _c[_b];\n                        if (tsutils_1.isParameterProperty(param)) {\n                            check(param);\n                        }\n                    }\n                }\n            }\n        }\n        return ts.forEachChild(node, recur);\n    });\n    function shouldCheck(node) {\n        switch (node.kind) {\n            case ts.SyntaxKind.Constructor:\n                return checkConstructor;\n            case ts.SyntaxKind.GetAccessor:\n            case ts.SyntaxKind.SetAccessor:\n                return checkAccessor;\n            case ts.SyntaxKind.MethodDeclaration:\n            case ts.SyntaxKind.PropertyDeclaration:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function check(node) {\n        if (tsutils_1.hasModifier(node.modifiers, ts.SyntaxKind.ProtectedKeyword, ts.SyntaxKind.PrivateKeyword)) {\n            return;\n        }\n        var publicKeyword = tsutils_1.getModifier(node, ts.SyntaxKind.PublicKeyword);\n        if (noPublic && publicKeyword !== undefined) {\n            // public is not optional for parameter property without the readonly modifier\n            if (node.kind !== ts.SyntaxKind.Parameter ||\n                tsutils_1.hasModifier(node.modifiers, ts.SyntaxKind.ReadonlyKeyword)) {\n                var start = publicKeyword.end - \"public\".length;\n                ctx.addFailure(start, publicKeyword.end, Rule.FAILURE_STRING_NO_PUBLIC, Lint.Replacement.deleteFromTo(start, tsutils_1.getNextToken(publicKeyword, ctx.sourceFile).getStart(ctx.sourceFile)));\n            }\n        }\n        if (!noPublic && publicKeyword === undefined) {\n            var nameNode = node.kind === ts.SyntaxKind.Constructor\n                ? tsutils_1.getChildOfKind(node, ts.SyntaxKind.ConstructorKeyword, ctx.sourceFile)\n                : node.name !== undefined\n                    ? node.name\n                    : node;\n            var memberName = node.name !== undefined && node.name.kind === ts.SyntaxKind.Identifier\n                ? node.name.text\n                : undefined;\n            ctx.addFailureAtNode(nameNode, Rule.FAILURE_STRING_FACTORY(typeToString(node), memberName), Lint.Replacement.appendText(getInsertionPosition(node, ctx.sourceFile), \"public \"));\n        }\n    }\n}\nfunction getInsertionPosition(member, sourceFile) {\n    var node = member.decorators === undefined\n        ? member\n        : tsutils_1.getTokenAtPosition(member, member.decorators.end, sourceFile);\n    return node.getStart(sourceFile);\n}\nfunction typeToString(node) {\n    switch (node.kind) {\n        case ts.SyntaxKind.MethodDeclaration:\n            return \"class method\";\n        case ts.SyntaxKind.PropertyDeclaration:\n            return \"class property\";\n        case ts.SyntaxKind.Constructor:\n            return \"class constructor\";\n        case ts.SyntaxKind.GetAccessor:\n            return \"get property accessor\";\n        case ts.SyntaxKind.SetAccessor:\n            return \"set property accessor\";\n        case ts.SyntaxKind.Parameter:\n            return \"parameter property\";\n        default:\n            throw new Error(\"unhandled node type \" + ts.SyntaxKind[node.kind]);\n    }\n}\nvar templateObject_1, templateObject_2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/memberAccessRule.js\n// module id = 2046\n// module chunks = 125"],"sourceRoot":""}