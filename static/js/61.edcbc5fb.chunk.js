webpackJsonp([61],{2117:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),o=n(843),s=n(54),i=n(1116),a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return r.__extends(t,e),t.UNNEEDED_QUOTES=function(e){return"Unnecessarily quoted property '"+e+"' found."},t.UNQUOTED_PROPERTY=function(e){return"Unquoted property '"+e+"' found."},t.prototype.apply=function(e){return this.applyWithWalker(new l(e,this.ruleName,{option:0===this.ruleArguments.length?"always":this.ruleArguments[0]}))},t.metadata={ruleName:"object-literal-key-quotes",description:"Enforces consistent object literal property quote style.",descriptionDetails:i.Utils.dedent(d||(d=r.__makeTemplateObject(['\n            Object literal property names can be defined in two ways: using literals or using strings.\n            For example, these two objects are equivalent:\n\n            var object1 = {\n                property: true\n            };\n\n            var object2 = {\n                "property": true\n            };\n\n            In many cases, it doesn\u2019t matter if you choose to use an identifier instead of a string\n            or vice-versa. Even so, you might decide to enforce a consistent style in your code.\n\n            This rules lets you enforce consistent quoting of property names. Either they should always\n            be quoted (default behavior) or quoted only as needed ("as-needed").'],['\n            Object literal property names can be defined in two ways: using literals or using strings.\n            For example, these two objects are equivalent:\n\n            var object1 = {\n                property: true\n            };\n\n            var object2 = {\n                "property": true\n            };\n\n            In many cases, it doesn\u2019t matter if you choose to use an identifier instead of a string\n            or vice-versa. Even so, you might decide to enforce a consistent style in your code.\n\n            This rules lets you enforce consistent quoting of property names. Either they should always\n            be quoted (default behavior) or quoted only as needed ("as-needed").']))),hasFix:!0,optionsDescription:i.Utils.dedent(u||(u=r.__makeTemplateObject(['\n            Possible settings are:\n\n            * `"','"`: Property names should always be quoted. (This is the default.)\n            * `"','"`: Only property names which require quotes may be quoted (e.g. those with spaces in them).\n            * `"','"`: Property names should either all be quoted or unquoted.\n            * `"','"`: If any property name requires quotes, then all properties must be quoted. Otherwise, no\n            property names may be quoted.\n\n            For ES6, computed property names (`{[name]: value}`) and methods (`{foo() {}}`) never need\n            to be quoted.'],['\n            Possible settings are:\n\n            * \\`"','"\\`: Property names should always be quoted. (This is the default.)\n            * \\`"','"\\`: Only property names which require quotes may be quoted (e.g. those with spaces in them).\n            * \\`"','"\\`: Property names should either all be quoted or unquoted.\n            * \\`"','"\\`: If any property name requires quotes, then all properties must be quoted. Otherwise, no\n            property names may be quoted.\n\n            For ES6, computed property names (\\`{[name]: value}\\`) and methods (\\`{foo() {}}\\`) never need\n            to be quoted.'])),"always","as-needed","consistent","consistent-as-needed"),options:{type:"string",enum:["always","as-needed","consistent","consistent-as-needed"]},optionExamples:[[!0,"as-needed"],[!0,"always"]],type:"style",typescriptOnly:!1},t.INCONSISTENT_PROPERTY="All property names in this object literal must be consistently quoted or unquoted.",t}(i.Rules.AbstractRule);t.Rule=a;var d,u,l=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return r.__extends(t,e),t.prototype.walk=function(e){var t=this,n=function(e){if(o.isObjectLiteralExpression(e)){var r=i.Utils.mapDefined(e.properties,p);e:switch(t.options.option){case"always":for(var d=0,u=r;d<u.length;d++){(v=u[d]).kind!==s.SyntaxKind.StringLiteral&&t.reportMissing(v)}break;case"as-needed":for(var l=0,y=r;l<y.length;l++){(v=y[l]).kind===s.SyntaxKind.StringLiteral&&o.isValidPropertyName(v.text)&&t.reportUnnecessary(v)}break;case"consistent":(function(e){if(e.length<2)return!1;for(var t=e[0].kind===s.SyntaxKind.StringLiteral,n=1;n<e.length;++n)if(t!==(e[n].kind===s.SyntaxKind.StringLiteral))return!0;return!1})(r)&&t.addFailureAt(e.getStart(t.sourceFile),1,a.INCONSISTENT_PROPERTY);break;case"consistent-as-needed":for(var c=0,h=r;c<h.length;c++){if((v=h[c]).kind===s.SyntaxKind.StringLiteral&&!o.isValidPropertyName(v.text)){for(var m=0,f=r;m<f.length;m++){var b=f[m];b.kind!==s.SyntaxKind.StringLiteral&&t.reportMissing(b)}break e}}for(var g=0,q=r;g<q.length;g++){var v;(v=q[g]).kind===s.SyntaxKind.StringLiteral&&t.reportUnnecessary(v)}}}return s.forEachChild(e,n)};return s.forEachChild(e,n)},t.prototype.reportMissing=function(e){var t=e.getStart(this.sourceFile);this.addFailure(t,e.end,a.UNQUOTED_PROPERTY(e.text),i.Replacement.replaceFromTo(t,e.end,'"'+e.text+'"'))},t.prototype.reportUnnecessary=function(e){this.addFailureAtNode(e,a.UNNEEDED_QUOTES(e.text),i.Replacement.replaceNode(e,e.text,this.sourceFile))},t}(i.AbstractWalker);function p(e){if(e.kind!==s.SyntaxKind.ShorthandPropertyAssignment&&e.kind!==s.SyntaxKind.SpreadAssignment&&e.name.kind!==s.SyntaxKind.ComputedPropertyName)return e.name}}});
//# sourceMappingURL=61.edcbc5fb.chunk.js.map