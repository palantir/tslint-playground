{"version":3,"sources":["../node_modules/tslint/lib/rules/noConstructRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","tsutils_1","ts","Lint","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","metadata","ruleName","description","descriptionDetails","rationale","Utils","dedent","__makeTemplateObject","optionsDescription","options","optionExamples","type","typescriptOnly","FAILURE_STRING","Rules","AbstractRule","ctx","forEachChild","cb","node","isNewExpression","expression","kind","SyntaxKind","Identifier","text","addFailure","getStart","end"],"mappings":"sDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IA0CAC,EA1CAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAmBA,OArBAR,EAAAU,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,IAGAT,EAAAU,UACAC,SAAA,eACAC,YAAA,6EACAC,mBAAA,2FACAC,UAAAf,EAAAgB,MAAAC,OAAAtB,MAAAC,EAAAsB,sBAAA,olBACAC,mBAAA,oBACAC,QAAA,KACAC,iBAAA,GACAC,KAAA,gBACAC,gBAAA,GAGAtB,EAAAuB,eAAA,uEACAvB,EAtBA,CAuBCD,EAAAyB,MAAAC,cAED,SAAAhB,EAAAiB,GACA,OAAA5B,EAAA6B,aAAAD,EAAAnB,WAAA,SAAAqB,EAAAC,GACA,GAAAhC,EAAAiC,gBAAAD,MAAAE,WAAAC,OAAAlC,EAAAmC,WAAAC,WACA,OAAAL,EAAAE,WAAAI,MACA,cACA,aACA,aACAT,EAAAU,WAAAP,EAAAQ,SAAAX,EAAAnB,YAAAsB,EAAAE,WAAAO,IAAAtC,EAAAuB,gBAGA,OAAAzB,EAAA6B,aAAAE,EAAAD,KAXApC,EAAAQ","file":"static/js/113.e66227a0.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2013 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-construct\",\n        description: \"Disallows access to the constructors of `String`, `Number`, and `Boolean`.\",\n        descriptionDetails: \"Disallows constructor use such as `new Number(foo)` but does not disallow `Number(foo)`.\",\n        rationale: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            There is little reason to use `String`, `Number`, or `Boolean` as constructors.\\n            In almost all cases, the regular function-call version is more appropriate.\\n            [More details](http://stackoverflow.com/q/4719320/3124288) are available on StackOverflow.\"], [\"\\n            There is little reason to use \\\\`String\\\\`, \\\\`Number\\\\`, or \\\\`Boolean\\\\` as constructors.\\n            In almost all cases, the regular function-call version is more appropriate.\\n            [More details](http://stackoverflow.com/q/4719320/3124288) are available on StackOverflow.\"]))),\n        optionsDescription: \"Not configurable.\",\n        options: null,\n        optionExamples: [true],\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = \"Forbidden constructor, use a literal or simple function call instead\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    return ts.forEachChild(ctx.sourceFile, function cb(node) {\n        if (tsutils_1.isNewExpression(node) && node.expression.kind === ts.SyntaxKind.Identifier) {\n            switch (node.expression.text) {\n                case \"Boolean\":\n                case \"String\":\n                case \"Number\":\n                    ctx.addFailure(node.getStart(ctx.sourceFile), node.expression.end, Rule.FAILURE_STRING);\n            }\n        }\n        return ts.forEachChild(node, cb);\n    });\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noConstructRule.js\n// module id = 2058\n// module chunks = 113"],"sourceRoot":""}