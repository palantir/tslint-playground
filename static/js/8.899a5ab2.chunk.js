webpackJsonp([8],{2149:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),a=t(843),i=t(54),o=t(1116),c=t(2201);var s=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return r.__extends(n,e),n.prototype.apply=function(e){return this.applyWithWalker(new l(e,this.ruleName,function(e){for(var n={},t=0,r=e;t<r.length;t++)n[r[t]]=!0;return n}(this.ruleArguments)))},n.metadata={ruleName:"typedef",description:"Requires type definitions to exist.",optionsDescription:o.Utils.dedent(d||(d=r.__makeTemplateObject(['\n            Several arguments may be optionally provided:\n\n            * `"','"` checks return type of functions.\n            * `"','"` checks return type of arrow functions.\n            * `"','"` checks type specifier of function parameters for non-arrow functions.\n            * `"','"` checks type specifier of function parameters for arrow functions.\n            * `"','"` checks return types of interface properties.\n            * `"','"` checks non-binding variable declarations.\n            * `"','"` checks member variable declarations.\n            * `"','"` checks object destructuring declarations.\n            * `"','"` checks array destructuring declarations.'],['\n            Several arguments may be optionally provided:\n\n            * \\`"','"\\` checks return type of functions.\n            * \\`"','"\\` checks return type of arrow functions.\n            * \\`"','"\\` checks type specifier of function parameters for non-arrow functions.\n            * \\`"','"\\` checks type specifier of function parameters for arrow functions.\n            * \\`"','"\\` checks return types of interface properties.\n            * \\`"','"\\` checks non-binding variable declarations.\n            * \\`"','"\\` checks member variable declarations.\n            * \\`"','"\\` checks object destructuring declarations.\n            * \\`"','"\\` checks array destructuring declarations.'])),"call-signature","arrow-call-signature","parameter","arrow-parameter","property-declaration","variable-declaration","member-variable-declaration","object-destructuring","array-destructuring"),options:{type:"array",items:{type:"string",enum:["call-signature","arrow-call-signature","parameter","arrow-parameter","property-declaration","variable-declaration","member-variable-declaration","object-destructuring","array-destructuring"]},minLength:0,maxLength:7},optionExamples:[[!0,"call-signature","parameter","member-variable-declaration"]],type:"typescript",typescriptOnly:!0,codeExamples:c.codeExamples},n}(o.Rules.AbstractRule);n.Rule=s;var d,l=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return r.__extends(n,e),n.prototype.walk=function(e){var n=this,t=function(e){switch(e.kind){case i.SyntaxKind.FunctionDeclaration:case i.SyntaxKind.FunctionExpression:case i.SyntaxKind.GetAccessor:case i.SyntaxKind.MethodDeclaration:case i.SyntaxKind.MethodSignature:var r=e,a=r.name,o=r.parameters,c=r.type;n.checkTypeAnnotation("call-signature",void 0!==a?a:o,c,a);break;case i.SyntaxKind.ArrowFunction:n.checkArrowFunction(e);break;case i.SyntaxKind.Parameter:n.checkParameter(e);break;case i.SyntaxKind.PropertyDeclaration:n.checkPropertyDeclaration(e);break;case i.SyntaxKind.PropertySignature:var s=e;a=s.name,c=s.type;n.checkTypeAnnotation("property-declaration",a,c,a);break;case i.SyntaxKind.VariableDeclaration:n.checkVariableDeclaration(e)}return i.forEachChild(e,t)};return i.forEachChild(e,t)},n.prototype.checkArrowFunction=function(e){var n=e.parent,t=e.parameters,r=e.type;n.kind===i.SyntaxKind.CallExpression||u(n)||this.checkTypeAnnotation("arrow-call-signature",t,r)},n.prototype.checkParameter=function(e){var n=e.parent,t=e.name,r=e.type,o=n.kind===i.SyntaxKind.ArrowFunction?u(n.parent)?void 0:a.isPropertyDeclaration(n.parent)?"member-variable-declaration":"arrow-parameter":"parameter";void 0!==o&&this.checkTypeAnnotation(o,t,r,t)},n.prototype.checkPropertyDeclaration=function(e){var n=e.initializer,t=e.name,r=e.type;void 0!==n&&n.kind===i.SyntaxKind.ArrowFunction||this.checkTypeAnnotation("member-variable-declaration",t,r,t)},n.prototype.checkVariableDeclaration=function(e){var n=e.parent,t=e.name,r=e.type;if(n.kind!==i.SyntaxKind.CatchClause&&n.parent.kind!==i.SyntaxKind.ForInStatement&&n.parent.kind!==i.SyntaxKind.ForOfStatement){var a=function(){switch(t.kind){case i.SyntaxKind.ObjectBindingPattern:return"object-destructuring";case i.SyntaxKind.ArrayBindingPattern:return"array-destructuring";default:return"variable-declaration"}}();this.checkTypeAnnotation(a,t,r,t)}},n.prototype.checkTypeAnnotation=function(e,n,t,r){if(!0===this.options[e]&&void 0===t){var a="expected "+e+(void 0===r?"":": '"+r.getText()+"'")+" to have a typedef";p(n)?this.addFailure(n.pos-1,n.end+1,a):this.addFailureAtNode(n,a)}},n}(o.AbstractWalker);function u(e){return a.isPropertyDeclaration(e)&&void 0!==e.type}function p(e){return Array.isArray(e)}n.isNodeArray=p},2201:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r,a,i,o,c,s,d,l,u,p,f,y,m,b,k,x,h,_,g,v,j,T,O,w,U,S,A,K=t(1),F=t(1116);n.codeExamples=[{description:"Requires type definitions for call signatures",config:F.Utils.dedent(r||(r=K.__makeTemplateObject(['\n            "rules": { "typedef": [true, "call-signature"] }\n        '],['\n            "rules": { "typedef": [true, "call-signature"] }\n        ']))),pass:F.Utils.dedent(a||(a=K.__makeTemplateObject(["\n            function add(x, y): number {\n                return x + y;\n            }\n        "],["\n            function add(x, y): number {\n                return x + y;\n            }\n        "]))),fail:F.Utils.dedent(i||(i=K.__makeTemplateObject(["\n            function add(x, y) {\n                return x + y;\n            }\n        "],["\n            function add(x, y) {\n                return x + y;\n            }\n        "])))},{description:"Requires type definitions for arrow call signatures",config:F.Utils.dedent(o||(o=K.__makeTemplateObject(['\n            "rules": { "typedef": [true, "arrow-call-signature"] }\n        '],['\n            "rules": { "typedef": [true, "arrow-call-signature"] }\n        ']))),pass:F.Utils.dedent(c||(c=K.__makeTemplateObject(["\n            const add = (x, y): number => x + y;\n        "],["\n            const add = (x, y): number => x + y;\n        "]))),fail:F.Utils.dedent(s||(s=K.__makeTemplateObject(["\n            const add = (x, y) => x + y;\n        "],["\n            const add = (x, y) => x + y;\n        "])))},{description:"Requires type definitions for parameters",config:F.Utils.dedent(d||(d=K.__makeTemplateObject(['\n            "rules": { "typedef": [true, "parameter"] }\n        '],['\n            "rules": { "typedef": [true, "parameter"] }\n        ']))),pass:F.Utils.dedent(l||(l=K.__makeTemplateObject(["\n            function add(x: number, y: number) {\n                return x + y;\n            }\n        "],["\n            function add(x: number, y: number) {\n                return x + y;\n            }\n        "]))),fail:F.Utils.dedent(u||(u=K.__makeTemplateObject(["\n            function add(x, y) {\n                return x + y;\n            }\n        "],["\n            function add(x, y) {\n                return x + y;\n            }\n        "])))},{description:"Requires type definitions for arrow function parameters",config:F.Utils.dedent(p||(p=K.__makeTemplateObject(['\n            "rules": { "typedef": [true, "arrow-parameter"] }\n        '],['\n            "rules": { "typedef": [true, "arrow-parameter"] }\n        ']))),pass:F.Utils.dedent(f||(f=K.__makeTemplateObject(["\n            const add = (x: number, y: number) => x + y;\n        "],["\n            const add = (x: number, y: number) => x + y;\n        "]))),fail:F.Utils.dedent(y||(y=K.__makeTemplateObject(["\n            const add = (x, y) => x + y;\n        "],["\n            const add = (x, y) => x + y;\n        "])))},{description:"Requires type definitions for property declarations",config:F.Utils.dedent(m||(m=K.__makeTemplateObject(['\n            "rules": { "typedef": [true, "property-declaration"] }\n        '],['\n            "rules": { "typedef": [true, "property-declaration"] }\n        ']))),pass:F.Utils.dedent(b||(b=K.__makeTemplateObject(["\n            interface I {\n                foo: number;\n                bar: string;\n            }\n    "],["\n            interface I {\n                foo: number;\n                bar: string;\n            }\n    "]))),fail:F.Utils.dedent(k||(k=K.__makeTemplateObject(["\n            interface I {\n                foo;\n                bar;\n            }\n        "],["\n            interface I {\n                foo;\n                bar;\n            }\n        "])))},{description:"Requires type definitions for variable declarations",config:F.Utils.dedent(x||(x=K.__makeTemplateObject(['\n            "rules": { "typedef": [true, "variable-declaration"] }\n        '],['\n            "rules": { "typedef": [true, "variable-declaration"] }\n        ']))),pass:F.Utils.dedent(h||(h=K.__makeTemplateObject(["\n            let x: number;\n        "],["\n            let x: number;\n        "]))),fail:F.Utils.dedent(_||(_=K.__makeTemplateObject(["\n            let x;\n        "],["\n            let x;\n        "])))},{description:"Requires type definitions for member variable declarations",config:F.Utils.dedent(g||(g=K.__makeTemplateObject(['\n            "rules": { "typedef": [true, "member-variable-declaration"] }\n        '],['\n            "rules": { "typedef": [true, "member-variable-declaration"] }\n        ']))),pass:F.Utils.dedent(v||(v=K.__makeTemplateObject(["\n            class MyClass {\n                x: number;\n            }\n        "],["\n            class MyClass {\n                x: number;\n            }\n        "]))),fail:F.Utils.dedent(j||(j=K.__makeTemplateObject(["\n            class MyClass {\n                x;\n            }\n        "],["\n            class MyClass {\n                x;\n            }\n        "])))},{description:"Requires type definitions when destructuring objects.",config:F.Utils.dedent(T||(T=K.__makeTemplateObject(['\n            "rules": { "typedef": [true, "object-destructuring"] }\n        '],['\n            "rules": { "typedef": [true, "object-destructuring"] }\n        ']))),pass:F.Utils.dedent(O||(O=K.__makeTemplateObject(["\n            interface FooBar {\n                foo: number;\n                bar: string;\n            }\n            const foobar = { foo: 1, bar: '2' };\n            const { foo, bar }: FooBar = foobar;\n        "],["\n            interface FooBar {\n                foo: number;\n                bar: string;\n            }\n            const foobar = { foo: 1, bar: '2' };\n            const { foo, bar }: FooBar = foobar;\n        "]))),fail:F.Utils.dedent(w||(w=K.__makeTemplateObject(["\n            interface FooBar {\n                foo: number;\n                bar: string;\n            }\n            const foobar = { foo: 1, bar: '2' };\n            const { foo, bar } = foobar;\n        "],["\n            interface FooBar {\n                foo: number;\n                bar: string;\n            }\n            const foobar = { foo: 1, bar: '2' };\n            const { foo, bar } = foobar;\n        "])))},{description:"Requires type definitions when destructuring arrays.",config:F.Utils.dedent(U||(U=K.__makeTemplateObject(['\n            "rules": { "typedef": [true, "array-destructuring"] }\n        '],['\n            "rules": { "typedef": [true, "array-destructuring"] }\n        ']))),pass:F.Utils.dedent(S||(S=K.__makeTemplateObject(["\n            const foobar = [1, '2'];\n            const [foo, bar]: Array<number | string> = foobar;\n        "],["\n            const foobar = [1, '2'];\n            const [foo, bar]: Array<number | string> = foobar;\n        "]))),fail:F.Utils.dedent(A||(A=K.__makeTemplateObject(["\n            const foobar = [1, '2'];\n            const [foo, bar] = foobar;\n        "],["\n            const foobar = [1, '2'];\n            const [foo, bar] = foobar;\n        "])))}]}});
//# sourceMappingURL=8.899a5ab2.chunk.js.map