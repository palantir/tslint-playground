{"version":3,"sources":["../node_modules/tslint/lib/rules/noUnnecessaryClassRule.js"],"names":["Object","defineProperty","exports","value","tslib_1","__webpack_require__","ts","Lint","tsutils_1","OPTION__ALLOW_CONSTRUCTOR_ONLY","OPTION__ALLOW_EMPTY_CLASS","OPTION__ALLOW_STATIC_ONLY","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithWalker","NoUnnecessaryClassWalker","ruleName","allowConstructorOnly","options","ruleArguments","indexOf","allowEmptyClass","allowStaticOnly","metadata","description","Utils","dedent","templateObject_1","__makeTemplateObject","rationale","templateObject_2","optionsDescription","templateObject_3","type","items","minLength","maxLength","optionExamples","typescriptOnly","FAILURE_CONSTRUCTOR_ONLY","FAILURE_STATIC_ONLY","FAILURE_EMPTY_CLASS","Rules","AbstractRule","walk","_this","checkIfUnnecessaryClass","node","declaration","isClassDeclaration","undefined","heritageClauses","token","SyntaxKind","ExtendsKeyword","checkMembers","forEachChild","members","length","allMembersAreConstructors","every","isConstructorDeclaration","some","isConstructorWithShorthandProps","addFailureAtNode","getChildOfKind","ClassKeyword","isNonStaticMember","AbstractWalker","member","hasModifier","modifiers","StaticKeyword","parameters","isParameterProperty"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,IACAE,EAAAF,EAAA,MACAG,EAAAH,EAAA,KACAI,EAAA,yBACAC,EAAA,oBACAC,EAAA,oBAQA,IAAAC,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KA2BA,OA7BAX,EAAAa,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,gBAAA,IAAAC,EAAAF,EAAAJ,KAAAO,UAXAC,sBAAA,KAFAC,EAaAT,KAAAU,eAXAC,QAAAjB,GACAkB,iBAAA,IAAAH,EAAAE,QAAAhB,GACAkB,iBAAA,IAAAJ,EAAAE,QAAAf,MAJA,IAAAa,GAgBAZ,EAAAiB,UACAP,SAAA,uBACAQ,YAAAvB,EAAAwB,MAAAC,OAAAC,MAAA7B,EAAA8B,sBAAA,4IACAC,UAAA5B,EAAAwB,MAAAC,OAAAI,MAAAhC,EAAA8B,sBAAA,gXACAG,mBAAA9B,EAAAwB,MAAAC,OAAAM,MAAAlC,EAAA8B,sBAAA,4SAA+U,8TAC/UV,SACAe,KAAA,QACAC,OACAD,KAAA,UAEAE,UAAA,EACAC,UAAA,GAEAC,iBAAA,kDACAJ,KAAA,gBACAK,gBAAA,GAGAhC,EAAAiC,yBAAA,sEACAjC,EAAAkC,oBAAA,iFACAlC,EAAAmC,oBAAA,6BACAnC,EA9BA,CA+BCL,EAAAyC,MAAAC,cACD/C,EAAAU,OACA,IAgDAqB,EAAAG,EAAAE,EAhDAjB,EAAA,SAAAR,GAEA,SAAAQ,IACA,cAAAR,KAAAC,MAAAC,KAAAC,YAAAD,KA+BA,OAjCAX,EAAAa,UAAAI,EAAAR,GAIAQ,EAAAH,UAAAgC,KAAA,SAAA/B,GACA,IAAAgC,EAAApC,KACAqC,EAAA,SAAAC,GAkCA,IAAAC,EA9BA,OAHA9C,EAAA+C,mBAAAF,UAkCAG,KADAF,EAjCAD,GAkCAI,iBACAH,EAAAG,gBAAA,GAAAC,QAAApD,EAAAqD,WAAAC,iBAlCAT,EAAAU,aAAAR,GAEA/C,EAAAwD,aAAAT,EAAAD,IAEA9C,EAAAwD,aAAA3C,EAAAiC,IAEA/B,EAAAH,UAAA2C,aAAA,SAAAR,GACA,OAAAA,EAAAU,QAAAC,OAAA,CAMA,IAAAC,EAAAZ,EAAAU,QAAAG,MAAA1D,EAAA2D,2BACAF,GACAlD,KAAAS,QAAAD,sBACA8B,EAAAU,QAAAK,KAAAC,IACAtD,KAAAuD,iBAAA9D,EAAA+D,eAAAlB,EAAA/C,EAAAqD,WAAAa,aAAAzD,KAAAI,YAAAP,EAAAiC,0BAEAoB,GACAlD,KAAAS,QAAAI,iBACAyB,EAAAU,QAAAK,KAAAK,IACA1D,KAAAuD,iBAAA9D,EAAA+D,eAAAlB,EAAA/C,EAAAqD,WAAAa,aAAAzD,KAAAI,YAAAP,EAAAkC,0BAdA/B,KAAAS,QAAAG,iBACAZ,KAAAuD,iBAAA9D,EAAA+D,eAAAlB,EAAA/C,EAAAqD,WAAAa,cAAA5D,EAAAmC,sBAgBA1B,EAlCA,CAmCCd,EAAAmE,gBACD,SAAAD,EAAAE,GACA,OAAAN,EAAAM,KACAnE,EAAA2D,yBAAAQ,KACAnE,EAAAoE,YAAAD,EAAAE,UAAAvE,EAAAqD,WAAAmB,eAMA,SAAAT,EAAAM,GACA,OAAAnE,EAAA2D,yBAAAQ,MAAAI,WAAAX,KAAA5D,EAAAwE","file":"static/js/73.34276723.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2017 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar tsutils_1 = require(\"tsutils\");\nvar OPTION__ALLOW_CONSTRUCTOR_ONLY = \"allow-constructor-only\";\nvar OPTION__ALLOW_EMPTY_CLASS = \"allow-empty-class\";\nvar OPTION__ALLOW_STATIC_ONLY = \"allow-static-only\";\nfunction parseOptions(options) {\n    return {\n        allowConstructorOnly: options.indexOf(OPTION__ALLOW_CONSTRUCTOR_ONLY) !== -1,\n        allowEmptyClass: options.indexOf(OPTION__ALLOW_EMPTY_CLASS) !== -1,\n        allowStaticOnly: options.indexOf(OPTION__ALLOW_STATIC_ONLY) !== -1,\n    };\n}\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithWalker(new NoUnnecessaryClassWalker(sourceFile, this.ruleName, parseOptions(this.ruleArguments)));\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-unnecessary-class\",\n        description: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Disallows classes that are not strictly necessary.\"], [\"\\n            Disallows classes that are not strictly necessary.\"]))),\n        rationale: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            Users who come from a Java-style OO language may wrap\\n            their utility functions in an extra class, instead of\\n            putting them at the top level.\"], [\"\\n            Users who come from a Java-style OO language may wrap\\n            their utility functions in an extra class, instead of\\n            putting them at the top level.\"]))),\n        optionsDescription: Lint.Utils.dedent(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n            Three arguments may be optionally provided:\\n\\n            * `\\\"allow-constructor-only\\\"` ignores classes whose members are constructors.\\n            * `\\\"allow-empty-class\\\"` ignores `class DemoClass {}`.\\n            * `\\\"allow-static-only\\\"` ignores classes whose members are static.\"], [\"\\n            Three arguments may be optionally provided:\\n\\n            * \\\\`\\\"allow-constructor-only\\\"\\\\` ignores classes whose members are constructors.\\n            * \\\\`\\\"allow-empty-class\\\"\\\\` ignores \\\\`class DemoClass {}\\\\`.\\n            * \\\\`\\\"allow-static-only\\\"\\\\` ignores classes whose members are static.\"]))),\n        options: {\n            type: \"array\",\n            items: {\n                type: \"string\",\n            },\n            minLength: 0,\n            maxLength: 3,\n        },\n        optionExamples: [true, [\"allow-empty-class\", \"allow-constructor-only\"]],\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_CONSTRUCTOR_ONLY = \"Every member of this class is a constructor. Use functions instead.\";\n    Rule.FAILURE_STATIC_ONLY = \"Every member of this class is static. Use namespaces or plain objects instead.\";\n    Rule.FAILURE_EMPTY_CLASS = \"This class has no members.\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nvar NoUnnecessaryClassWalker = /** @class */ (function (_super) {\n    tslib_1.__extends(NoUnnecessaryClassWalker, _super);\n    function NoUnnecessaryClassWalker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoUnnecessaryClassWalker.prototype.walk = function (sourceFile) {\n        var _this = this;\n        var checkIfUnnecessaryClass = function (node) {\n            if (tsutils_1.isClassDeclaration(node) && !hasExtendsClause(node)) {\n                _this.checkMembers(node);\n            }\n            return ts.forEachChild(node, checkIfUnnecessaryClass);\n        };\n        ts.forEachChild(sourceFile, checkIfUnnecessaryClass);\n    };\n    NoUnnecessaryClassWalker.prototype.checkMembers = function (node) {\n        if (node.members.length === 0) {\n            if (!this.options.allowEmptyClass) {\n                this.addFailureAtNode(tsutils_1.getChildOfKind(node, ts.SyntaxKind.ClassKeyword), Rule.FAILURE_EMPTY_CLASS);\n            }\n            return;\n        }\n        var allMembersAreConstructors = node.members.every(tsutils_1.isConstructorDeclaration);\n        if (allMembersAreConstructors &&\n            !this.options.allowConstructorOnly &&\n            !node.members.some(isConstructorWithShorthandProps)) {\n            this.addFailureAtNode(tsutils_1.getChildOfKind(node, ts.SyntaxKind.ClassKeyword, this.sourceFile), Rule.FAILURE_CONSTRUCTOR_ONLY);\n        }\n        if (!allMembersAreConstructors &&\n            !this.options.allowStaticOnly &&\n            !node.members.some(isNonStaticMember)) {\n            this.addFailureAtNode(tsutils_1.getChildOfKind(node, ts.SyntaxKind.ClassKeyword, this.sourceFile), Rule.FAILURE_STATIC_ONLY);\n        }\n    };\n    return NoUnnecessaryClassWalker;\n}(Lint.AbstractWalker));\nfunction isNonStaticMember(member) {\n    return (isConstructorWithShorthandProps(member) ||\n        (!tsutils_1.isConstructorDeclaration(member) &&\n            !tsutils_1.hasModifier(member.modifiers, ts.SyntaxKind.StaticKeyword)));\n}\nfunction hasExtendsClause(declaration) {\n    return (declaration.heritageClauses !== undefined &&\n        declaration.heritageClauses[0].token === ts.SyntaxKind.ExtendsKeyword);\n}\nfunction isConstructorWithShorthandProps(member) {\n    return tsutils_1.isConstructorDeclaration(member) && member.parameters.some(tsutils_1.isParameterProperty);\n}\nvar templateObject_1, templateObject_2, templateObject_3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noUnnecessaryClassRule.js\n// module id = 2104\n// module chunks = 73"],"sourceRoot":""}